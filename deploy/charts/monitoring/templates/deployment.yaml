apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: stackrox
    app: monitoring
  annotations:
    owner: stackrox
    email: support@stackrox.com
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: monitoring
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      labels:
        app.kubernetes.io/name: stackrox
        app: monitoring
    spec:
      {{ if .Values.nodeSelector -}}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{ else if .Capabilities.APIVersions.Has "apps.openshift.io/v1" }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 25
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/compute
                    operator: In
                    values:
                    - "true"
            - weight: 75
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/infra
                    operator: NotIn
                    values:
                    - "true"
            - weight: 100
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: NotIn
                    values:
                    - "true"
      {{- end}}
      serviceAccount: monitoring
      containers:
      - name: influxdb
        image: {{ required "An image is required" .Values.image }}
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "/influx-post-start.sh"]
        command:
        - /influxd
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          capabilities:
            drop: ["NET_RAW"]
          readOnlyRootFilesystem: true
        volumeMounts:
          - name: influxdb-config-volume
            mountPath: /etc/influxdb/
            readOnly: true
          - name: data-volume
            mountPath: /var/lib/influxdb
      - name: telegraf-proxy
        image: {{ required "An image is required" .Values.image }}
        command:
        - /telegraf
        ports:
        - name: api
          containerPort: 443
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
          limits:
            memory: "200Mi"
            cpu: "200m"
        securityContext:
          capabilities:
            drop: ["NET_RAW"]
          readOnlyRootFilesystem: true
        volumeMounts:
          - name: monitoring-db-volume
            mountPath: /run/secrets/stackrox.io/monitoring/certs/
            readOnly: true
          - name: telegraf-proxy-config-volume
            mountPath: /etc/telegraf
            readOnly: true
      - name: grafana
        image: {{ required "An image is required" .Values.image }}
        command:
        - /grafana-entrypoint.sh
        - /run.sh
        ports:
        - name: api
          containerPort: 3000
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
          limits:
            memory: "500Mi"
            cpu: "500m"
        securityContext:
          capabilities:
            drop: ["NET_RAW"]
          readOnlyRootFilesystem: true
        volumeMounts:
          - name: grafana-config-volume
            mountPath: /etc/grafana
          - name: monitoring-ui-volume
            mountPath: /run/secrets/stackrox.io/monitoring/certs/
            readOnly: true
          - name: monitoring-password-volume
            mountPath: /run/secrets/stackrox.io/monitoring/secrets/
            readOnly: true
          - name: data-volume
            mountPath: /var/lib/grafana
      volumes:
      - name: grafana-config-volume
        emptyDir: {}
      - name: monitoring-db-volume
        secret:
          secretName: monitoring
          items:
            - key: monitoring-db-cert.pem
              path: cert.pem
            - key: monitoring-db-key.pem
              path: key.pem
            - key: monitoring-ca.pem
              path: ca.pem
      - name: monitoring-ui-volume
        secret:
          secretName: monitoring
          items:
            - key: monitoring-ui-cert.pem
              path: cert.pem
            - key: monitoring-ui-key.pem
              path: key.pem
      - name: monitoring-password-volume
        secret:
          secretName: monitoring
          items:
            - key: monitoring-password
              path: password
      - name: influxdb-config-volume
        configMap:
          name: influxdb
      - name: telegraf-proxy-config-volume
        configMap:
          name: telegraf-proxy
      - name: data-volume
        {{- if eq .Values.persistence.type "hostpath" }}
        hostPath:
          path: {{ required "A persistence host path must be specified" .Values.persistence.hostPath }}
        {{ else if eq .Values.persistence.type "pvc" }}
        persistentVolumeClaim:
          claimName: stackrox-monitoring
        {{ else if eq .Values.persistence.type "none" }}
        emptyDir: {}
        {{ else }}
        {{ fail (printf "Invalid persistence type %s" .Values.persistence.type) }}
        {{ end }}
