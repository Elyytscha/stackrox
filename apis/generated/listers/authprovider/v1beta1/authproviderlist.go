// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/stackrox/stackrox/apis/authprovider/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AuthProviderListLister helps list AuthProviderLists.
// All objects returned here must be treated as read-only.
type AuthProviderListLister interface {
	// List lists all AuthProviderLists in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.AuthProviderList, err error)
	// AuthProviderLists returns an object that can list and get AuthProviderLists.
	AuthProviderLists(namespace string) AuthProviderListNamespaceLister
	AuthProviderListListerExpansion
}

// authProviderListLister implements the AuthProviderListLister interface.
type authProviderListLister struct {
	indexer cache.Indexer
}

// NewAuthProviderListLister returns a new AuthProviderListLister.
func NewAuthProviderListLister(indexer cache.Indexer) AuthProviderListLister {
	return &authProviderListLister{indexer: indexer}
}

// List lists all AuthProviderLists in the indexer.
func (s *authProviderListLister) List(selector labels.Selector) (ret []*v1beta1.AuthProviderList, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.AuthProviderList))
	})
	return ret, err
}

// AuthProviderLists returns an object that can list and get AuthProviderLists.
func (s *authProviderListLister) AuthProviderLists(namespace string) AuthProviderListNamespaceLister {
	return authProviderListNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AuthProviderListNamespaceLister helps list and get AuthProviderLists.
// All objects returned here must be treated as read-only.
type AuthProviderListNamespaceLister interface {
	// List lists all AuthProviderLists in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.AuthProviderList, err error)
	// Get retrieves the AuthProviderList from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.AuthProviderList, error)
	AuthProviderListNamespaceListerExpansion
}

// authProviderListNamespaceLister implements the AuthProviderListNamespaceLister
// interface.
type authProviderListNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AuthProviderLists in the indexer for a given namespace.
func (s authProviderListNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.AuthProviderList, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.AuthProviderList))
	})
	return ret, err
}

// Get retrieves the AuthProviderList from the indexer for a given namespace and name.
func (s authProviderListNamespaceLister) Get(name string) (*v1beta1.AuthProviderList, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("authproviderlist"), name)
	}
	return obj.(*v1beta1.AuthProviderList), nil
}
