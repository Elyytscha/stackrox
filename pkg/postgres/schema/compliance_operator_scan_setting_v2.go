// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"fmt"
	"reflect"

	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/features"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
	"github.com/stackrox/rox/pkg/search/postgres/mapping"
)

var (
	// CreateTableComplianceOperatorScanSettingV2Stmt holds the create statement for table `compliance_operator_scan_setting_v2`.
	CreateTableComplianceOperatorScanSettingV2Stmt = &postgres.CreateStmts{
		GormModel: (*ComplianceOperatorScanSettingV2)(nil),
		Children: []*postgres.CreateStmts{
			&postgres.CreateStmts{
				GormModel: (*ComplianceOperatorScanSettingV2Profiles)(nil),
				Children:  []*postgres.CreateStmts{},
			},
		},
	}

	// ComplianceOperatorScanSettingV2Schema is the go schema for table `compliance_operator_scan_setting_v2`.
	ComplianceOperatorScanSettingV2Schema = func() *walker.Schema {
		schema := GetSchemaForTable("compliance_operator_scan_setting_v2")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.ComplianceOperatorScanSettingV2)(nil)), "compliance_operator_scan_setting_v2")
		referencedSchemas := map[string]*walker.Schema{
			"storage.ComplianceOperatorProfileV2": ComplianceOperatorProfileV2Schema,
		}

		schema.ResolveReferences(func(messageTypeName string) *walker.Schema {
			return referencedSchemas[fmt.Sprintf("storage.%s", messageTypeName)]
		})
		schema.SetOptionsMap(search.Walk(v1.SearchCategory_COMPLIANCE_SCAN_SETTINGS, "complianceoperatorscansettingv2", (*storage.ComplianceOperatorScanSettingV2)(nil)))
		schema.ScopingResource = resources.ComplianceOperator
		RegisterTable(schema, CreateTableComplianceOperatorScanSettingV2Stmt, features.ComplianceEnhancements.Enabled)
		mapping.RegisterCategoryToTable(v1.SearchCategory_COMPLIANCE_SCAN_SETTINGS, schema)
		return schema
	}()
)

const (
	// ComplianceOperatorScanSettingV2TableName specifies the name of the table in postgres.
	ComplianceOperatorScanSettingV2TableName = "compliance_operator_scan_setting_v2"
	// ComplianceOperatorScanSettingV2ProfilesTableName specifies the name of the table in postgres.
	ComplianceOperatorScanSettingV2ProfilesTableName = "compliance_operator_scan_setting_v2_profiles"
)

// ComplianceOperatorScanSettingV2 holds the Gorm model for Postgres table `compliance_operator_scan_setting_v2`.
type ComplianceOperatorScanSettingV2 struct {
	ID            string `gorm:"column:id;type:uuid;primaryKey"`
	ScanName      string `gorm:"column:scanname;type:varchar;unique"`
	CreatedByName string `gorm:"column:createdby_name;type:varchar"`
	Serialized    []byte `gorm:"column:serialized;type:bytea"`
}

// ComplianceOperatorScanSettingV2Profiles holds the Gorm model for Postgres table `compliance_operator_scan_setting_v2_profiles`.
type ComplianceOperatorScanSettingV2Profiles struct {
	ComplianceOperatorScanSettingV2ID  string                          `gorm:"column:compliance_operator_scan_setting_v2_id;type:uuid;primaryKey"`
	Idx                                int                             `gorm:"column:idx;type:integer;primaryKey;index:complianceoperatorscansettingv2profiles_idx,type:btree"`
	ProfileID                          string                          `gorm:"column:profileid;type:varchar"`
	ComplianceOperatorScanSettingV2Ref ComplianceOperatorScanSettingV2 `gorm:"foreignKey:compliance_operator_scan_setting_v2_id;references:id;belongsTo;constraint:OnDelete:CASCADE"`
}
