// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"reflect"
	"time"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
)

var (
	// CreateTableUsageStmt holds the create statement for table `usage`.
	CreateTableUsageStmt = &postgres.CreateStmts{
		GormModel: (*Usage)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// UsageSchema is the go schema for table `usage`.
	UsageSchema = func() *walker.Schema {
		schema := GetSchemaForTable("usage")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.Usage)(nil)), "usage")
		RegisterTable(schema, CreateTableUsageStmt)
		return schema
	}()
)

const (
	// UsageTableName specifies the name of the table in postgres.
	UsageTableName = "usage"
)

// Usage holds the Gorm model for Postgres table `usage`.
type Usage struct {
	Timestamp  *time.Time `gorm:"column:timestamp;type:timestamp;primaryKey"`
	Serialized []byte     `gorm:"column:serialized;type:bytea"`
}
