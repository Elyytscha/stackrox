// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"reflect"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
)

var (
	// CreateTablePolicySyncsStmt holds the create statement for table `policy_syncs`.
	CreateTablePolicySyncsStmt = &postgres.CreateStmts{
		GormModel: (*PolicySyncs)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// PolicySyncsSchema is the go schema for table `policy_syncs`.
	PolicySyncsSchema = func() *walker.Schema {
		schema := GetSchemaForTable("policy_syncs")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.PolicySync)(nil)), "policy_syncs")
		schema.ScopingResource = resources.WorkflowAdministration
		RegisterTable(schema, CreateTablePolicySyncsStmt)
		return schema
	}()
)

const (
	// PolicySyncsTableName specifies the name of the table in postgres.
	PolicySyncsTableName = "policy_syncs"
)

// PolicySyncs holds the Gorm model for Postgres table `policy_syncs`.
type PolicySyncs struct {
	Serialized []byte `gorm:"column:serialized;type:bytea"`
}
