// Package tokenbased deals with token-based authentication.
// This can be either users from an auth provider, or API tokens generated by Prevent.
package tokenbased

import (
	"time"

	"github.com/stackrox/rox/pkg/auth/permissions"
)

// Identity represents a token-based identity.
type Identity interface {
	// ID is the id for this identity.
	ID() string
	// Role is the role this identity has.
	Role() permissions.Role
	// Expiration represents the expiration time of this identity.
	// A zero value represents no expiry.
	Expiration() time.Time
}

type identityImpl struct {
	id         string
	role       permissions.Role
	expiration time.Time
}

func (i *identityImpl) ID() string {
	return i.id
}

func (i *identityImpl) Role() permissions.Role {
	return i.role
}

func (i *identityImpl) Expiration() time.Time {
	return i.expiration
}

// NewIdentity returns an identity with the provided parameters.
func NewIdentity(id string, role permissions.Role, expiration time.Time) Identity {
	return &identityImpl{
		id:         id,
		role:       role,
		expiration: expiration,
	}
}
