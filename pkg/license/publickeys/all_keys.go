package publickeys

import (
	"github.com/stackrox/rox/pkg/license/validator"
)

// KeyAndAlgo represents a public key and the signing algorithm.
type KeyAndAlgo struct {
	Algo string
	Key  []byte
}

// This block enumerates all known public keys.
var (
	CI = KeyAndAlgo{
		Algo: validator.EC256,
		Key: []byte{
			0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,
			0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03,
			0x42, 0x00, 0x04, 0x67, 0x91, 0x74, 0xc6, 0x87, 0x11, 0xf8, 0x89, 0xb8,
			0x30, 0x4b, 0xec, 0x31, 0x74, 0x96, 0x5a, 0x3e, 0x2b, 0x5d, 0xa6, 0x7d,
			0xb3, 0x04, 0x75, 0xde, 0xd0, 0x7e, 0xac, 0xe7, 0xa6, 0xe0, 0xbb, 0x12,
			0x2b, 0x15, 0xbc, 0x88, 0x26, 0x59, 0x9d, 0xdb, 0xe2, 0x06, 0x90, 0x71,
			0xa4, 0xc6, 0x48, 0xb5, 0xa7, 0x7a, 0xb6, 0xcd, 0xd7, 0xb3, 0xcb, 0xbe,
			0x36, 0x40, 0x8a, 0xb9, 0x6b, 0x1e, 0x21,
		},
	}

	Demos = KeyAndAlgo{
		Algo: validator.EC256,
		// projects/stackrox-dev/locations/global/keyRings/licensing-demos/cryptoKeys/demo-license-signer/cryptoKeyVersions/1
		Key: []byte{
			0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,
			0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03,
			0x42, 0x00, 0x04, 0x00, 0xcd, 0x7d, 0xbd, 0x6d, 0xb5, 0xc1, 0x13, 0x4b,
			0x54, 0x7a, 0xe2, 0x80, 0x51, 0x51, 0x80, 0x38, 0x24, 0xd0, 0xd3, 0xb0,
			0x88, 0x02, 0x06, 0xb0, 0x69, 0xbd, 0x1d, 0x1b, 0x94, 0xb0, 0xbb, 0x8b,
			0xac, 0x63, 0x9e, 0xe7, 0x87, 0x20, 0xbb, 0x8f, 0x1b, 0x13, 0x42, 0xdb,
			0x0d, 0x23, 0xb3, 0x00, 0xd0, 0xb0, 0xe4, 0x28, 0xeb, 0x7b, 0x64, 0x1f,
			0x8b, 0x10, 0xb6, 0x3a, 0x89, 0xe7, 0xa8,
		},
	}

	Dev = KeyAndAlgo{
		Algo: validator.EC256,
		// projects/stackrox-dev/locations/us-west2/keyRings/licensing-dev/cryptoKeys/dev-license/cryptoKeyVersions/6
		Key: []byte{
			0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,
			0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03,
			0x42, 0x00, 0x04, 0x20, 0x03, 0xfc, 0x0d, 0x61, 0x6c, 0x5f, 0x9a, 0x7d,
			0x5b, 0xcc, 0x01, 0x10, 0xf1, 0x2d, 0x29, 0xae, 0x21, 0x84, 0x8f, 0xf2,
			0x6b, 0x2c, 0xaa, 0xed, 0x9e, 0xd2, 0xec, 0xd8, 0xf6, 0x08, 0x4a, 0x56,
			0xc3, 0x31, 0xfc, 0xe1, 0x82, 0x9a, 0x2f, 0x64, 0xd3, 0xe3, 0xb7, 0xa0,
			0x7d, 0x63, 0xed, 0x04, 0xfd, 0x92, 0xc1, 0xae, 0x48, 0x0a, 0xeb, 0xfb,
			0xb0, 0x00, 0x8a, 0xf4, 0xbb, 0x8d, 0x70,
		},
	}

	// OLD VERSION - NO LONGER USED FOR NEW LICENSES
	DevOld = KeyAndAlgo{
		Algo: validator.EC256,
		// projects/stackrox-dev/locations/us-west2/keyRings/licensing-dev/cryptoKeys/dev-license/cryptoKeyVersions/4
		Key: []byte{
			0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,
			0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03,
			0x42, 0x00, 0x04, 0xd6, 0x11, 0xd2, 0xbe, 0xfb, 0x44, 0x42, 0xce, 0xe5,
			0xe7, 0x08, 0xec, 0x2d, 0xe8, 0x7c, 0x77, 0x5a, 0xd8, 0xe9, 0x58, 0xcf,
			0x44, 0x4d, 0x8e, 0xcf, 0xc5, 0x9c, 0x74, 0x94, 0x1f, 0x84, 0x4a, 0x6d,
			0x22, 0xdb, 0xe1, 0x2c, 0x66, 0xc1, 0x1f, 0x05, 0x76, 0x8f, 0xeb, 0x92,
			0x57, 0x96, 0x04, 0xa2, 0xd9, 0x27, 0x6e, 0xd7, 0x37, 0x41, 0xf1, 0xc6,
			0xad, 0xe5, 0x46, 0x22, 0x13, 0xab, 0x09,
		},
	}

	Prod = KeyAndAlgo{
		Algo: validator.EC384,
		// projects/stackrox-licensing/locations/global/keyRings/production-key-ring/cryptoKeys/production-key/cryptoKeyVersions/1
		Key: []byte{
			0x30, 0x76, 0x30, 0x10, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,
			0x01, 0x06, 0x05, 0x2b, 0x81, 0x04, 0x00, 0x22, 0x03, 0x62, 0x00, 0x04,
			0xaa, 0x64, 0x79, 0x38, 0x48, 0xe9, 0x67, 0x27, 0x39, 0xc7, 0x62, 0x32,
			0x8d, 0x60, 0x68, 0x1f, 0x2c, 0x85, 0x47, 0x3e, 0x4b, 0x14, 0x0a, 0xf0,
			0x52, 0x71, 0x97, 0x07, 0xa7, 0x03, 0x8f, 0x4a, 0x63, 0xa9, 0x56, 0xb3,
			0xb6, 0xfe, 0x38, 0x5c, 0xf9, 0xb3, 0x3e, 0x07, 0x37, 0x2c, 0x29, 0x9f,
			0xd6, 0xcb, 0xdd, 0xff, 0xa8, 0xd2, 0x64, 0x27, 0x08, 0xc3, 0xac, 0x36,
			0x7b, 0x44, 0x32, 0xe9, 0x6e, 0x70, 0xd8, 0xd3, 0x64, 0xa1, 0x5c, 0x1d,
			0x57, 0xc9, 0x1a, 0x78, 0x51, 0x58, 0xa7, 0xfd, 0x6b, 0x70, 0x4a, 0x58,
			0x51, 0x34, 0x8a, 0x70, 0xbf, 0x18, 0x0a, 0xb7, 0xf3, 0x4b, 0x6e, 0xff,
		},
	}

	QA = KeyAndAlgo{
		Algo: validator.EC256,
		// projects/stackrox-dev/locations/global/keyRings/licensing-qa/cryptoKeys/qa-license-signer/cryptoKeyVersions/1
		Key: []byte{
			0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,
			0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03,
			0x42, 0x00, 0x04, 0xcd, 0xbd, 0x69, 0x82, 0xd5, 0xd5, 0x0d, 0x0e, 0xef,
			0x75, 0xe8, 0x30, 0x7c, 0x26, 0x2b, 0x8b, 0xea, 0xfe, 0x94, 0x3a, 0xee,
			0xcd, 0xf1, 0xc5, 0x50, 0xfb, 0xe2, 0x27, 0x67, 0xf3, 0x76, 0x17, 0x52,
			0x85, 0xe0, 0x1d, 0x92, 0xc8, 0xa9, 0xb1, 0xf8, 0x95, 0x62, 0x1c, 0xdd,
			0x91, 0x04, 0x3d, 0x6f, 0x15, 0x2c, 0x8a, 0xee, 0x14, 0xd5, 0xca, 0xde,
			0xbe, 0x82, 0xbe, 0x67, 0xab, 0xc0, 0xbd,
		},
	}
)
