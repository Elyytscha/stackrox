name: Build rocksdb on Power
description: Cross-compile rocksdb on Power using IBM Power cross-compiler
runs:
  using: composite
  steps:
    - name: Add GPG Key
      shell: bash
      run: |
        wget -qO- https://public.dhe.ibm.com/software/server/POWER/Linux/toolchain/at/ubuntu/dists/jammy/615d762f.gpg.key | sudo tee -a /etc/apt/trusted.gpg.d/615d762f.asc
        wget -qO- https://public.dhe.ibm.com/software/server/POWER/Linux/toolchain/at/ubuntu/dists/focal/6976a827.gpg.key | sudo tee -a /etc/apt/trusted.gpg.d/6976a827.asc

    - name: Update sources.list
      shell: bash
      run: |
        sudo su -c "echo 'deb [signed-by=/etc/apt/trusted.gpg.d/6976a827.asc] https://public.dhe.ibm.com/software/server/POWER/Linux/toolchain/at/ubuntu focal at15.0
                   deb [signed-by=/etc/apt/trusted.gpg.d/6976a827.asc] https://public.dhe.ibm.com/software/server/POWER/Linux/toolchain/at/ubuntu bionic at13.0
                   deb [arch=ppc64el] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted
                   deb [arch=ppc64el] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted
                   deb [arch=ppc64el] http://ports.ubuntu.com/ubuntu-ports/ jammy universe
                   deb [arch=ppc64el] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates universe
                   deb [arch=ppc64el] http://ports.ubuntu.com/ubuntu-ports/ jammy multiverse
                   deb [arch=ppc64el] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates multiverse
                   deb [arch=ppc64el] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
                   deb [arch=ppc64el] http://ports.ubuntu.com/ubuntu-ports/ jammy-security main restricted
                   deb [arch=ppc64el] http://ports.ubuntu.com/ubuntu-ports/ jammy-security universe
                   deb [arch=ppc64el] http://ports.ubuntu.com/ubuntu-ports/ jammy-security multiverse' >> /etc/apt/sources.list"


        sudo apt-get update -y;
        
    - name: Add ppc64le package support
      shell: bash
      run: sudo dpkg --add-architecture ppc64el

    - name: Intall IBM Advanced Toolchain Cross Compiler
      shell: bash
      run: |
        sudo apt install advance-toolchain-at15.0-cross-ppc64le

    - name: Install rocksdb deps
      shell: bash
      run: |
        sudo apt-get install -y libsnappy-dev:ppc64el
        sudo apt-get install -y zlib1g-dev:ppc64el
        sudo apt-get install -y libbz2-dev:ppc64el
        sudo apt-get install -y liblz4-dev:ppc64el
        sudo apt-get install -y libzstd-dev:ppc64el
        sudo apt-get install -y libgflags-dev:ppc64el

    - name: Clone rocksdb sources
      shell: bash
      run: |
        git clone https://github.com/facebook/rocksdb.git
        git checkout v6.15.4

    - name: Apply the git patch to make relevant changes
      shell: bash
      run: |
        cat <<- "EOF" > ppc64le.patch
        diff --git a/Makefile b/Makefile
        index 7cca4929b..552055bf1 100644
        --- a/Makefile
        +++ b/Makefile
        @@ -260,6 +260,10 @@ dummy := $(shell (export ROCKSDB_ROOT="$(CURDIR)"; \
                          export PORTABLE="$(PORTABLE)"; \
                          export ROCKSDB_NO_FBCODE="$(ROCKSDB_NO_FBCODE)"; \
                          export USE_CLANG="$(USE_CLANG)"; \
        +                  export TARGET_ARCHITECTURE="$(TARGET_ARCHITECTURE)"; \
        +                  export CC="$(CC)"; \
        +                  export CXX="$(CXX)"; \
        +                  export AR="$(AR)"; \
                          "$(CURDIR)/build_tools/build_detect_platform" "$(CURDIR)/make_config.mk"))
        # this file is generated by the previous line to set build flags and sources
        include make_config.mk
        diff --git a/build_tools/build_detect_platform b/build_tools/build_detect_platform
        index 805b7eab5..455dc3cee 100755
        --- a/build_tools/build_detect_platform
        +++ b/build_tools/build_detect_platform
        @@ -625,7 +625,7 @@ fi
        if test "0$PORTABLE" -eq 0; then
          if test -n "`echo $TARGET_ARCHITECTURE | grep ^ppc64`"; then
            # Tune for this POWER processor, treating '+' models as base models
        -    POWER=`LD_SHOW_AUXV=1 /bin/true | grep AT_PLATFORM | grep -E -o power[0-9]+`
        +    POWER="power9"
            COMMON_FLAGS="$COMMON_FLAGS -mcpu=$POWER -mtune=$POWER "
          elif test -n "`echo $TARGET_ARCHITECTURE | grep ^s390x`"; then
            COMMON_FLAGS="$COMMON_FLAGS -march=z10 " 
        EOF

        cd rocksdb
        git apply ../ppc64le.patch


    - name: Cross compile and install rocksdb
      shell: bash
      run: |
        make MACHINE=ppc64le TARGET_ARCHITECTURE=ppc64le CC="/opt/at13.0/bin/powerpc64le-linux-gnu-gcc" CXX="/opt/at13.0/bin/powerpc64le-linux-gnu-g++" AR="/opt/at13.0/bin/powerpc64le-linux-gnu-gcc-ar" shared_lib 

        make MACHINE=ppc64le TARGET_ARCHITECTURE=ppc64le CC="/opt/at13.0/bin/powerpc64le-linux-gnu-gcc" CXX="/opt/at13.0/bin/powerpc64le-linux-gnu-g++" AR="/opt/at13.0/bin/powerpc64le-linux-gnu-gcc-ar" static_lib 

        make MACHINE=ppc64le TARGET_ARCHITECTURE=ppc64le CC="/opt/at13.0/bin/powerpc64le-linux-gnu-gcc" CXX="/opt/at13.0/bin/powerpc64le-linux-gnu-g++" AR="/opt/at13.0/bin/powerpc64le-linux-gnu-gcc-ar" install-shared 

        make MACHINE=ppc64le TARGET_ARCHITECTURE=ppc64le CC="/opt/at13.0/bin/powerpc64le-linux-gnu-gcc" CXX="/opt/at13.0/bin/powerpc64le-linux-gnu-g++" AR="/opt/at13.0/bin/powerpc64le-linux-gnu-gcc-ar" install-static 

        cd ..
