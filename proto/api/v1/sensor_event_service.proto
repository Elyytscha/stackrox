syntax = "proto3";

option go_package = "v1";
option java_package = "stackrox.generated";

import "google/api/annotations.proto";
import "api/v1/deployment_service.proto";
import "api/v1/indicator.proto";
import "api/v1/network_policy_service.proto";
import "api/v1/policy_service.proto";
import "api/v1/secret_service.proto";

package v1;

enum ResourceAction {
    UNSET_ACTION_RESOURCE   = 0;
    CREATE_RESOURCE         = 1;
    REMOVE_RESOURCE         = 2;
    UPDATE_RESOURCE         = 3;
}

message SensorEvent {
    // These fields may be duplicated in the individual events, but avoid the need to branch all the time
    string         id                           = 1;
    ResourceAction action                       = 2;
    string         cluster_id                   = 3;

    oneof resource {
        NetworkPolicy network_policy = 4;
        Deployment    deployment     = 5;
        Namespace     namespace      = 6;
        Indicator     indicator      = 7;
        Secret        secret         = 8;
    }
}

message DeploymentEventResponse {
    string alert_id               = 1;
    EnforcementAction enforcement = 2;
    string deployment_id          = 3;
}

message NetworkPolicyEventResponse {
    string id = 1;
}

message NamespaceEventResponse {
    string id = 1;
}

message IndicatorEventResponse {
    string id = 1;
}

message SecretEventResponse {
    string id = 1;
}

message SensorEventResponse {
    oneof resource {
        DeploymentEventResponse    deployment     = 1;
        NetworkPolicyEventResponse network_policy = 2;
        NamespaceEventResponse     namespace      = 3;
        IndicatorEventResponse     indicator      = 4;
        SecretEventResponse        secret         = 5;
    }
}

service SensorEventService {
    rpc RecordEvent(stream SensorEvent) returns (stream SensorEventResponse) {
        option (google.api.http) = {
            post: "/v1/sensor/events"
            body: "*"
        };
    }

}
