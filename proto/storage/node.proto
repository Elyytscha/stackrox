syntax = "proto3";

option go_package = "storage";
option java_package = "io.stackrox.proto.storage";

import "google/protobuf/timestamp.proto";
import "scanner/api/v1/note.proto";
import "scanner/api/v1/component.proto";
import "storage/container_runtime.proto";
import "storage/taints.proto";
import "storage/vulnerability.proto";


package storage;

// Node represents information about a node in the cluster.
// next available tag: 28
message Node {
    // A unique ID identifying this node.
    string id                              = 1;  // @gotags: search:"Node ID,store" sql:"pk"
    // The (host)name of the node. Might or might not be the same as ID.
    string name                            = 2;  // @gotags: search:"Node,store"
    // Taints on the host
    repeated Taint taints                  = 3;
    string cluster_id                      = 4;  // @gotags: search:"Cluster ID,store" sql:"fk(Cluster:id),no-fk-constraint"
    string cluster_name                    = 5;  // @gotags: search:"Cluster,store"
    map<string, string> labels             = 6;  // @gotags: search:"Node Label"
    map<string, string> annotations        = 7;  // @gotags: search:"Node Annotation"
    // When the cluster reported the node was added
    google.protobuf.Timestamp joined_at    = 13;  // @gotags: search:"Node Join Time,store"
    // node internal IP addresses
    repeated string internal_ip_addresses  = 8;
    // node external IP addresses
    repeated string external_ip_addresses  = 9;
    // From NodeInfo
    string container_runtime_version       = 10 [deprecated = true];  // Use container_runtime.version
    ContainerRuntimeInfo container_runtime = 14;
    string kernel_version                  = 11;
    // From NodeInfo. Operating system reported by the node (ex: linux).
    string operating_system                = 17;
    // From NodeInfo. OS image reported by the node from /etc/os-release.
    string os_image                        = 12;  // @gotags: search:"Operating System,store"
    string kubelet_version                 = 15;
    string kube_proxy_version              = 16;

    google.protobuf.Timestamp last_updated = 25;  // @gotags: search:"Last Updated,hidden"
    // Time we received an update from Kubernetes.
    google.protobuf.Timestamp k8s_updated  = 26;  // @gotags: sensorhash:"ignore"

    NodeScan scan                          = 18;  // @gotags: policy:"Node Scan"
    oneof set_components {
        int32 components                   = 19;  // @gotags: search:"Component Count,store,hidden"
    }
    oneof set_cves {
        int32 cves                         = 20;  // @gotags: search:"CVE Count,store,hidden"
    }
    oneof set_fixable {
        int32 fixable_cves                 = 21;  // @gotags: search:"Fixable CVE Count,store,hidden"
    }
    int64 priority                         = 22;  // @gotags: search:"Node Risk Priority,hidden"
    float risk_score                       = 23;  // @gotags: search:"Node Risk Score,hidden"
    oneof set_top_cvss {
        float top_cvss                     = 24;  // @gotags: search:"Node Top CVSS,store"
    }

    enum Note {
        MISSING_SCAN_DATA = 0;
    }
    repeated Note notes                    = 27;
}

// Next tag: 5
message NodeScan {
    google.protobuf.Timestamp          scan_time        = 1;  // @gotags: search:"Node Scan Time,store"
    string                             operating_system = 3;
    repeated EmbeddedNodeScanComponent components       = 2;  // @gotags: sql:"-"

    enum Note {
        UNSET              = 0;
        UNSUPPORTED        = 1;
        KERNEL_UNSUPPORTED = 2;
    }
    repeated Note                      notes            = 4;
}

message NodeScanV2 {
    string                         node_id    = 1;  // @gotags: search:"Node ID,store" sql:"pk"
    string                         node_name  = 2;  // @gotags: search:"Node,store"
    google.protobuf.Timestamp      scan_time  = 3;  // @gotags: search:"Node Scan Time,store"
    scannerV1.Components           components = 4;
    repeated scannerV1.Note        notes      = 5;
}

message EmbeddedNodeScanComponent {
    string                         name             = 1;  // @gotags: search:"Component,store"
    string                         version          = 2;  // @gotags: search:"Component Version,store"
    repeated EmbeddedVulnerability vulns            = 3;
    repeated NodeVulnerability     vulnerabilities  = 7;
    int64                          priority         = 4;
    oneof set_top_cvss {
        float                      top_cvss         = 5;
    }
    float                          risk_score       = 6;
}
