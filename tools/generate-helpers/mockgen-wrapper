#!/usr/bin/env bash

# This script is a convenience wrapper around mockgen, designed to be
# added to PATH and used in go:generate commands.
# Invoke it without arguments to run mockgen in _source_ mode.
# This generates mocks for all interfaces defined in the file.
# However, this has limitations -- it doesn't currently work with embedded interfaces,
# and it does not work when generating mocks for code that will be generated by
# another go:generate command.
# For those cases, you can pass the name of the interface as an argument to this script
# which will run mockgen in "reflect" mode. Note that reflect mode is significantly slower,
# so it is recommended to use it only when necessary.

function die() {
	echo >&2 "$@"
	exit 1
}

[[ -n "$GOFILE" ]] || die "Required environment variable GOFILE not set"
package="$(go list)"
[[ -n "$package" ]] || die "Could not determine Go package for working directory $PWD"

mkdir -p mocks || die "Could not create '${PWD}/mocks' subdirectory"
if [[ "$#" -eq 0 ]]; then
   exec mockgen -package mocks -destination "mocks/${GOFILE}" -source "${GOFILE}"
else
  exec mockgen -package mocks -destination "mocks/${GOFILE}" "$package" "$@"
fi
