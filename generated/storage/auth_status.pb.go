// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage/auth_status.proto

package storage

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	types "github.com/gogo/protobuf/types"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthStatus struct {
	// Types that are valid to be assigned to Id:
	//	*AuthStatus_UserId
	//	*AuthStatus_ServiceId
	Id                   isAuthStatus_Id             `protobuf_oneof:"id"`
	Expires              *types.Timestamp            `protobuf:"bytes,3,opt,name=expires,proto3" json:"expires,omitempty"`
	RefreshUrl           string                      `protobuf:"bytes,4,opt,name=refresh_url,json=refreshUrl,proto3" json:"refresh_url,omitempty"`
	AuthProvider         *AuthProvider               `protobuf:"bytes,5,opt,name=auth_provider,json=authProvider,proto3" json:"auth_provider,omitempty"`
	UserInfo             *UserInfo                   `protobuf:"bytes,6,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	UserAttributes       []*AuthStatus_UserAttribute `protobuf:"bytes,7,rep,name=user_attributes,json=userAttributes,proto3" json:"user_attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *AuthStatus) Reset()         { *m = AuthStatus{} }
func (m *AuthStatus) String() string { return proto.CompactTextString(m) }
func (*AuthStatus) ProtoMessage()    {}
func (*AuthStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_8236d85a4693412c, []int{0}
}
func (m *AuthStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthStatus.Merge(m, src)
}
func (m *AuthStatus) XXX_Size() int {
	return m.Size()
}
func (m *AuthStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AuthStatus proto.InternalMessageInfo

type isAuthStatus_Id interface {
	isAuthStatus_Id()
	MarshalTo([]byte) (int, error)
	Size() int
	Clone() isAuthStatus_Id
}

type AuthStatus_UserId struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
}
type AuthStatus_ServiceId struct {
	ServiceId *ServiceIdentity `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3,oneof" json:"service_id,omitempty"`
}

func (*AuthStatus_UserId) isAuthStatus_Id() {}
func (m *AuthStatus_UserId) Clone() isAuthStatus_Id {
	if m == nil {
		return nil
	}
	cloned := new(AuthStatus_UserId)
	*cloned = *m

	return cloned
}
func (*AuthStatus_ServiceId) isAuthStatus_Id() {}
func (m *AuthStatus_ServiceId) Clone() isAuthStatus_Id {
	if m == nil {
		return nil
	}
	cloned := new(AuthStatus_ServiceId)
	*cloned = *m

	cloned.ServiceId = m.ServiceId.Clone()
	return cloned
}

func (m *AuthStatus) GetId() isAuthStatus_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *AuthStatus) GetUserId() string {
	if x, ok := m.GetId().(*AuthStatus_UserId); ok {
		return x.UserId
	}
	return ""
}

func (m *AuthStatus) GetServiceId() *ServiceIdentity {
	if x, ok := m.GetId().(*AuthStatus_ServiceId); ok {
		return x.ServiceId
	}
	return nil
}

func (m *AuthStatus) GetExpires() *types.Timestamp {
	if m != nil {
		return m.Expires
	}
	return nil
}

func (m *AuthStatus) GetRefreshUrl() string {
	if m != nil {
		return m.RefreshUrl
	}
	return ""
}

func (m *AuthStatus) GetAuthProvider() *AuthProvider {
	if m != nil {
		return m.AuthProvider
	}
	return nil
}

func (m *AuthStatus) GetUserInfo() *UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *AuthStatus) GetUserAttributes() []*AuthStatus_UserAttribute {
	if m != nil {
		return m.UserAttributes
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AuthStatus) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AuthStatus_UserId)(nil),
		(*AuthStatus_ServiceId)(nil),
	}
}

func (m *AuthStatus) MessageClone() proto.Message {
	return m.Clone()
}
func (m *AuthStatus) Clone() *AuthStatus {
	if m == nil {
		return nil
	}
	cloned := new(AuthStatus)
	*cloned = *m

	if m.Id != nil {
		cloned.Id = m.Id.Clone()
	}
	cloned.Expires = m.Expires.Clone()
	cloned.AuthProvider = m.AuthProvider.Clone()
	cloned.UserInfo = m.UserInfo.Clone()
	if m.UserAttributes != nil {
		cloned.UserAttributes = make([]*AuthStatus_UserAttribute, len(m.UserAttributes))
		for idx, v := range m.UserAttributes {
			cloned.UserAttributes[idx] = v.Clone()
		}
	}
	return cloned
}

type AuthStatus_UserAttribute struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values               []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthStatus_UserAttribute) Reset()         { *m = AuthStatus_UserAttribute{} }
func (m *AuthStatus_UserAttribute) String() string { return proto.CompactTextString(m) }
func (*AuthStatus_UserAttribute) ProtoMessage()    {}
func (*AuthStatus_UserAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_8236d85a4693412c, []int{0, 0}
}
func (m *AuthStatus_UserAttribute) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthStatus_UserAttribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthStatus_UserAttribute.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthStatus_UserAttribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthStatus_UserAttribute.Merge(m, src)
}
func (m *AuthStatus_UserAttribute) XXX_Size() int {
	return m.Size()
}
func (m *AuthStatus_UserAttribute) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthStatus_UserAttribute.DiscardUnknown(m)
}

var xxx_messageInfo_AuthStatus_UserAttribute proto.InternalMessageInfo

func (m *AuthStatus_UserAttribute) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AuthStatus_UserAttribute) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *AuthStatus_UserAttribute) MessageClone() proto.Message {
	return m.Clone()
}
func (m *AuthStatus_UserAttribute) Clone() *AuthStatus_UserAttribute {
	if m == nil {
		return nil
	}
	cloned := new(AuthStatus_UserAttribute)
	*cloned = *m

	if m.Values != nil {
		cloned.Values = make([]string, len(m.Values))
		copy(cloned.Values, m.Values)
	}
	return cloned
}

func init() {
	proto.RegisterType((*AuthStatus)(nil), "storage.AuthStatus")
	proto.RegisterType((*AuthStatus_UserAttribute)(nil), "storage.AuthStatus.UserAttribute")
}

func init() { proto.RegisterFile("storage/auth_status.proto", fileDescriptor_8236d85a4693412c) }

var fileDescriptor_8236d85a4693412c = []byte{
	// 410 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x52, 0x4b, 0x6e, 0xdb, 0x30,
	0x10, 0xb5, 0xac, 0xd4, 0xae, 0xc7, 0x4d, 0x3f, 0x44, 0x5b, 0xd0, 0x2e, 0xa0, 0xa8, 0x5d, 0x69,
	0x45, 0x01, 0x69, 0x36, 0xe9, 0x2e, 0x59, 0x25, 0x5d, 0x15, 0x4c, 0xb3, 0xe9, 0x46, 0xa0, 0x23,
	0x4a, 0x26, 0xa2, 0x98, 0x02, 0x3f, 0x46, 0x72, 0x93, 0x9e, 0xa3, 0xa7, 0xe8, 0xb2, 0x47, 0x28,
	0xdc, 0x8b, 0x14, 0xa2, 0xc8, 0xc4, 0xda, 0xcd, 0xbc, 0xf7, 0xe6, 0x71, 0xde, 0x80, 0xb0, 0xd0,
	0x46, 0x2a, 0x56, 0xf3, 0x9c, 0x59, 0xb3, 0x2e, 0xb4, 0x61, 0xc6, 0x6a, 0xd2, 0x2a, 0x69, 0x24,
	0x9a, 0x7a, 0x6a, 0x79, 0x54, 0x4b, 0x59, 0x37, 0x3c, 0x77, 0xf0, 0xca, 0x56, 0xb9, 0x11, 0x77,
	0x5c, 0x1b, 0x76, 0xd7, 0xf6, 0xca, 0xe5, 0xdb, 0x5a, 0xd6, 0xd2, 0x95, 0x79, 0x57, 0x79, 0xf4,
	0xc3, 0xc0, 0xba, 0x55, 0x72, 0x2b, 0x4a, 0xae, 0x3c, 0x99, 0x04, 0x52, 0x73, 0xb5, 0x15, 0x37,
	0xbc, 0x10, 0x25, 0xdf, 0x18, 0x61, 0x1e, 0x3c, 0x8f, 0x02, 0x6f, 0x75, 0x98, 0xf9, 0xf4, 0x2b,
	0x06, 0x38, 0xb3, 0x66, 0x7d, 0xe5, 0xb6, 0x44, 0x0b, 0x98, 0x76, 0x64, 0x21, 0x4a, 0x1c, 0xa5,
	0x51, 0x36, 0xbb, 0x18, 0xd1, 0x49, 0x07, 0x5c, 0x96, 0xe8, 0x14, 0xe0, 0xc9, 0x17, 0x8f, 0xd3,
	0x28, 0x9b, 0x1f, 0x63, 0xe2, 0x2d, 0xc9, 0x55, 0x4f, 0x5d, 0xfa, 0x17, 0x2f, 0x46, 0x74, 0xa6,
	0x03, 0x84, 0x4e, 0x60, 0xca, 0xef, 0x5b, 0xa1, 0xb8, 0xc6, 0xb1, 0x9b, 0x5b, 0x92, 0x3e, 0x3e,
	0x09, 0xf1, 0xc9, 0xf7, 0x10, 0x9f, 0x06, 0x29, 0x3a, 0x82, 0xb9, 0xe2, 0x95, 0xe2, 0x7a, 0x5d,
	0x58, 0xd5, 0xe0, 0x83, 0x6e, 0x1f, 0x0a, 0x1e, 0xba, 0x56, 0x0d, 0xfa, 0x02, 0x87, 0x83, 0x33,
	0xe0, 0x67, 0xce, 0xfc, 0xdd, 0xe3, 0x52, 0x5d, 0xb0, 0x6f, 0x9e, 0xa4, 0x2f, 0xd8, 0x5e, 0x87,
	0x08, 0xcc, 0xfa, 0xa0, 0x9b, 0x4a, 0xe2, 0x89, 0x9b, 0x7b, 0xf3, 0x38, 0x77, 0xdd, 0x25, 0xde,
	0x54, 0x92, 0x3e, 0xb7, 0xbe, 0x42, 0x5f, 0xe1, 0x95, 0xd3, 0x33, 0x63, 0x94, 0x58, 0x59, 0xc3,
	0x35, 0x9e, 0xa6, 0x71, 0x36, 0x3f, 0xfe, 0x38, 0x78, 0xad, 0x3f, 0xa3, 0x33, 0x38, 0x0b, 0x4a,
	0xfa, 0xd2, 0xee, 0xb7, 0x7a, 0x79, 0x0a, 0x87, 0x03, 0x01, 0x7a, 0x0d, 0xf1, 0x2d, 0x7f, 0xe8,
	0x2f, 0x4e, 0xbb, 0x12, 0xbd, 0x87, 0xc9, 0x96, 0x35, 0x96, 0x6b, 0x3c, 0x4e, 0xe3, 0x6c, 0x46,
	0x7d, 0x77, 0x7e, 0x00, 0x63, 0x51, 0x9e, 0x9f, 0xfc, 0xde, 0x25, 0xd1, 0x9f, 0x5d, 0x12, 0xfd,
	0xdd, 0x25, 0xd1, 0xcf, 0x7f, 0xc9, 0x08, 0x16, 0x42, 0x12, 0x6d, 0xd8, 0xcd, 0xad, 0x92, 0xf7,
	0xfd, 0x51, 0xc3, 0x5a, 0x3f, 0xc2, 0x97, 0x5b, 0x4d, 0x1c, 0xfe, 0xf9, 0x7f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x88, 0xa3, 0xff, 0x31, 0x9f, 0x02, 0x00, 0x00,
}

func (m *AuthStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UserAttributes) > 0 {
		for iNdEx := len(m.UserAttributes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.UserAttributes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAuthStatus(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.UserInfo != nil {
		{
			size, err := m.UserInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintAuthStatus(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.AuthProvider != nil {
		{
			size, err := m.AuthProvider.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintAuthStatus(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.RefreshUrl) > 0 {
		i -= len(m.RefreshUrl)
		copy(dAtA[i:], m.RefreshUrl)
		i = encodeVarintAuthStatus(dAtA, i, uint64(len(m.RefreshUrl)))
		i--
		dAtA[i] = 0x22
	}
	if m.Expires != nil {
		{
			size, err := m.Expires.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintAuthStatus(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != nil {
		{
			size := m.Id.Size()
			i -= size
			if _, err := m.Id.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *AuthStatus_UserId) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthStatus_UserId) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i -= len(m.UserId)
	copy(dAtA[i:], m.UserId)
	i = encodeVarintAuthStatus(dAtA, i, uint64(len(m.UserId)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}
func (m *AuthStatus_ServiceId) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthStatus_ServiceId) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ServiceId != nil {
		{
			size, err := m.ServiceId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintAuthStatus(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *AuthStatus_UserAttribute) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthStatus_UserAttribute) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthStatus_UserAttribute) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Values) > 0 {
		for iNdEx := len(m.Values) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Values[iNdEx])
			copy(dAtA[i:], m.Values[iNdEx])
			i = encodeVarintAuthStatus(dAtA, i, uint64(len(m.Values[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintAuthStatus(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintAuthStatus(dAtA []byte, offset int, v uint64) int {
	offset -= sovAuthStatus(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AuthStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		n += m.Id.Size()
	}
	if m.Expires != nil {
		l = m.Expires.Size()
		n += 1 + l + sovAuthStatus(uint64(l))
	}
	l = len(m.RefreshUrl)
	if l > 0 {
		n += 1 + l + sovAuthStatus(uint64(l))
	}
	if m.AuthProvider != nil {
		l = m.AuthProvider.Size()
		n += 1 + l + sovAuthStatus(uint64(l))
	}
	if m.UserInfo != nil {
		l = m.UserInfo.Size()
		n += 1 + l + sovAuthStatus(uint64(l))
	}
	if len(m.UserAttributes) > 0 {
		for _, e := range m.UserAttributes {
			l = e.Size()
			n += 1 + l + sovAuthStatus(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AuthStatus_UserId) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserId)
	n += 1 + l + sovAuthStatus(uint64(l))
	return n
}
func (m *AuthStatus_ServiceId) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ServiceId != nil {
		l = m.ServiceId.Size()
		n += 1 + l + sovAuthStatus(uint64(l))
	}
	return n
}
func (m *AuthStatus_UserAttribute) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovAuthStatus(uint64(l))
	}
	if len(m.Values) > 0 {
		for _, s := range m.Values {
			l = len(s)
			n += 1 + l + sovAuthStatus(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovAuthStatus(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAuthStatus(x uint64) (n int) {
	return sovAuthStatus(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AuthStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = &AuthStatus_UserId{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ServiceIdentity{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Id = &AuthStatus_ServiceId{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Expires", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Expires == nil {
				m.Expires = &types.Timestamp{}
			}
			if err := m.Expires.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RefreshUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthProvider", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuthProvider == nil {
				m.AuthProvider = &AuthProvider{}
			}
			if err := m.AuthProvider.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserInfo == nil {
				m.UserInfo = &UserInfo{}
			}
			if err := m.UserInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserAttributes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserAttributes = append(m.UserAttributes, &AuthStatus_UserAttribute{})
			if err := m.UserAttributes[len(m.UserAttributes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthStatus_UserAttribute) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserAttribute: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserAttribute: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Values", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Values = append(m.Values, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAuthStatus(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAuthStatus
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuthStatus
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuthStatus
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAuthStatus
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAuthStatus
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAuthStatus
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAuthStatus        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAuthStatus          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAuthStatus = fmt.Errorf("proto: unexpected end of group")
)
