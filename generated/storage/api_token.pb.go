// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage/api_token.proto

package storage

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	types "github.com/gogo/protobuf/types"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TokenMetadata struct {
	Id                   string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" sql:"pk"`
	Name                 string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" search:"API Token Name,store" sql:"index=category:unique;name:apitokens_unique_name_indicator"`
	Roles                []string         `protobuf:"bytes,7,rep,name=roles,proto3" json:"roles,omitempty"`
	IssuedAt             *types.Timestamp `protobuf:"bytes,4,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	Expiration           *types.Timestamp `protobuf:"bytes,5,opt,name=expiration,proto3" json:"expiration,omitempty" search:"Expiration,store"`
	Revoked              bool             `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty" search:"Revoked,store"`
	Role                 string           `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TokenMetadata) Reset()         { *m = TokenMetadata{} }
func (m *TokenMetadata) String() string { return proto.CompactTextString(m) }
func (*TokenMetadata) ProtoMessage()    {}
func (*TokenMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11d10095315801c, []int{0}
}
func (m *TokenMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TokenMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TokenMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TokenMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenMetadata.Merge(m, src)
}
func (m *TokenMetadata) XXX_Size() int {
	return m.Size()
}
func (m *TokenMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_TokenMetadata proto.InternalMessageInfo

func (m *TokenMetadata) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TokenMetadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TokenMetadata) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *TokenMetadata) GetIssuedAt() *types.Timestamp {
	if m != nil {
		return m.IssuedAt
	}
	return nil
}

func (m *TokenMetadata) GetExpiration() *types.Timestamp {
	if m != nil {
		return m.Expiration
	}
	return nil
}

func (m *TokenMetadata) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

// Deprecated: Do not use.
func (m *TokenMetadata) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *TokenMetadata) MessageClone() proto.Message {
	return m.Clone()
}
func (m *TokenMetadata) Clone() *TokenMetadata {
	if m == nil {
		return nil
	}
	cloned := new(TokenMetadata)
	*cloned = *m

	if m.Roles != nil {
		cloned.Roles = make([]string, len(m.Roles))
		copy(cloned.Roles, m.Roles)
	}
	cloned.IssuedAt = m.IssuedAt.Clone()
	cloned.Expiration = m.Expiration.Clone()
	return cloned
}

func init() {
	proto.RegisterType((*TokenMetadata)(nil), "storage.TokenMetadata")
}

func init() { proto.RegisterFile("storage/api_token.proto", fileDescriptor_c11d10095315801c) }

var fileDescriptor_c11d10095315801c = []byte{
	// 401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0xc5, 0x6d, 0x77, 0xdb, 0x1a, 0xb8, 0x58, 0xab, 0xc5, 0x5b, 0x41, 0x12, 0xe5, 0x94, 0x03,
	0x4a, 0x24, 0x58, 0x09, 0x29, 0x88, 0xc3, 0x46, 0xe2, 0xc0, 0x01, 0x84, 0xa2, 0xbd, 0xc0, 0x81,
	0xc8, 0x4d, 0x86, 0x60, 0xa5, 0x89, 0xb3, 0xb6, 0x53, 0x95, 0x3f, 0xe1, 0xc2, 0xff, 0x70, 0xe4,
	0x0b, 0x22, 0x54, 0xfe, 0x20, 0x5f, 0x80, 0x62, 0x37, 0x88, 0x1b, 0x37, 0xcf, 0x9b, 0x79, 0xcf,
	0xf3, 0x9e, 0x06, 0x3f, 0x52, 0x5a, 0x48, 0x56, 0x42, 0xc4, 0x5a, 0x9e, 0x69, 0x51, 0x41, 0x13,
	0xb6, 0x52, 0x68, 0x41, 0x96, 0xa7, 0xc6, 0xc6, 0x2d, 0x85, 0x28, 0x77, 0x10, 0x19, 0x78, 0xdb,
	0x7d, 0x8e, 0x34, 0xaf, 0x41, 0x69, 0x56, 0xb7, 0x76, 0x72, 0x73, 0x51, 0x8a, 0x52, 0x98, 0x67,
	0x34, 0xbe, 0x2c, 0xea, 0x7f, 0x9f, 0xe3, 0x87, 0xb7, 0xa3, 0xde, 0x5b, 0xd0, 0xac, 0x60, 0x9a,
	0x91, 0xc7, 0x78, 0xc6, 0x0b, 0x8a, 0x3c, 0x14, 0xac, 0x93, 0x07, 0x43, 0xef, 0xae, 0xd4, 0xdd,
	0x2e, 0xf6, 0xdb, 0xca, 0x4f, 0x67, 0xbc, 0x20, 0x7b, 0xbc, 0x68, 0x58, 0x0d, 0x74, 0x66, 0xfa,
	0xdb, 0xa1, 0x77, 0x3f, 0x29, 0x60, 0x32, 0xff, 0x12, 0xfb, 0x37, 0xef, 0xdf, 0x78, 0x46, 0xca,
	0x7b, 0xc7, 0x6a, 0x78, 0x3a, 0x2e, 0x06, 0xbe, 0x67, 0xd8, 0xbc, 0x29, 0xe0, 0xf0, 0x2a, 0x67,
	0x1a, 0x4a, 0x21, 0xbf, 0xc6, 0x5d, 0xc3, 0xef, 0x3a, 0x78, 0x39, 0x0a, 0xc5, 0xac, 0xe5, 0xc6,
	0x8f, 0xca, 0x2c, 0x9a, 0x8d, 0x68, 0xc6, 0x9b, 0x82, 0xe7, 0x4c, 0x0b, 0xe9, 0xa7, 0xe6, 0x3f,
	0x72, 0x81, 0xcf, 0xa4, 0xd8, 0x81, 0xa2, 0x4b, 0x6f, 0x1e, 0xac, 0x53, 0x5b, 0x90, 0x17, 0x78,
	0xcd, 0x95, 0xea, 0xa0, 0xc8, 0x98, 0xa6, 0x0b, 0x0f, 0x05, 0xf7, 0x9f, 0x6d, 0x42, 0x1b, 0x44,
	0x38, 0x05, 0x11, 0xde, 0x4e, 0x41, 0xa4, 0x2b, 0x3b, 0x7c, 0xa3, 0xc9, 0x07, 0x8c, 0xe1, 0xd0,
	0x72, 0xc9, 0x34, 0x17, 0x0d, 0x3d, 0xfb, 0x1f, 0x33, 0x79, 0x32, 0xf4, 0xee, 0xd5, 0x64, 0xf4,
	0xf5, 0x5f, 0xe6, 0xc9, 0x64, 0xfa, 0x8f, 0x18, 0xb9, 0xc6, 0x4b, 0x09, 0x7b, 0x51, 0x41, 0x41,
	0xcf, 0x3d, 0x14, 0xac, 0x92, 0xcd, 0xd0, 0xbb, 0x97, 0x13, 0x37, 0xb5, 0xad, 0x89, 0x38, 0x8d,
	0x92, 0x4b, 0xbc, 0x18, 0x2d, 0xd1, 0xb9, 0xc9, 0x75, 0x46, 0x51, 0x6a, 0xea, 0xe4, 0xfa, 0xc7,
	0xd1, 0x41, 0x3f, 0x8f, 0x0e, 0xfa, 0x75, 0x74, 0xd0, 0xb7, 0xdf, 0xce, 0x3d, 0x7c, 0xc5, 0x45,
	0xa8, 0x34, 0xcb, 0x2b, 0x29, 0x0e, 0x76, 0xd5, 0xf0, 0x74, 0x03, 0x1f, 0xa7, 0x63, 0xd8, 0x9e,
	0x1b, 0xfc, 0xf9, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x42, 0xe1, 0x52, 0x95, 0x37, 0x02, 0x00,
	0x00,
}

func (m *TokenMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TokenMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TokenMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Roles) > 0 {
		for iNdEx := len(m.Roles) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Roles[iNdEx])
			copy(dAtA[i:], m.Roles[iNdEx])
			i = encodeVarintApiToken(dAtA, i, uint64(len(m.Roles[iNdEx])))
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.Revoked {
		i--
		if m.Revoked {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Expiration != nil {
		{
			size, err := m.Expiration.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApiToken(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.IssuedAt != nil {
		{
			size, err := m.IssuedAt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApiToken(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Role) > 0 {
		i -= len(m.Role)
		copy(dAtA[i:], m.Role)
		i = encodeVarintApiToken(dAtA, i, uint64(len(m.Role)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApiToken(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintApiToken(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintApiToken(dAtA []byte, offset int, v uint64) int {
	offset -= sovApiToken(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TokenMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovApiToken(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApiToken(uint64(l))
	}
	l = len(m.Role)
	if l > 0 {
		n += 1 + l + sovApiToken(uint64(l))
	}
	if m.IssuedAt != nil {
		l = m.IssuedAt.Size()
		n += 1 + l + sovApiToken(uint64(l))
	}
	if m.Expiration != nil {
		l = m.Expiration.Size()
		n += 1 + l + sovApiToken(uint64(l))
	}
	if m.Revoked {
		n += 2
	}
	if len(m.Roles) > 0 {
		for _, s := range m.Roles {
			l = len(s)
			n += 1 + l + sovApiToken(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApiToken(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApiToken(x uint64) (n int) {
	return sovApiToken(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TokenMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiToken
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TokenMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TokenMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiToken
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApiToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiToken
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApiToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiToken
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApiToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Role = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IssuedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApiToken
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApiToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.IssuedAt == nil {
				m.IssuedAt = &types.Timestamp{}
			}
			if err := m.IssuedAt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Expiration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApiToken
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApiToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Expiration == nil {
				m.Expiration = &types.Timestamp{}
			}
			if err := m.Expiration.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revoked", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Revoked = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Roles", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiToken
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApiToken
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApiToken
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Roles = append(m.Roles, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApiToken(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApiToken
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApiToken(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApiToken
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApiToken
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApiToken
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApiToken
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApiToken
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApiToken
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApiToken        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApiToken          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApiToken = fmt.Errorf("proto: unexpected end of group")
)
