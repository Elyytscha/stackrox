// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: api/v1/role_service.proto

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComputeEffectiveAccessScopeRequest_Detail int32

const (
	ComputeEffectiveAccessScopeRequest_STANDARD ComputeEffectiveAccessScopeRequest_Detail = 0
	ComputeEffectiveAccessScopeRequest_MINIMAL  ComputeEffectiveAccessScopeRequest_Detail = 1
	ComputeEffectiveAccessScopeRequest_HIGH     ComputeEffectiveAccessScopeRequest_Detail = 2
)

// Enum value maps for ComputeEffectiveAccessScopeRequest_Detail.
var (
	ComputeEffectiveAccessScopeRequest_Detail_name = map[int32]string{
		0: "STANDARD",
		1: "MINIMAL",
		2: "HIGH",
	}
	ComputeEffectiveAccessScopeRequest_Detail_value = map[string]int32{
		"STANDARD": 0,
		"MINIMAL":  1,
		"HIGH":     2,
	}
)

func (x ComputeEffectiveAccessScopeRequest_Detail) Enum() *ComputeEffectiveAccessScopeRequest_Detail {
	p := new(ComputeEffectiveAccessScopeRequest_Detail)
	*p = x
	return p
}

func (x ComputeEffectiveAccessScopeRequest_Detail) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComputeEffectiveAccessScopeRequest_Detail) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_role_service_proto_enumTypes[0].Descriptor()
}

func (ComputeEffectiveAccessScopeRequest_Detail) Type() protoreflect.EnumType {
	return &file_api_v1_role_service_proto_enumTypes[0]
}

func (x ComputeEffectiveAccessScopeRequest_Detail) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComputeEffectiveAccessScopeRequest_Detail.Descriptor instead.
func (ComputeEffectiveAccessScopeRequest_Detail) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{6, 0}
}

type Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource string         `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Access   storage.Access `protobuf:"varint,2,opt,name=access,proto3,enum=storage.Access" json:"access,omitempty"`
}

func (x *Permission) Reset() {
	*x = Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_role_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{0}
}

func (x *Permission) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *Permission) GetAccess() storage.Access {
	if x != nil {
		return x.Access
	}
	return storage.Access(0)
}

type GetRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*storage.Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *GetRolesResponse) Reset() {
	*x = GetRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_role_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesResponse) ProtoMessage() {}

func (x *GetRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesResponse.ProtoReflect.Descriptor instead.
func (*GetRolesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetRolesResponse) GetRoles() []*storage.Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

// GetPermissionsResponse is wire-compatible with the old format of the Role
// message and represents a collection of aggregated permissions.
type GetPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceToAccess map[string]storage.Access `protobuf:"bytes,3,rep,name=resource_to_access,json=resourceToAccess,proto3" json:"resource_to_access,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=storage.Access"`
}

func (x *GetPermissionsResponse) Reset() {
	*x = GetPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_role_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsResponse) ProtoMessage() {}

func (x *GetPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetPermissionsResponse) GetResourceToAccess() map[string]storage.Access {
	if x != nil {
		return x.ResourceToAccess
	}
	return nil
}

type GetResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []string `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *GetResourcesResponse) Reset() {
	*x = GetResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_role_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesResponse) ProtoMessage() {}

func (x *GetResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesResponse.ProtoReflect.Descriptor instead.
func (*GetResourcesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetResourcesResponse) GetResources() []string {
	if x != nil {
		return x.Resources
	}
	return nil
}

type ListPermissionSetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermissionSets []*storage.PermissionSet `protobuf:"bytes,1,rep,name=permission_sets,json=permissionSets,proto3" json:"permission_sets,omitempty"`
}

func (x *ListPermissionSetsResponse) Reset() {
	*x = ListPermissionSetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_role_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermissionSetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionSetsResponse) ProtoMessage() {}

func (x *ListPermissionSetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionSetsResponse.ProtoReflect.Descriptor instead.
func (*ListPermissionSetsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListPermissionSetsResponse) GetPermissionSets() []*storage.PermissionSet {
	if x != nil {
		return x.PermissionSets
	}
	return nil
}

type ListSimpleAccessScopesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessScopes []*storage.SimpleAccessScope `protobuf:"bytes,1,rep,name=access_scopes,json=accessScopes,proto3" json:"access_scopes,omitempty"`
}

func (x *ListSimpleAccessScopesResponse) Reset() {
	*x = ListSimpleAccessScopesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_role_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSimpleAccessScopesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSimpleAccessScopesResponse) ProtoMessage() {}

func (x *ListSimpleAccessScopesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSimpleAccessScopesResponse.ProtoReflect.Descriptor instead.
func (*ListSimpleAccessScopesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListSimpleAccessScopesResponse) GetAccessScopes() []*storage.SimpleAccessScope {
	if x != nil {
		return x.AccessScopes
	}
	return nil
}

type ComputeEffectiveAccessScopeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail      ComputeEffectiveAccessScopeRequest_Detail   `protobuf:"varint,1,opt,name=detail,proto3,enum=v1.ComputeEffectiveAccessScopeRequest_Detail" json:"detail,omitempty"`
	AccessScope *ComputeEffectiveAccessScopeRequest_Payload `protobuf:"bytes,2,opt,name=access_scope,json=accessScope,proto3" json:"access_scope,omitempty"`
}

func (x *ComputeEffectiveAccessScopeRequest) Reset() {
	*x = ComputeEffectiveAccessScopeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_role_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeEffectiveAccessScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeEffectiveAccessScopeRequest) ProtoMessage() {}

func (x *ComputeEffectiveAccessScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeEffectiveAccessScopeRequest.ProtoReflect.Descriptor instead.
func (*ComputeEffectiveAccessScopeRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{6}
}

func (x *ComputeEffectiveAccessScopeRequest) GetDetail() ComputeEffectiveAccessScopeRequest_Detail {
	if x != nil {
		return x.Detail
	}
	return ComputeEffectiveAccessScopeRequest_STANDARD
}

func (x *ComputeEffectiveAccessScopeRequest) GetAccessScope() *ComputeEffectiveAccessScopeRequest_Payload {
	if x != nil {
		return x.AccessScope
	}
	return nil
}

// CreateRoleRequest unites name we take from the URL path and role body in the same structure.
// This way we can verify that name in the path and name in the body are identical.
type CreateRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Role *storage.Role `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *CreateRoleRequest) Reset() {
	*x = CreateRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_role_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRequest) ProtoMessage() {}

func (x *CreateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateRoleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoleRequest) GetRole() *storage.Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type ComputeEffectiveAccessScopeRequest_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Other definitions of access scope rules is science fiction for now;
	// however, prepare for that possible future.
	//
	// Types that are assignable to RulesOpt:
	//	*ComputeEffectiveAccessScopeRequest_Payload_SimpleRules
	RulesOpt isComputeEffectiveAccessScopeRequest_Payload_RulesOpt `protobuf_oneof:"rules_opt"`
}

func (x *ComputeEffectiveAccessScopeRequest_Payload) Reset() {
	*x = ComputeEffectiveAccessScopeRequest_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_role_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeEffectiveAccessScopeRequest_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeEffectiveAccessScopeRequest_Payload) ProtoMessage() {}

func (x *ComputeEffectiveAccessScopeRequest_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeEffectiveAccessScopeRequest_Payload.ProtoReflect.Descriptor instead.
func (*ComputeEffectiveAccessScopeRequest_Payload) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{6, 0}
}

func (m *ComputeEffectiveAccessScopeRequest_Payload) GetRulesOpt() isComputeEffectiveAccessScopeRequest_Payload_RulesOpt {
	if m != nil {
		return m.RulesOpt
	}
	return nil
}

func (x *ComputeEffectiveAccessScopeRequest_Payload) GetSimpleRules() *storage.SimpleAccessScope_Rules {
	if x, ok := x.GetRulesOpt().(*ComputeEffectiveAccessScopeRequest_Payload_SimpleRules); ok {
		return x.SimpleRules
	}
	return nil
}

type isComputeEffectiveAccessScopeRequest_Payload_RulesOpt interface {
	isComputeEffectiveAccessScopeRequest_Payload_RulesOpt()
}

type ComputeEffectiveAccessScopeRequest_Payload_SimpleRules struct {
	SimpleRules *storage.SimpleAccessScope_Rules `protobuf:"bytes,1,opt,name=simple_rules,json=simpleRules,proto3,oneof"`
}

func (*ComputeEffectiveAccessScopeRequest_Payload_SimpleRules) isComputeEffectiveAccessScopeRequest_Payload_RulesOpt() {
}

var File_api_v1_role_service_proto protoreflect.FileDescriptor

var file_api_v1_role_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f,
	0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x0a, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x37, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5e, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x6f,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x1a, 0x54, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x6f, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08,
	0x02, 0x10, 0x03, 0x22, 0x34, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x1a, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x73, 0x22, 0x61, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x22, 0xcc, 0x02, 0x0a, 0x22,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x45, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x45,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x51, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x1a, 0x5d, 0x0a, 0x07,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x45, 0x0a, 0x0c, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x0b, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x0b,
	0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x70, 0x74, 0x22, 0x2d, 0x0a, 0x06, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52,
	0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x49, 0x4e, 0x49, 0x4d, 0x41, 0x4c, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x02, 0x22, 0x4a, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x32, 0x85, 0x0d, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x1a, 0x0d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x54, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x09,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x79, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x4e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x15,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x43, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0d,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x1a, 0x09, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15,
	0x1a, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x2a, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x4a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x5b, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x73, 0x12, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x65, 0x74, 0x73,
	0x12, 0x62, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x1a, 0x16, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x65, 0x74,
	0x73, 0x3a, 0x01, 0x2a, 0x12, 0x59, 0x0a, 0x10, 0x50, 0x75, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x1a, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12,
	0x53, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x65, 0x74, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x69, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x10, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x1a,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x67, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x72, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x12, 0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x1a, 0x1a, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x65, 0x0a, 0x14,
	0x50, 0x75, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x20, 0x1a, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x3a, 0x01, 0x2a, 0x12, 0x5b, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x10,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x2a, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x9b, 0x01, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x12, 0x26, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x45, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x22,
	0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x3a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x42, 0x1e,
	0x0a, 0x18, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x5a, 0x02, 0x76, 0x31, 0x58, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_role_service_proto_rawDescOnce sync.Once
	file_api_v1_role_service_proto_rawDescData = file_api_v1_role_service_proto_rawDesc
)

func file_api_v1_role_service_proto_rawDescGZIP() []byte {
	file_api_v1_role_service_proto_rawDescOnce.Do(func() {
		file_api_v1_role_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_role_service_proto_rawDescData)
	})
	return file_api_v1_role_service_proto_rawDescData
}

var file_api_v1_role_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_role_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_v1_role_service_proto_goTypes = []interface{}{
	(ComputeEffectiveAccessScopeRequest_Detail)(0), // 0: v1.ComputeEffectiveAccessScopeRequest.Detail
	(*Permission)(nil),                                 // 1: v1.Permission
	(*GetRolesResponse)(nil),                           // 2: v1.GetRolesResponse
	(*GetPermissionsResponse)(nil),                     // 3: v1.GetPermissionsResponse
	(*GetResourcesResponse)(nil),                       // 4: v1.GetResourcesResponse
	(*ListPermissionSetsResponse)(nil),                 // 5: v1.ListPermissionSetsResponse
	(*ListSimpleAccessScopesResponse)(nil),             // 6: v1.ListSimpleAccessScopesResponse
	(*ComputeEffectiveAccessScopeRequest)(nil),         // 7: v1.ComputeEffectiveAccessScopeRequest
	(*CreateRoleRequest)(nil),                          // 8: v1.CreateRoleRequest
	nil,                                                // 9: v1.GetPermissionsResponse.ResourceToAccessEntry
	(*ComputeEffectiveAccessScopeRequest_Payload)(nil), // 10: v1.ComputeEffectiveAccessScopeRequest.Payload
	(storage.Access)(0),                                // 11: storage.Access
	(*storage.Role)(nil),                               // 12: storage.Role
	(*storage.PermissionSet)(nil),                      // 13: storage.PermissionSet
	(*storage.SimpleAccessScope)(nil),                  // 14: storage.SimpleAccessScope
	(*storage.SimpleAccessScope_Rules)(nil),            // 15: storage.SimpleAccessScope.Rules
	(*Empty)(nil),                                      // 16: v1.Empty
	(*ResourceByID)(nil),                               // 17: v1.ResourceByID
	(*storage.EffectiveAccessScope)(nil),               // 18: storage.EffectiveAccessScope
}
var file_api_v1_role_service_proto_depIdxs = []int32{
	11, // 0: v1.Permission.access:type_name -> storage.Access
	12, // 1: v1.GetRolesResponse.roles:type_name -> storage.Role
	9,  // 2: v1.GetPermissionsResponse.resource_to_access:type_name -> v1.GetPermissionsResponse.ResourceToAccessEntry
	13, // 3: v1.ListPermissionSetsResponse.permission_sets:type_name -> storage.PermissionSet
	14, // 4: v1.ListSimpleAccessScopesResponse.access_scopes:type_name -> storage.SimpleAccessScope
	0,  // 5: v1.ComputeEffectiveAccessScopeRequest.detail:type_name -> v1.ComputeEffectiveAccessScopeRequest.Detail
	10, // 6: v1.ComputeEffectiveAccessScopeRequest.access_scope:type_name -> v1.ComputeEffectiveAccessScopeRequest.Payload
	12, // 7: v1.CreateRoleRequest.role:type_name -> storage.Role
	11, // 8: v1.GetPermissionsResponse.ResourceToAccessEntry.value:type_name -> storage.Access
	15, // 9: v1.ComputeEffectiveAccessScopeRequest.Payload.simple_rules:type_name -> storage.SimpleAccessScope.Rules
	16, // 10: v1.RoleService.GetRoles:input_type -> v1.Empty
	17, // 11: v1.RoleService.GetRole:input_type -> v1.ResourceByID
	16, // 12: v1.RoleService.GetMyPermissions:input_type -> v1.Empty
	8,  // 13: v1.RoleService.CreateRole:input_type -> v1.CreateRoleRequest
	12, // 14: v1.RoleService.UpdateRole:input_type -> storage.Role
	17, // 15: v1.RoleService.DeleteRole:input_type -> v1.ResourceByID
	16, // 16: v1.RoleService.GetResources:input_type -> v1.Empty
	17, // 17: v1.RoleService.GetPermissionSet:input_type -> v1.ResourceByID
	16, // 18: v1.RoleService.ListPermissionSets:input_type -> v1.Empty
	13, // 19: v1.RoleService.PostPermissionSet:input_type -> storage.PermissionSet
	13, // 20: v1.RoleService.PutPermissionSet:input_type -> storage.PermissionSet
	17, // 21: v1.RoleService.DeletePermissionSet:input_type -> v1.ResourceByID
	17, // 22: v1.RoleService.GetSimpleAccessScope:input_type -> v1.ResourceByID
	16, // 23: v1.RoleService.ListSimpleAccessScopes:input_type -> v1.Empty
	14, // 24: v1.RoleService.PostSimpleAccessScope:input_type -> storage.SimpleAccessScope
	14, // 25: v1.RoleService.PutSimpleAccessScope:input_type -> storage.SimpleAccessScope
	17, // 26: v1.RoleService.DeleteSimpleAccessScope:input_type -> v1.ResourceByID
	7,  // 27: v1.RoleService.ComputeEffectiveAccessScope:input_type -> v1.ComputeEffectiveAccessScopeRequest
	2,  // 28: v1.RoleService.GetRoles:output_type -> v1.GetRolesResponse
	12, // 29: v1.RoleService.GetRole:output_type -> storage.Role
	3,  // 30: v1.RoleService.GetMyPermissions:output_type -> v1.GetPermissionsResponse
	16, // 31: v1.RoleService.CreateRole:output_type -> v1.Empty
	16, // 32: v1.RoleService.UpdateRole:output_type -> v1.Empty
	16, // 33: v1.RoleService.DeleteRole:output_type -> v1.Empty
	4,  // 34: v1.RoleService.GetResources:output_type -> v1.GetResourcesResponse
	13, // 35: v1.RoleService.GetPermissionSet:output_type -> storage.PermissionSet
	5,  // 36: v1.RoleService.ListPermissionSets:output_type -> v1.ListPermissionSetsResponse
	13, // 37: v1.RoleService.PostPermissionSet:output_type -> storage.PermissionSet
	16, // 38: v1.RoleService.PutPermissionSet:output_type -> v1.Empty
	16, // 39: v1.RoleService.DeletePermissionSet:output_type -> v1.Empty
	14, // 40: v1.RoleService.GetSimpleAccessScope:output_type -> storage.SimpleAccessScope
	6,  // 41: v1.RoleService.ListSimpleAccessScopes:output_type -> v1.ListSimpleAccessScopesResponse
	14, // 42: v1.RoleService.PostSimpleAccessScope:output_type -> storage.SimpleAccessScope
	16, // 43: v1.RoleService.PutSimpleAccessScope:output_type -> v1.Empty
	16, // 44: v1.RoleService.DeleteSimpleAccessScope:output_type -> v1.Empty
	18, // 45: v1.RoleService.ComputeEffectiveAccessScope:output_type -> storage.EffectiveAccessScope
	28, // [28:46] is the sub-list for method output_type
	10, // [10:28] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_v1_role_service_proto_init() }
func file_api_v1_role_service_proto_init() {
	if File_api_v1_role_service_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	file_api_v1_empty_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_role_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_role_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_role_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_role_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_role_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermissionSetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_role_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSimpleAccessScopesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_role_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeEffectiveAccessScopeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_role_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_role_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeEffectiveAccessScopeRequest_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_role_service_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*ComputeEffectiveAccessScopeRequest_Payload_SimpleRules)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_role_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_role_service_proto_goTypes,
		DependencyIndexes: file_api_v1_role_service_proto_depIdxs,
		EnumInfos:         file_api_v1_role_service_proto_enumTypes,
		MessageInfos:      file_api_v1_role_service_proto_msgTypes,
	}.Build()
	File_api_v1_role_service_proto = out.File
	file_api_v1_role_service_proto_rawDesc = nil
	file_api_v1_role_service_proto_goTypes = nil
	file_api_v1_role_service_proto_depIdxs = nil
}
