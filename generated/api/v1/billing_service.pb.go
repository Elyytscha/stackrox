// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1/billing_service.proto

package v1

import (
	fmt "fmt"
	types "github.com/gogo/protobuf/types"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/stackrox/rox/generated/storage"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MaximumValueRequest struct {
	Metric               string           `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	Value                int32            `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Ts                   *types.Timestamp `protobuf:"bytes,3,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MaximumValueRequest) Reset()         { *m = MaximumValueRequest{} }
func (m *MaximumValueRequest) String() string { return proto.CompactTextString(m) }
func (*MaximumValueRequest) ProtoMessage()    {}
func (*MaximumValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e239058a0eb27dc, []int{0}
}
func (m *MaximumValueRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MaximumValueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MaximumValueRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MaximumValueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaximumValueRequest.Merge(m, src)
}
func (m *MaximumValueRequest) XXX_Size() int {
	return m.Size()
}
func (m *MaximumValueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MaximumValueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MaximumValueRequest proto.InternalMessageInfo

func (m *MaximumValueRequest) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

func (m *MaximumValueRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *MaximumValueRequest) GetTs() *types.Timestamp {
	if m != nil {
		return m.Ts
	}
	return nil
}

func (m *MaximumValueRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *MaximumValueRequest) Clone() *MaximumValueRequest {
	if m == nil {
		return nil
	}
	cloned := new(MaximumValueRequest)
	*cloned = *m

	cloned.Ts = m.Ts.Clone()
	return cloned
}

func init() {
	proto.RegisterType((*MaximumValueRequest)(nil), "v1.MaximumValueRequest")
}

func init() { proto.RegisterFile("api/v1/billing_service.proto", fileDescriptor_3e239058a0eb27dc) }

var fileDescriptor_3e239058a0eb27dc = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8e, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x4d, 0x64, 0x17, 0x8c, 0xb7, 0x2a, 0x52, 0x8a, 0xd6, 0xe2, 0xa9, 0x78, 0x48, 0xa9,
	0xbe, 0x81, 0x77, 0x2f, 0x45, 0x3c, 0x78, 0x91, 0xb4, 0x8c, 0x65, 0xb0, 0x31, 0x35, 0x33, 0x09,
	0xfb, 0x28, 0x3e, 0x92, 0x47, 0x1f, 0x41, 0xea, 0x8b, 0x88, 0x1b, 0x77, 0x8f, 0xff, 0x3f, 0xdf,
	0xfc, 0x7c, 0xea, 0xdc, 0xcc, 0xd8, 0xc4, 0xb6, 0xe9, 0x71, 0x9a, 0xf0, 0x6d, 0x7c, 0x26, 0xf0,
	0x11, 0x07, 0xd0, 0xb3, 0x77, 0xec, 0x32, 0x19, 0xdb, 0xe2, 0x72, 0x74, 0x6e, 0x9c, 0xa0, 0xd9,
	0x36, 0x7d, 0x78, 0x69, 0x18, 0x2d, 0x10, 0x1b, 0x3b, 0x27, 0xa8, 0xb8, 0x20, 0x76, 0xde, 0x8c,
	0xb0, 0xdf, 0xb0, 0xc0, 0x1e, 0x07, 0x4a, 0xe7, 0x2b, 0xa7, 0x4e, 0xee, 0xcd, 0x06, 0x6d, 0xb0,
	0x8f, 0x66, 0x0a, 0xd0, 0xc1, 0x7b, 0x00, 0xe2, 0xec, 0x4c, 0xad, 0x13, 0x97, 0x8b, 0x4a, 0xd4,
	0x47, 0xdd, 0x7f, 0xca, 0x4e, 0xd5, 0x2a, 0xfe, 0x71, 0xb9, 0xac, 0x44, 0xbd, 0xea, 0x52, 0xc8,
	0xae, 0x95, 0x64, 0xca, 0x0f, 0x2b, 0x51, 0x1f, 0xdf, 0x14, 0x3a, 0x19, 0xe9, 0x9d, 0x91, 0x7e,
	0xd8, 0x19, 0x75, 0x92, 0xe9, 0x4e, 0x7f, 0x2e, 0xa5, 0xf8, 0x5a, 0x4a, 0xf1, 0xbd, 0x94, 0xe2,
	0xe3, 0xa7, 0x3c, 0x50, 0x39, 0x3a, 0x4d, 0x6c, 0x86, 0x57, 0xef, 0x36, 0xe9, 0x4b, 0x9b, 0x19,
	0x75, 0x6c, 0x9f, 0x64, 0x6c, 0xfb, 0xf5, 0xb6, 0xb9, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xd1,
	0xfc, 0xbd, 0x1b, 0x0b, 0x01, 0x00, 0x00,
}

func (m *MaximumValueRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MaximumValueRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MaximumValueRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ts != nil {
		{
			size, err := m.Ts.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBillingService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Value != 0 {
		i = encodeVarintBillingService(dAtA, i, uint64(m.Value))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Metric) > 0 {
		i -= len(m.Metric)
		copy(dAtA[i:], m.Metric)
		i = encodeVarintBillingService(dAtA, i, uint64(len(m.Metric)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintBillingService(dAtA []byte, offset int, v uint64) int {
	offset -= sovBillingService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MaximumValueRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Metric)
	if l > 0 {
		n += 1 + l + sovBillingService(uint64(l))
	}
	if m.Value != 0 {
		n += 1 + sovBillingService(uint64(m.Value))
	}
	if m.Ts != nil {
		l = m.Ts.Size()
		n += 1 + l + sovBillingService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovBillingService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBillingService(x uint64) (n int) {
	return sovBillingService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MaximumValueRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBillingService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MaximumValueRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MaximumValueRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metric", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillingService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBillingService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBillingService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metric = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			m.Value = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillingService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Value |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillingService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBillingService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBillingService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ts == nil {
				m.Ts = &types.Timestamp{}
			}
			if err := m.Ts.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBillingService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBillingService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBillingService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBillingService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBillingService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBillingService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBillingService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBillingService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBillingService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBillingService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBillingService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBillingService = fmt.Errorf("proto: unexpected end of group")
)
