// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1/processes_listening_on_ports_service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	storage "github.com/stackrox/rox/generated/storage"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetProcessesListeningOnPortsByNamespaceRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProcessesListeningOnPortsByNamespaceRequest) Reset() {
	*m = GetProcessesListeningOnPortsByNamespaceRequest{}
}
func (m *GetProcessesListeningOnPortsByNamespaceRequest) String() string {
	return proto.CompactTextString(m)
}
func (*GetProcessesListeningOnPortsByNamespaceRequest) ProtoMessage() {}
func (*GetProcessesListeningOnPortsByNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac62366b2dd52763, []int{0}
}
func (m *GetProcessesListeningOnPortsByNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetProcessesListeningOnPortsByNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetProcessesListeningOnPortsByNamespaceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetProcessesListeningOnPortsByNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProcessesListeningOnPortsByNamespaceRequest.Merge(m, src)
}
func (m *GetProcessesListeningOnPortsByNamespaceRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetProcessesListeningOnPortsByNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProcessesListeningOnPortsByNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProcessesListeningOnPortsByNamespaceRequest proto.InternalMessageInfo

func (m *GetProcessesListeningOnPortsByNamespaceRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetProcessesListeningOnPortsByNamespaceRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *GetProcessesListeningOnPortsByNamespaceRequest) Clone() *GetProcessesListeningOnPortsByNamespaceRequest {
	if m == nil {
		return nil
	}
	cloned := new(GetProcessesListeningOnPortsByNamespaceRequest)
	*cloned = *m

	return cloned
}

type GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	DeploymentId         string   `protobuf:"bytes,2,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) Reset() {
	*m = GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest{}
}
func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) String() string {
	return proto.CompactTextString(m)
}
func (*GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) ProtoMessage() {}
func (*GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac62366b2dd52763, []int{1}
}
func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest.Merge(m, src)
}
func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest proto.InternalMessageInfo

func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) Clone() *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest {
	if m == nil {
		return nil
	}
	cloned := new(GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest)
	*cloned = *m

	return cloned
}

type ProcessListeningOnPortWithDeploymentId struct {
	DeploymentId              string                            `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	ProcessesListeningOnPorts []*storage.ProcessListeningOnPort `protobuf:"bytes,2,rep,name=processes_listening_on_ports,json=processesListeningOnPorts,proto3" json:"processes_listening_on_ports,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                          `json:"-"`
	XXX_unrecognized          []byte                            `json:"-"`
	XXX_sizecache             int32                             `json:"-"`
}

func (m *ProcessListeningOnPortWithDeploymentId) Reset() {
	*m = ProcessListeningOnPortWithDeploymentId{}
}
func (m *ProcessListeningOnPortWithDeploymentId) String() string { return proto.CompactTextString(m) }
func (*ProcessListeningOnPortWithDeploymentId) ProtoMessage()    {}
func (*ProcessListeningOnPortWithDeploymentId) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac62366b2dd52763, []int{2}
}
func (m *ProcessListeningOnPortWithDeploymentId) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProcessListeningOnPortWithDeploymentId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProcessListeningOnPortWithDeploymentId.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProcessListeningOnPortWithDeploymentId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessListeningOnPortWithDeploymentId.Merge(m, src)
}
func (m *ProcessListeningOnPortWithDeploymentId) XXX_Size() int {
	return m.Size()
}
func (m *ProcessListeningOnPortWithDeploymentId) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessListeningOnPortWithDeploymentId.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessListeningOnPortWithDeploymentId proto.InternalMessageInfo

func (m *ProcessListeningOnPortWithDeploymentId) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *ProcessListeningOnPortWithDeploymentId) GetProcessesListeningOnPorts() []*storage.ProcessListeningOnPort {
	if m != nil {
		return m.ProcessesListeningOnPorts
	}
	return nil
}

func (m *ProcessListeningOnPortWithDeploymentId) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ProcessListeningOnPortWithDeploymentId) Clone() *ProcessListeningOnPortWithDeploymentId {
	if m == nil {
		return nil
	}
	cloned := new(ProcessListeningOnPortWithDeploymentId)
	*cloned = *m

	if m.ProcessesListeningOnPorts != nil {
		cloned.ProcessesListeningOnPorts = make([]*storage.ProcessListeningOnPort, len(m.ProcessesListeningOnPorts))
		for idx, v := range m.ProcessesListeningOnPorts {
			cloned.ProcessesListeningOnPorts[idx] = v.Clone()
		}
	}
	return cloned
}

type GetProcessesListeningOnPortsResponse struct {
	ProcessesListeningOnPorts []*storage.ProcessListeningOnPort `protobuf:"bytes,1,rep,name=processes_listening_on_ports,json=processesListeningOnPorts,proto3" json:"processes_listening_on_ports,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                          `json:"-"`
	XXX_unrecognized          []byte                            `json:"-"`
	XXX_sizecache             int32                             `json:"-"`
}

func (m *GetProcessesListeningOnPortsResponse) Reset()         { *m = GetProcessesListeningOnPortsResponse{} }
func (m *GetProcessesListeningOnPortsResponse) String() string { return proto.CompactTextString(m) }
func (*GetProcessesListeningOnPortsResponse) ProtoMessage()    {}
func (*GetProcessesListeningOnPortsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac62366b2dd52763, []int{3}
}
func (m *GetProcessesListeningOnPortsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetProcessesListeningOnPortsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetProcessesListeningOnPortsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetProcessesListeningOnPortsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProcessesListeningOnPortsResponse.Merge(m, src)
}
func (m *GetProcessesListeningOnPortsResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetProcessesListeningOnPortsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProcessesListeningOnPortsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProcessesListeningOnPortsResponse proto.InternalMessageInfo

func (m *GetProcessesListeningOnPortsResponse) GetProcessesListeningOnPorts() []*storage.ProcessListeningOnPort {
	if m != nil {
		return m.ProcessesListeningOnPorts
	}
	return nil
}

func (m *GetProcessesListeningOnPortsResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *GetProcessesListeningOnPortsResponse) Clone() *GetProcessesListeningOnPortsResponse {
	if m == nil {
		return nil
	}
	cloned := new(GetProcessesListeningOnPortsResponse)
	*cloned = *m

	if m.ProcessesListeningOnPorts != nil {
		cloned.ProcessesListeningOnPorts = make([]*storage.ProcessListeningOnPort, len(m.ProcessesListeningOnPorts))
		for idx, v := range m.ProcessesListeningOnPorts {
			cloned.ProcessesListeningOnPorts[idx] = v.Clone()
		}
	}
	return cloned
}

type GetProcessesListeningOnPortsWithDeploymentResponse struct {
	ProcessListeningOnPortWithDeploymentResponse []*ProcessListeningOnPortWithDeploymentId `protobuf:"bytes,1,rep,name=process_listening_on_port_with_deployment_response,json=processListeningOnPortWithDeploymentResponse,proto3" json:"process_listening_on_port_with_deployment_response,omitempty"`
	XXX_NoUnkeyedLiteral                         struct{}                                  `json:"-"`
	XXX_unrecognized                             []byte                                    `json:"-"`
	XXX_sizecache                                int32                                     `json:"-"`
}

func (m *GetProcessesListeningOnPortsWithDeploymentResponse) Reset() {
	*m = GetProcessesListeningOnPortsWithDeploymentResponse{}
}
func (m *GetProcessesListeningOnPortsWithDeploymentResponse) String() string {
	return proto.CompactTextString(m)
}
func (*GetProcessesListeningOnPortsWithDeploymentResponse) ProtoMessage() {}
func (*GetProcessesListeningOnPortsWithDeploymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac62366b2dd52763, []int{4}
}
func (m *GetProcessesListeningOnPortsWithDeploymentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetProcessesListeningOnPortsWithDeploymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetProcessesListeningOnPortsWithDeploymentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetProcessesListeningOnPortsWithDeploymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProcessesListeningOnPortsWithDeploymentResponse.Merge(m, src)
}
func (m *GetProcessesListeningOnPortsWithDeploymentResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetProcessesListeningOnPortsWithDeploymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProcessesListeningOnPortsWithDeploymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProcessesListeningOnPortsWithDeploymentResponse proto.InternalMessageInfo

func (m *GetProcessesListeningOnPortsWithDeploymentResponse) GetProcessListeningOnPortWithDeploymentResponse() []*ProcessListeningOnPortWithDeploymentId {
	if m != nil {
		return m.ProcessListeningOnPortWithDeploymentResponse
	}
	return nil
}

func (m *GetProcessesListeningOnPortsWithDeploymentResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *GetProcessesListeningOnPortsWithDeploymentResponse) Clone() *GetProcessesListeningOnPortsWithDeploymentResponse {
	if m == nil {
		return nil
	}
	cloned := new(GetProcessesListeningOnPortsWithDeploymentResponse)
	*cloned = *m

	if m.ProcessListeningOnPortWithDeploymentResponse != nil {
		cloned.ProcessListeningOnPortWithDeploymentResponse = make([]*ProcessListeningOnPortWithDeploymentId, len(m.ProcessListeningOnPortWithDeploymentResponse))
		for idx, v := range m.ProcessListeningOnPortWithDeploymentResponse {
			cloned.ProcessListeningOnPortWithDeploymentResponse[idx] = v.Clone()
		}
	}
	return cloned
}

func init() {
	proto.RegisterType((*GetProcessesListeningOnPortsByNamespaceRequest)(nil), "v1.GetProcessesListeningOnPortsByNamespaceRequest")
	proto.RegisterType((*GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest)(nil), "v1.GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest")
	proto.RegisterType((*ProcessListeningOnPortWithDeploymentId)(nil), "v1.ProcessListeningOnPortWithDeploymentId")
	proto.RegisterType((*GetProcessesListeningOnPortsResponse)(nil), "v1.GetProcessesListeningOnPortsResponse")
	proto.RegisterType((*GetProcessesListeningOnPortsWithDeploymentResponse)(nil), "v1.GetProcessesListeningOnPortsWithDeploymentResponse")
}

func init() {
	proto.RegisterFile("api/v1/processes_listening_on_ports_service.proto", fileDescriptor_ac62366b2dd52763)
}

var fileDescriptor_ac62366b2dd52763 = []byte{
	// 476 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcf, 0x6b, 0xd4, 0x40,
	0x14, 0xee, 0xa4, 0x20, 0x74, 0xd4, 0xcb, 0x9c, 0xd6, 0xb0, 0xc4, 0x12, 0xc5, 0x2e, 0x22, 0x13,
	0x12, 0xa5, 0x08, 0x82, 0x62, 0x29, 0x88, 0x20, 0xb5, 0xa6, 0x07, 0x7f, 0x5c, 0xe2, 0x98, 0x3c,
	0xd2, 0xc1, 0xed, 0xcc, 0x98, 0x19, 0xa3, 0xa5, 0x14, 0xc4, 0x93, 0x77, 0x3d, 0xf8, 0x5f, 0xf8,
	0x6f, 0x08, 0x5e, 0x04, 0xf1, 0x2e, 0xab, 0xff, 0x83, 0x17, 0x0f, 0xb2, 0x9b, 0x1f, 0xdb, 0xba,
	0xe9, 0x26, 0xad, 0xb7, 0xf0, 0xf8, 0xde, 0xf7, 0xbe, 0xf7, 0xe5, 0x7d, 0x83, 0x7d, 0xa6, 0xb8,
	0x97, 0xfb, 0x9e, 0xca, 0x64, 0x0c, 0x5a, 0x83, 0x8e, 0x86, 0x5c, 0x1b, 0x10, 0x5c, 0xa4, 0x91,
	0x14, 0x91, 0x92, 0x99, 0xd1, 0x91, 0x86, 0x2c, 0xe7, 0x31, 0x50, 0x95, 0x49, 0x23, 0x89, 0x95,
	0xfb, 0x76, 0x3f, 0x95, 0x32, 0x1d, 0x82, 0x37, 0xee, 0x66, 0x42, 0x48, 0xc3, 0x0c, 0x97, 0x42,
	0x17, 0x08, 0x7b, 0x45, 0x1b, 0x99, 0xb1, 0x14, 0x2a, 0xd6, 0x59, 0xce, 0x02, 0xe8, 0x6e, 0x60,
	0x7a, 0x07, 0xcc, 0x66, 0x35, 0xfb, 0x5e, 0x05, 0xbb, 0x2f, 0x36, 0xc7, 0x83, 0xd7, 0x76, 0x37,
	0xd8, 0x0e, 0x68, 0xc5, 0x62, 0x08, 0xe1, 0xc5, 0x4b, 0xd0, 0x86, 0xf4, 0xf1, 0x92, 0xa8, 0x6a,
	0x3d, 0xb4, 0x8c, 0x06, 0x4b, 0xe1, 0xb4, 0xe0, 0xbe, 0x41, 0xf8, 0x46, 0x47, 0xc2, 0xdb, 0x22,
	0x59, 0x07, 0x35, 0x94, 0xbb, 0x3b, 0x20, 0x4c, 0x27, 0x76, 0x72, 0x01, 0x9f, 0x4d, 0xea, 0x96,
	0x88, 0x27, 0x3d, 0x6b, 0x82, 0x38, 0x33, 0x2d, 0xde, 0x4d, 0xdc, 0x4f, 0x08, 0x5f, 0x2a, 0xe7,
	0xff, 0x33, 0xfd, 0x21, 0x37, 0xdb, 0xeb, 0x07, 0xa0, 0xb3, 0x7c, 0x68, 0x96, 0x8f, 0x3c, 0xc5,
	0xfd, 0x79, 0xff, 0xa6, 0x67, 0x2d, 0x2f, 0x0e, 0x4e, 0x07, 0xe7, 0x69, 0x69, 0x39, 0x6d, 0x9e,
	0x1d, 0x9e, 0x53, 0x47, 0x79, 0xe2, 0xbe, 0x43, 0xf8, 0xe2, 0x3c, 0xd3, 0x42, 0xd0, 0x4a, 0x0a,
	0x0d, 0xad, 0x52, 0xd0, 0x7f, 0x4b, 0xf9, 0x82, 0x70, 0x30, 0x4f, 0xca, 0x61, 0x0b, 0x6b, 0x61,
	0x1f, 0x10, 0x0e, 0x8e, 0x3c, 0xb5, 0xe8, 0x15, 0x37, 0xdb, 0xd1, 0x01, 0xa3, 0xb3, 0xb2, 0xad,
	0xd4, 0x7b, 0x99, 0xe6, 0x3e, 0xed, 0xf6, 0xc7, 0xc2, 0x2b, 0xaa, 0x03, 0xae, 0x92, 0x15, 0xfc,
	0x5e, 0xc4, 0x4e, 0x33, 0xb1, 0xde, 0x2a, 0x12, 0x45, 0xbe, 0x23, 0xbc, 0xd2, 0xf1, 0x60, 0x49,
	0x30, 0x16, 0x7a, 0xbc, 0xb8, 0xd8, 0xab, 0x6d, 0x3d, 0xcd, 0xd2, 0xdd, 0x9b, 0x6f, 0xbf, 0xfd,
	0x7a, 0x6f, 0x5d, 0x27, 0xab, 0x6d, 0x6f, 0x83, 0x57, 0xc7, 0xc3, 0xdb, 0xab, 0x3f, 0xf7, 0xc9,
	0x1f, 0x84, 0xaf, 0x9d, 0x24, 0x88, 0xe4, 0xd6, 0x31, 0x96, 0x6c, 0x8a, 0xb0, 0x3d, 0x68, 0x23,
	0xa8, 0x77, 0x7c, 0x3c, 0xd9, 0x71, 0x8b, 0x3c, 0x38, 0xd9, 0x8e, 0xde, 0xf4, 0xa4, 0xbc, 0xbd,
	0x43, 0x39, 0xde, 0x5f, 0xa3, 0x9f, 0x47, 0x0e, 0xfa, 0x3a, 0x72, 0xd0, 0x8f, 0x91, 0x83, 0x3e,
	0xfe, 0x74, 0x16, 0x70, 0x8f, 0x4b, 0xaa, 0x0d, 0x8b, 0x9f, 0x67, 0xf2, 0x75, 0xf1, 0xf8, 0x51,
	0xa6, 0x38, 0xcd, 0xfd, 0x27, 0x56, 0xee, 0x3f, 0x5a, 0x78, 0x76, 0x6a, 0x52, 0xbb, 0xfa, 0x37,
	0x00, 0x00, 0xff, 0xff, 0xfb, 0x1e, 0x2e, 0x0d, 0x90, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProcessListeningOnPortsServiceClient is the client API for ProcessListeningOnPortsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConnInterface.NewStream.
type ProcessListeningOnPortsServiceClient interface {
	GetProcessesListeningOnPortsByNamespace(ctx context.Context, in *GetProcessesListeningOnPortsByNamespaceRequest, opts ...grpc.CallOption) (*GetProcessesListeningOnPortsWithDeploymentResponse, error)
	GetProcessesListeningOnPortsByNamespaceAndDeployment(ctx context.Context, in *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest, opts ...grpc.CallOption) (*GetProcessesListeningOnPortsResponse, error)
}

type processListeningOnPortsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProcessListeningOnPortsServiceClient(cc grpc.ClientConnInterface) ProcessListeningOnPortsServiceClient {
	return &processListeningOnPortsServiceClient{cc}
}

func (c *processListeningOnPortsServiceClient) GetProcessesListeningOnPortsByNamespace(ctx context.Context, in *GetProcessesListeningOnPortsByNamespaceRequest, opts ...grpc.CallOption) (*GetProcessesListeningOnPortsWithDeploymentResponse, error) {
	out := new(GetProcessesListeningOnPortsWithDeploymentResponse)
	err := c.cc.Invoke(ctx, "/v1.ProcessListeningOnPortsService/GetProcessesListeningOnPortsByNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *processListeningOnPortsServiceClient) GetProcessesListeningOnPortsByNamespaceAndDeployment(ctx context.Context, in *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest, opts ...grpc.CallOption) (*GetProcessesListeningOnPortsResponse, error) {
	out := new(GetProcessesListeningOnPortsResponse)
	err := c.cc.Invoke(ctx, "/v1.ProcessListeningOnPortsService/GetProcessesListeningOnPortsByNamespaceAndDeployment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProcessListeningOnPortsServiceServer is the server API for ProcessListeningOnPortsService service.
type ProcessListeningOnPortsServiceServer interface {
	GetProcessesListeningOnPortsByNamespace(context.Context, *GetProcessesListeningOnPortsByNamespaceRequest) (*GetProcessesListeningOnPortsWithDeploymentResponse, error)
	GetProcessesListeningOnPortsByNamespaceAndDeployment(context.Context, *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) (*GetProcessesListeningOnPortsResponse, error)
}

// UnimplementedProcessListeningOnPortsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProcessListeningOnPortsServiceServer struct {
}

func (*UnimplementedProcessListeningOnPortsServiceServer) GetProcessesListeningOnPortsByNamespace(ctx context.Context, req *GetProcessesListeningOnPortsByNamespaceRequest) (*GetProcessesListeningOnPortsWithDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProcessesListeningOnPortsByNamespace not implemented")
}
func (*UnimplementedProcessListeningOnPortsServiceServer) GetProcessesListeningOnPortsByNamespaceAndDeployment(ctx context.Context, req *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) (*GetProcessesListeningOnPortsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProcessesListeningOnPortsByNamespaceAndDeployment not implemented")
}

func RegisterProcessListeningOnPortsServiceServer(s *grpc.Server, srv ProcessListeningOnPortsServiceServer) {
	s.RegisterService(&_ProcessListeningOnPortsService_serviceDesc, srv)
}

func _ProcessListeningOnPortsService_GetProcessesListeningOnPortsByNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProcessesListeningOnPortsByNamespaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessListeningOnPortsServiceServer).GetProcessesListeningOnPortsByNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ProcessListeningOnPortsService/GetProcessesListeningOnPortsByNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessListeningOnPortsServiceServer).GetProcessesListeningOnPortsByNamespace(ctx, req.(*GetProcessesListeningOnPortsByNamespaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProcessListeningOnPortsService_GetProcessesListeningOnPortsByNamespaceAndDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessListeningOnPortsServiceServer).GetProcessesListeningOnPortsByNamespaceAndDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ProcessListeningOnPortsService/GetProcessesListeningOnPortsByNamespaceAndDeployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessListeningOnPortsServiceServer).GetProcessesListeningOnPortsByNamespaceAndDeployment(ctx, req.(*GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProcessListeningOnPortsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.ProcessListeningOnPortsService",
	HandlerType: (*ProcessListeningOnPortsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProcessesListeningOnPortsByNamespace",
			Handler:    _ProcessListeningOnPortsService_GetProcessesListeningOnPortsByNamespace_Handler,
		},
		{
			MethodName: "GetProcessesListeningOnPortsByNamespaceAndDeployment",
			Handler:    _ProcessListeningOnPortsService_GetProcessesListeningOnPortsByNamespaceAndDeployment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1/processes_listening_on_ports_service.proto",
}

func (m *GetProcessesListeningOnPortsByNamespaceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetProcessesListeningOnPortsByNamespaceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetProcessesListeningOnPortsByNamespaceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintProcessesListeningOnPortsService(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DeploymentId) > 0 {
		i -= len(m.DeploymentId)
		copy(dAtA[i:], m.DeploymentId)
		i = encodeVarintProcessesListeningOnPortsService(dAtA, i, uint64(len(m.DeploymentId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintProcessesListeningOnPortsService(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProcessListeningOnPortWithDeploymentId) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProcessListeningOnPortWithDeploymentId) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProcessListeningOnPortWithDeploymentId) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ProcessesListeningOnPorts) > 0 {
		for iNdEx := len(m.ProcessesListeningOnPorts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ProcessesListeningOnPorts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProcessesListeningOnPortsService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.DeploymentId) > 0 {
		i -= len(m.DeploymentId)
		copy(dAtA[i:], m.DeploymentId)
		i = encodeVarintProcessesListeningOnPortsService(dAtA, i, uint64(len(m.DeploymentId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetProcessesListeningOnPortsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetProcessesListeningOnPortsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetProcessesListeningOnPortsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ProcessesListeningOnPorts) > 0 {
		for iNdEx := len(m.ProcessesListeningOnPorts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ProcessesListeningOnPorts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProcessesListeningOnPortsService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetProcessesListeningOnPortsWithDeploymentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetProcessesListeningOnPortsWithDeploymentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetProcessesListeningOnPortsWithDeploymentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ProcessListeningOnPortWithDeploymentResponse) > 0 {
		for iNdEx := len(m.ProcessListeningOnPortWithDeploymentResponse) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ProcessListeningOnPortWithDeploymentResponse[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProcessesListeningOnPortsService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintProcessesListeningOnPortsService(dAtA []byte, offset int, v uint64) int {
	offset -= sovProcessesListeningOnPortsService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetProcessesListeningOnPortsByNamespaceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovProcessesListeningOnPortsService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovProcessesListeningOnPortsService(uint64(l))
	}
	l = len(m.DeploymentId)
	if l > 0 {
		n += 1 + l + sovProcessesListeningOnPortsService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProcessListeningOnPortWithDeploymentId) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DeploymentId)
	if l > 0 {
		n += 1 + l + sovProcessesListeningOnPortsService(uint64(l))
	}
	if len(m.ProcessesListeningOnPorts) > 0 {
		for _, e := range m.ProcessesListeningOnPorts {
			l = e.Size()
			n += 1 + l + sovProcessesListeningOnPortsService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetProcessesListeningOnPortsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ProcessesListeningOnPorts) > 0 {
		for _, e := range m.ProcessesListeningOnPorts {
			l = e.Size()
			n += 1 + l + sovProcessesListeningOnPortsService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetProcessesListeningOnPortsWithDeploymentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ProcessListeningOnPortWithDeploymentResponse) > 0 {
		for _, e := range m.ProcessListeningOnPortWithDeploymentResponse {
			l = e.Size()
			n += 1 + l + sovProcessesListeningOnPortsService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovProcessesListeningOnPortsService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProcessesListeningOnPortsService(x uint64) (n int) {
	return sovProcessesListeningOnPortsService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetProcessesListeningOnPortsByNamespaceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProcessesListeningOnPortsService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetProcessesListeningOnPortsByNamespaceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetProcessesListeningOnPortsByNamespaceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProcessesListeningOnPortsService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProcessesListeningOnPortsService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProcessesListeningOnPortsService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetProcessesListeningOnPortsByNamespaceAndDeploymentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProcessesListeningOnPortsService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeploymentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProcessesListeningOnPortsService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeploymentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProcessesListeningOnPortsService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProcessListeningOnPortWithDeploymentId) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProcessesListeningOnPortsService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProcessListeningOnPortWithDeploymentId: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProcessListeningOnPortWithDeploymentId: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeploymentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProcessesListeningOnPortsService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeploymentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProcessesListeningOnPorts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProcessesListeningOnPortsService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProcessesListeningOnPorts = append(m.ProcessesListeningOnPorts, &storage.ProcessListeningOnPort{})
			if err := m.ProcessesListeningOnPorts[len(m.ProcessesListeningOnPorts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProcessesListeningOnPortsService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetProcessesListeningOnPortsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProcessesListeningOnPortsService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetProcessesListeningOnPortsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetProcessesListeningOnPortsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProcessesListeningOnPorts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProcessesListeningOnPortsService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProcessesListeningOnPorts = append(m.ProcessesListeningOnPorts, &storage.ProcessListeningOnPort{})
			if err := m.ProcessesListeningOnPorts[len(m.ProcessesListeningOnPorts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProcessesListeningOnPortsService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetProcessesListeningOnPortsWithDeploymentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProcessesListeningOnPortsService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetProcessesListeningOnPortsWithDeploymentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetProcessesListeningOnPortsWithDeploymentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProcessListeningOnPortWithDeploymentResponse", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProcessesListeningOnPortsService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProcessListeningOnPortWithDeploymentResponse = append(m.ProcessListeningOnPortWithDeploymentResponse, &ProcessListeningOnPortWithDeploymentId{})
			if err := m.ProcessListeningOnPortWithDeploymentResponse[len(m.ProcessListeningOnPortWithDeploymentResponse)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProcessesListeningOnPortsService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProcessesListeningOnPortsService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProcessesListeningOnPortsService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProcessesListeningOnPortsService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProcessesListeningOnPortsService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProcessesListeningOnPortsService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProcessesListeningOnPortsService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProcessesListeningOnPortsService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProcessesListeningOnPortsService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProcessesListeningOnPortsService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProcessesListeningOnPortsService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProcessesListeningOnPortsService = fmt.Errorf("proto: unexpected end of group")
)
