import { severities } from 'constants/severities';

export function getSeverityByCvss(cvss) {
    if (cvss < 4.0) {
        return severities.LOW_SEVERITY;
    }
    if (cvss < 7.0) {
        return severities.MEDIUM_SEVERITY;
    }
    if (cvss < 9.0) {
        return severities.HIGH_SEVERITY;
    }
    return severities.CRITICAL_SEVERITY;
}

export function getSeverityChipType(cvss) {
    const severity = getSeverityByCvss(cvss);

    if (severity === severities.LOW_SEVERITY) {
        return 'tertiary';
    }
    if (severity === severities.MEDIUM_SEVERITY) {
        return 'warning';
    }
    if (severity === severities.HIGH_SEVERITY) {
        return 'caution';
    }
    return 'alert';
}

export function getSeverityCounts(vulnerabilities = []) {
    const initialCounts = {
        [severities.CRITICAL_SEVERITY]: {
            total: 0,
            fixable: 0
        },
        [severities.HIGH_SEVERITY]: {
            total: 0,
            fixable: 0
        },
        [severities.MEDIUM_SEVERITY]: {
            total: 0,
            fixable: 0
        },
        [severities.LOW_SEVERITY]: {
            total: 0,
            fixable: 0
        }
    };

    return vulnerabilities.reduce((acc, vuln) => {
        const severity = getSeverityByCvss(vuln.cvss);
        const fixable = vuln.isFixable;

        const updatedCounts = {
            total: acc[severity].total + 1,
            fixable: fixable ? acc[severity].fixable + 1 : acc[severity].fixable
        };

        return { ...acc, [severity]: updatedCounts };
    }, initialCounts);
}

export default {
    getSeverityByCvss,
    getSeverityChipType
};
