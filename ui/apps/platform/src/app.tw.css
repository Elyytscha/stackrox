@import '~slick-carousel/slick/slick.css';
@import '~slick-carousel/slick/slick-theme.css';
@import 'css/style.css';

@import "~@stackrox/tailwind-config/light.theme.css";
@import "~@stackrox/tailwind-config/dark.theme.css";

.theme-dark .react-select__option:hover,
.theme-dark .react-select__option:focus,
.theme-dark .react-select__option:active {
    background: var(--base-400);
}

.theme-dark #integrationsPage img,
.theme-dark .login-bg img {
    filter: invert(1) saturate(0) brightness(3);
    opacity: 0.8;
}

.theme-dark .network-panel {
    filter: brightness(0.95);
}

.theme-dark .network-grid-bg {
    filter: invert(0.97) hue-rotate(185deg) brightness(1.7) saturate(0.6);
}

.theme-dark .cytoscape-container {
    filter: brightness(0.96) contrast(1) hue-rotate(0deg) saturate(7);
    opacity: 0.75;
}

.theme-dark .search-modal img {
    filter: invert(1) brightness(2.5) hue-rotate(180deg) saturate(0.6);
}

.theme-dark #wave-bg,
.theme-dark #wave-bg2 {
    display: none;
}

.theme-dark .bg-gradient-horizontal,
.theme-dark .bg-dashboard {
    background-image: none !important;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

html {
    line-height: 1.15;
}

body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.sticky {
    position: sticky !important;
}

button:focus {
    outline: none;
}

button,
select {
    @apply text-base-600 text-base font-600 appearance-none !important;
    line-height: 14px; /*weird render bug fix where select text gets clipped at bottom */
}

button[disabled] {
    @apply opacity-50 pointer-events-none !important;
}

.content-box {
    background-clip: content-box;
}

.pills {
    @apply flex flex-col flex-auto rounded-sm border border-base-300 overflow-hidden !important;
}

@screen md {
    .pills {
        @apply flex-row !important;
    }
}

.shadow-sidepanel {
    box-shadow: 0 0 64px 30px hsla(224, 34%, 14%, 0.4);
}

.shadow-underline {
    box-shadow: inset 0 -1px 0px 0 hsla(0, 0%, 0%, 0.1);
}

.disabled {
    @apply opacity-50 cursor-not-allowed pointer-events-none !important;
}

.border-collapse {
    border-collapse: collapse;
}

[class~='flex-1'] {
    @apply min-h-0 !important;
    /* Firefox needs this property to properly scroll panels with flex/overflow. Tailwind throws an exception error when using
their built-in classes, so this is a workaround to `bundle` the Firefox fix with every `flex-1` class by default*/
}

.word-break {
    word-break: break-word;
}

.word-break-all {
    word-break: break-all;
}

ul,
ol,
li,
p,
span,
div,
h1,
h2,
h3,
h4,
h5,
h6 {
    @apply break-words !important;
}

.react-modal-overlay {
    @apply fixed top-0 left-0 w-full h-full z-60 !important;
    background-color: hsla(225, 41%, 32%, 0.82);
}

.pill {
    @apply select-none bg-base-200 cursor-pointer p-2 m-2 rounded-sm whitespace-no-wrap flex-1 text-center text-xs text-base-500 font-600 !important;
}

.pill-active {
    @apply select-none cursor-pointer p-2 m-2 bg-base-300 rounded-sm whitespace-no-wrap flex-1 text-center text-xs text-base-700 font-600 !important;
}

.transition {
    animation: fadein 0.25s ease-in;
}

.transition-out {
    animation: fadeout 0.25s ease-out;
}

@keyframes fadein {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes fadeout {
    from {
        opacity: 1;
    }

    to {
        opacity: 0;
    }
}

.logo {
    width: 48px;
    height: 48px;
    position: relative;
    top: 1px;
    padding: 4px;
}

.tab-row {
    box-shadow: inset 0 -1px 0 0 theme('colors.base-400'), 0 15px 30px 0 theme('colors.base-200');
}

.tab {
    box-shadow: inset -1px 0px 0px 0px theme('colors.base-400'),
        inset 0px -1px 0px 0px theme('colors.base-400');
}

.tab-active {
    box-shadow: inset 0px 2px 0px 0px theme('colors.primary-400'),
        inset -1px 0px 0px 0px theme('colors.base-400');
}

.pill:hover {
    @apply text-primary-500 !important;
}

.pill-active {
    @apply text-primary-500 !important;
}

.transform-rotate-half-turn {
    transform: rotate(0.5turn);
}

.login-border-t {
    background: linear-gradient(
        90deg,
        hsl(26, 94%, 73%) 0%,
        hsl(4, 100%, 82%) 44.95%,
        hsl(262, 85%, 74%) 100%
    );
    height: 5px;
}

.login-bg {
    background-image: url('images/login-stripes.svg');
    background-position: top left;
    background-repeat: no-repeat;
}

.login-bg::before {
    background-image: url(images/login-stripes.svg);
    width: 100%;
    height: 100%;
    position: absolute;
    background-repeat: no-repeat;
    bottom: 0;
    right: 0;
    content: '';
    transform: rotate(180deg);
    pointer-events: none;
}

/* will clean this up at some point... */
.panel-actions:not(:empty) + div:before {
    @apply bg-base-300 absolute rounded-full;
    content: '';
    left: 9px;
    top: 50%;
    width: 2px;
    height: 50%;
    transform: translateY(-50%);
}

.close-button:before {
    display: none !important;
}

.navigation-gradient {
    height: 2px;
    background-image: linear-gradient(90deg, #d1a0ea 0%, #a3acff 44%, #78effb 99%);
    top: 0;
    z-index: 2;
    width: 100%;
}

.navigation-panel {
    position: absolute;
    left: 133px;
    z-index: 1001;
    top: 0;
    height: 100%;
    background-color: hsla(0, 0%, 21%, 0.85);
}

.navigation-panel ul {
    width: 270px;
}

.search-modal {
    position: absolute;
    left: 0;
    z-index: 10;
    top: 63px;
    height: 100%;
    background-color: hsla(225, 30%, 21%, 0.85);
    padding-bottom: 84px;
}

/* Collapsible CSS */

.Collapsible__trigger.is-open + .Collapsible__contentOuter {
    overflow: visible !important;
}

/* React Select CSS */

.react-select__single-value {
    color: inherit !important;
}

.react-select__option {
    @apply px-2 cursor-pointer !important;
}

.react-select__menu {
    @apply m-0 !important;
}

.react-select__menu-notice--no-options {
    @apply text-left !important;
}

.react-select__control--is-focused,
.react-select__control--is-focused:hover {
    @apply border-base-400 !important;
}

.react-select__value-container--is-multi {
    @apply pb-0 pl-1 !important;
}

.react-select__input input {
    @apply text-base-600 font-600 !important;
    margin-left: -2px !important;
}

.react-select__indicators {
    @apply cursor-pointer;
}

.react-select__multi-value__label {
    @apply px-2 !important;
}

.react-select__multi-value__remove {
    @apply cursor-pointer;
}

.react-select__multi-value__remove:hover {
    @apply shadow-inner;
}

.react-select__menu-list {
    @apply p-0 !important;
}

.severity-tile {
    background: hsla(0, 0%, 100%, 0.19);
}

.slick-initialized.slick-slider,
.slick-list,
.slick-track {
    height: 100%;
    user-select: text;
}

.slick-arrow::before {
    display: none;
}

.carousel-prev-arrow,
.carousel-next-arrow {
    position: absolute;
    top: 0%;
    z-index: 2;
}
.carousel-prev-arrow,
.carousel-next-arrow {
    position: absolute;
    top: 0%;
    z-index: 2;
}

.carousel-prev-arrow {
    right: 70px;
}

.carousel-next-arrow {
    right: 24px;
}

.cursor-text {
    cursor: text !important;
}

.recharts-responsive-container .recharts-tooltip-cursor {
    fill-opacity: 0;
}

.bg-inherit {
    background: inherit;
}

.left-navigation {
    width: 133px;
}

.bg-global-search-empty-state {
    background-image: url('images/globalSearchEmptyState.svg');
    background-repeat: no-repeat;
    background-position-x: 50%;
    background-position-y: 50%;
}

.text-critical-severity {
    color: hsl(7, 50%, 55%);
}

.text-high-severity {
    color: hsl(349, 50%, 78%);
}

.network-grid-bg {
    background-image: linear-gradient(hsla(216, 62%, 85%, 0.52) 1px, transparent 1px),
        linear-gradient(90deg, hsla(216, 22%, 69%, 0.2) 1px, transparent 1px),
        linear-gradient(hsla(216, 33%, 77%, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, hsla(216, 67%, 81%, 0.1) 1px, transparent 1px),
        radial-gradient(#f0f5ff 45%, #e2ebff 97%);
    background-size: 32px 32px, 32px 32px, 4px 4px, 4px 4px, 100% 100%;
    background-position: -2px -2px, -2px -2px, -2px -2px, -2px -2px, -2px -2px;
}

/**
  Outline for Simulation Mode
 */
.simulator-mode.success:before,
.simulator-mode.error:before {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 2;
    pointer-events: none;
}

.simulator-mode.error:before {
    -webkit-box-shadow: inset 0px 0px 0px 4px theme('colors.alert-600');
    -moz-box-shadow: inset 0px 0px 0px 4px theme('colors.alert-600');
    box-shadow: inset 0px 0px 0px 4px theme('colors.alert-600');
}

.simulator-mode.success:before {
    -webkit-box-shadow: inset 0px 0px 0px 4px theme('colors.success-600');
    -moz-box-shadow: inset 0px 0px 0px 4px theme('colors.success-600');
    box-shadow: inset 0px 0px 0px 4px theme('colors.success-600');
}

.top-navigation {
    box-shadow: inset 0px -1px 0 0 var(--base-400);
}

.__react_component_tooltip.type-dark.place-top:after {
    border-top-color: inherit !important;
}

.btn-class {
    @apply inline-flex px-2 rounded-sm font-600 uppercase text-center items-center min-w-16 justify-center border-2 !important;
    line-height: 14px; /* required because we were relying on the Chrome browser default of 14px earlier */
}

.btn-sm {
    @apply btn-class py-1 text-xs !important;
}

.btn {
    @apply btn-class py-2 text-sm !important;
}

.btn-icon {
    @apply flex py-2 px-2 rounded-sm font-600 uppercase text-center text-sm items-center justify-center bg-base-200 border !important;
}

.btn-success {
    @apply text-success-700 border-success-500 bg-success-200 !important;
}

.btn-success:hover {
    @apply btn-success bg-success-300 text-success-800 !important;
}

.btn-alert {
    @apply text-alert-100 border-alert-600 bg-alert-600 !important;
}

.btn-alert:hover {
    @apply btn-alert border-alert-700 bg-alert-700 !important;
}

.btn-primary {
    @apply border-primary-300 text-primary-600 !important;
}

.btn-primary:hover {
    @apply btn-primary bg-primary-100 bg-base-200 border-primary-400 !important;
}

.btn-tertiary {
    @apply border-tertiary-700 text-tertiary-700 !important;
}

.btn-tertiary:hover {
    @apply btn-tertiary bg-tertiary-700 bg-base-200 border-tertiary-600 !important;
}

.btn-base {
    @apply text-base-600 border-base-400 bg-base-100 !important;
}

.btn-base:hover {
    @apply btn-base bg-base-200 text-base-700 !important;
}

/* Network Graph CSS Classes */

.pin-network-zoom-buttons-left {
    left: -70px !important;
}

.pin-network-update-label-left {
    left: -175px !important;
}

.btn-graph-refresh circle {
    fill: hsla(225, 51%, 52%, 1);
    stroke: hsla(225, 51%, 52%, 1);
}

.node circle {
    fill: hsl(232, 35%, 38%);
}

.node.internetAccess circle:first-child {
    fill: hsl(316, 93%, 89%);
}

.bg-header {
    position: relative;
    z-index: 0;
}

.bg-header:before {
    background-image: url('images/header-bg.svg');
    background-position: 100% 0%;
    background-repeat: no-repeat;
    background-size: 640px;
    content: '';
    width: 100%;
    height: 100%;
    top: 0;
    position: absolute;
    right: 0;
    z-index: -1;
}

.bg-dashboard {
    background-image: url('images/dashboard-bg.svg'),
        url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'%3E%3Cpath fill='%239C92AC' fill-opacity='0.3' d='M1 3h1v1H1V3zm2-2h1v1H3V1z'%3E%3C/path%3E%3C/svg%3E");
    background-position: right top, center center;
    background-repeat: no-repeat, repeat;
    background-size: 1650px 450px, 4px 4px;
}

.text-separator {
    overflow: hidden;
}

.text-separator:before,
.text-separator:after {
    content: '';
    position: absolute;
    width: 100%;
    height: 1px;
    overflow: hidden;
    border: 1px solid currentColor;
}

.text-separator:before {
    transform: translateX(-100%) translateY(-50%);
    top: 50%;
}

.text-separator:after {
    transform: translateY(-50%);
    top: 50%;
}

/* React Select override */
.hide-dropdown > div:last-child {
    @apply hidden;
}

/* React Table overrides. Delete this file once all react Table properties are ported over properly to avoid the use of !important*/
@import '~react-table/react-table.css';

.ReactTable .rt-table {
    overflow: overlay !important;
}

.ReactTable .rt-noData {
    @apply bg-base-100 text-base-600 !important;
    transition: none !important;
}

/* .rt-table:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0px;
  width: 100%;
  height: 100%;
  z-index: 3;
  pointer-events: none;
  background-image: linear-gradient(90deg, rgba(255,255,255,0.16) 1%, #FFFFFF 20px), linear-gradient(180deg, rgba(255,255,255,0.16) 1%, #FFFFFF 20px);
  background-size: 20px 100%, 100% 20px;
  background-repeat: no-repeat, no-repeat;
  width: 100%;
  background-position: right, bottom;
} */

.ReactTable .-pagination {
    @apply shadow-none border-t shadow-underline pt-2 pb-2 pl-0 pr-0 !important;
}

.ReactTable input[type='checkbox'] {
    transform: scale(1.2);
    cursor: pointer;
}

.ReactTable input[type='checkbox']:hover,
.ReactTable input[type='checkbox']:focus {
    @apply .shadow;
}

.ReactTable .rt-thead {
    position: sticky;
    @apply top-0 !important;
    z-index: 5 !important;
}

.ReactTable .rt-tbody {
    overflow: initial !important;
}

.ReactTable .rt-thead .rt-th:focus {
    @apply outline-none !important;
}

.ReactTable .rt-thead.-header {
    @apply shadow-none !important;
}

.ReactTable .rt-thead.-header .rt-tr {
    box-shadow: -10px 0 0 var(--base-100), 10px 0 0 var(--base-100),
        0 2px 8px 0 hsla(230, 50%, 70%, 0.25) !important;

    @apply px-3 bg-base-100 !important;
}

.theme-dark .ReactTable .rt-thead.-header .rt-tr {
    @apply border-b border-base-200 bg-base-0 !important;
    box-shadow: -10px 0 0 var(--base-100), 10px 0 0 var(--base-100), 0 2px 8px 0 hsl(233, 25%, 15%) !important;
}

.theme-dark .network-grid-bg .ReactTable .rt-thead.-header .rt-tr {
    background: none !important;
    box-shadow: none !important;
}

.theme-dark .widget .ReactTable .rt-thead.-header .rt-tr {
    @apply bg-base-100 !important;
}

.ReactTable .rt-thead .rt-th.-sort-desc,
.ReactTable .rt-thead .rt-th.-sort-asc {
    @apply shadow-none !important;
}

.ReactTable .rt-thead .rt-th.-sort-desc div:after {
    content: ' ↓';
    position: absolute;
    margin-left: 4px;
}

.ReactTable .rt-thead .rt-th.-sort-asc div:after {
    content: ' ↑';
    position: absolute;
    margin-left: 4px;
}
.ReactTable .rt-tbody {
    @apply px-3 !important;
}

.ReactTable .rt-tbody .rt-tr {
    @apply min-h-12 bg-transparent !important;
}

.ReactTable .rt-tbody .rt-tr .rt-td {
    box-shadow: 0px -1px 0 0 theme('colors.base-300'), inset 0px -1px 0 0 theme('colors.base-300');
    @apply .whitespace-normal !important;
}

.ReactTable.expanded .rt-tbody .rt-tr .rt-td {
    box-shadow: 0px -1px 0 0 theme('colors.base-300'),
        inset 0px -1px 0 -1px theme('colors.base-300');
    @apply .whitespace-normal !important;
}

.ReactTable .rt-tbody .rt-tr-group:hover {
    @apply bg-base-200 !important;
    z-index: 3 !important;
    box-shadow: 0px -2px 0 0 theme('colors.base-400'),
        inset 0px -3px 0 -1px theme('colors.base-400');
}

.ReactTable .rt-tbody .rt-tr.row-active .rt-td,
.ReactTable .rt-tbody .rt-tr.row-active:hover .rt-td {
    @apply .text-tertiary-700 .bg-tertiary-200 !important;
    box-shadow: 0px -1px 0 0 theme('colors.tertiary-400'),
        inset 0px -1px 0 0 theme('colors.tertiary-400');
    z-index: 4 !important;
}

.ReactTable.expanded .rt-tbody .rt-tr {
    @apply pb-12 !important;
}

.ReactTable .rt-tbody .rt-tr-group {
    @apply flex-grow-0 cursor-pointer relative !important;
    border: none !important;
}

.ReactTable .rt-tr {
    @apply relative !important;
}

.ReactTable .rt-tbody .rt-td.rt-tr-actions {
    position: sticky !important;
    top: auto;
    right: 10px !important;
    z-index: 1;
    width: 0 !important;
    overflow: inherit !important;
    flex: 0 !important;
    @apply flex-row-reverse left-0 min-w-0 m-0 !important;
}

.ReactTable .rt-tr:hover .rt-tr-actions {
    @apply flex !important;
}

.ReactTable .-previous .-btn,
.ReactTable .-next .-btn {
    @apply bg-primary-100 rounded-none text-primary-600 !important;
}

.ReactTable .-previous .-btn:hover,
.ReactTable .-next .-btn:hover {
    @apply bg-primary-300 text-base-100 rounded-none !important;
}

/* will clean up and refactor all selectors at some point */

.ReactTable .rt-thead .rt-tr {
    min-width: min-content !important;
}

.ReactTable .rt-tbody .rt-td.sticky-column {
    background: inherit !important;
    position: sticky !important;
    left: 0;
    z-index: 1;
    box-shadow: 0px -1px 0 0 theme('colors.base-300'), inset 0px -1px 0 0 theme('colors.base-300'),
        11px 0 8px -4px theme('colors.base-100');
}

.ReactTable .rt-thead .rt-th.sticky-column {
    background: inherit !important;
    position: sticky !important;
    left: 0;
    z-index: 1 !important;
    box-shadow: 11px 0 8px -4px theme('colors.base-100');
}

.ReactTable .rt-thead .rt-th.sticky-column:hover {
    @apply bg-primary-200 !important;
}

.ReactTable .rt-tbody .rt-tr.row-active .rt-td.sticky-column,
.ReactTable .rt-tbody .rt-tr.row-active:hover .rt-td.sticky-column,
.ReactTable .rt-tbody .rt-tr.row-active .rt-td:first-child {
    box-shadow: 0px -1px 0 0 theme('colors.tertiary-400'),
        inset 0px -1px 0 0 theme('colors.tertiary-400'),
        11px 0 8px -4px theme('colors.tertiary-200');
    z-index: 4 !important;
}

.ReactTable .rt-tbody .rt-td.sticky-column.left-checkbox-offset,
.ReactTable .rt-thead .rt-th.sticky-column.left-checkbox-offset {
    left: 28px !important;
}

.cve-table .rt-table .rt-tbody,
.cve-table .rt-table .rt-thead,
.dockerfile-table .rt-table .rt-tbody,
.dockerfile-table .rt-table .rt-thead {
    @apply p-0 !important;
}

.cve-table .rt-tbody .rt-tr,
.cve-table .rt-thead .rt-tr,
.dockerfile-table .cve-table .rt-tbody .rt-tr,
.dockerfile-table .cve-table .rt-thead .rt-tr {
    @apply min-h-0 !important;
}

.cve-table .rt-thead .rt-th:first-child,
.dockerfile-table .cve-table .rt-thead .rt-th:first-child {
    @apply shadow-none !important;
}

.table-reset-padding .ReactTable .rt-tbody {
    @apply p-0 !important;
}

.overflow-overlay {
    overflow: overlay;
}

.redoc-wrap {
    @apply bg-base-100 !important;
}

.redoc-wrap,
.redoc-wrap .menu-content {
    @apply h-full !important;
}

.redoc-wrap .api-content {
    @apply overflow-auto !important;
}

/* CHECKBOX TOGGLE SWITCH */
.form-switch,
.form-switch-reverse {
    @apply relative select-none w-12 mr-2 leading-normal;
}

.form-switch-checkbox {
    @apply hidden;
}

.form-switch-checkbox:disabled + .form-switch-label {
    @apply opacity-50;
}

.form-switch-checkbox:disabled + .form-switch-label:before {
    @apply bg-base-200;
}

.form-switch-label {
    @apply block overflow-hidden cursor-pointer border rounded h-6;
}

.form-switch .form-switch-label,
.form-switch-reverse .form-switch-checkbox:checked + .form-switch-label {
    @apply bg-base-600 shadow-inner;
}

.form-switch-label:before {
    @apply absolute block bg-base-100 inset-y-0 w-6 border rounded -ml-1;

    right: 50%;
    content: '';
}

.form-switch .form-switch-checkbox:checked + .form-switch-label,
.form-switch-reverse .form-switch-checkbox + .form-switch-label {
    @apply bg-primary-400 shadow-none;
}

.form-switch-reverse .form-switch-checkbox:checked + .form-switch-label:before {
    right: 50%;
}

.form-switch .form-switch-checkbox:checked + .form-switch-label:before,
.form-switch-reverse .form-switch-checkbox + .form-switch-label:before {
    @apply right-0;
}

/* TOGGLE SWITCH */
/* rounded */
/* for the difference between this switch, and the form-switch above,
   see: https://uxplanet.org/checkbox-vs-toggle-switch-7fc6e83f10b8 */
.toggle-switch {
    @apply relative select-none w-12 leading-normal;
}
.toggle-switch-small {
    @apply w-8;
}
.toggle-switch-checkbox {
    /* we cannot hide with @apply, or toggle switch will not be keyboard-focusable */
    left: -9999px;
    position: absolute;
}
.toggle-switch-label {
    @apply block overflow-hidden cursor-pointer bg-transparent border rounded-full h-6 shadow-inner;

    transition: background-color 0.2s ease-in;
}
.toggle-switch-small .toggle-switch-label {
    @apply h-4;
}
.toggle-switch-label:before {
    @apply absolute block bg-base-100 inset-y-0 w-6 border rounded-full -ml-1;

    content: '';
    right: 50%;
    transition: all 0.2s ease-in;
}
.toggle-switch-small .toggle-switch-label:before {
    @apply w-4;
}

.toggle-switch-checkbox:checked + .toggle-switch-label,
.toggle-switch-checkbox:checked + .toggle-switch-label:before {
}
.toggle-switch-checkbox:checked + .toggle-switch-label {
    @apply bg-success-500;
}
.toggle-switch-alert .toggle-switch-checkbox:checked + .toggle-switch-label {
    @apply bg-alert-600;
}
.toggle-switch-checkbox:checked + .toggle-switch-label:before {
    @apply right-0;
}

.toggle-switch-checkbox:disabled + .toggle-switch-label {
    @apply opacity-50;
}

.toggle-switch-checkbox:disabled + .toggle-switch-label:before {
    @apply bg-base-200;
}

/* React-vis */
@import '~react-vis/dist/style.css';

/* Legend */
.horizontal-bar-legend .rv-discrete-color-legend-item {
    padding: 3px 4px;
}

.horizontal-bar-legend {
    border-top: 1px solid var(--base-300);
    padding: 2px 0;
}
/* Legend color swatch */
.horizontal-bar-legend .rv-discrete-color-legend-item__color__path {
    stroke-width: 3px;
    stroke-linecap: round;
}
/* Legend item text */
.horizontal-bar-legend
    .rv-discrete-color-legend-item.horizontal
    .rv-discrete-color-legend-item__title {
    display: inline-block;
    font-size: 0.8em;
    padding-left: 5px;
}

/* widget detail */
.widget-detail-bullet {
    position: relative;
    @apply font-500 py-2 px-1;
}

.widget-detail-bullet::before {
    position: absolute;
    left: -17px;
    content: '';
    top: 11px;
    @apply rounded-full border-2 border-base-400 bg-base-100;
    height: 9px;
    width: 9px;
}

.banner-background {
    background-image: url('images/list-bg.svg');
    background-repeat: no-repeat;
    background-position-y: bottom;
    background-size: contain;
}

.before:before {
    content: ' ';
}

.after:after {
    content: ' ';
}

/** Widget arrows */
.arrow-up {
    width: 0;
    height: 0;
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;

    border-bottom: 8px solid var(--primary-800);
}

.arrow-down {
    width: 0;
    height: 0;
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;

    border-top: 8px solid var(--primary-800);
}

.arrow-right {
    width: 0;
    height: 0;
    border-top: 8px solid transparent;
    border-bottom: 8px solid transparent;

    border-left: 8px solid var(--primary-800);
}

.arrow-left {
    width: 0;
    height: 0;
    border-top: 8px solid transparent;
    border-bottom: 8px solid transparent;
    border-right: 8px solid var(--base-400);
}

.table-group {
    box-shadow: inset 0px -1px 0px 0px var(--base-400), 0 -1px 0 0 var(--base-400);
}

.table-group:hover {
    box-shadow: inset 0 -1px 0px 0px var(--tertiary-400), 0 -1px 0 0 var(--tertiary-400);
}

.table-group-active {
    box-shadow: 0 1px 0px 0px var(--tertiary-500), 0 -1px 0 0 var(--tertiary-500);
}

.horizontal-bar-responsive .rv-xy-plot {
    @apply w-full h-full !important;
}

.horizontal-bar-responsive .rv-xy-plot__inner {
    @apply max-w-full !important;
    max-height: 272px !important;
}

.rv-xy-plot__grid-lines__line,
.rv-xy-plot__axis__line {
    stroke: var(--base-300) !important;
    stroke-width: 1px !important;
}

.graph-bottom-border:before {
    content: '';
    position: absolute;
    width: 100%;
    height: 1px;
    background: var(--base-300);
    bottom: 27px;
    z-index: 1;
    left: 0;
}

.rv-discrete-color-legend-item__title {
    @apply text-base-500 font-700;
}

.horizontal-bar-responsive .horizontal-bar-legend {
    @apply items-center justify-between flex absolute w-full;
    bottom: -13px;
    padding-top: 3px;
}

.pin-center {
    top: 50%;
    left: 50%;
}

/**
 * tippy.js
 */
@import '~tippy.js/dist/tippy.css';

.rox-tooltip-overlay {
    @apply text-sm text-center text-base-600 z-10 bg-tertiary-200 rounded border border-tertiary-400;
}

.tippy-tooltip {
    --arrow-size: 7px; /* it's defined in tippy.css, just making it the same */
    --arrow-color: var(--tertiary-200);
    --arrow-border-color: var(--tertiary-400);
}

.tippy-content {
    @apply rounded shadow-md p-0;
}

.tippy-tooltip > .tippy-arrow:after,
.tippy-tooltip > .tippy-arrow:before {
    content: '';
    position: absolute;
    z-index: -1;
}

/* tippy arrow on the top */
.tippy-tooltip[data-placement^='top'] > .tippy-arrow {
    border-top-color: var(--arrow-color);
    bottom: calc(-1 * (var(--arrow-size) - 1px));
}

.tippy-tooltip[data-placement^='top'] > .tippy-arrow:after,
.tippy-tooltip[data-placement^='top'] > .tippy-arrow:before {
    left: calc(-1 * var(--arrow-size));
    border-left: var(--arrow-size) solid transparent;
    border-right: var(--arrow-size) solid transparent;
}

.tippy-tooltip[data-placement^='top'] > .tippy-arrow:after {
    border-top: var(--arrow-size) solid var(--arrow-color);
    top: calc(-1 * var(--arrow-size));
}

.tippy-tooltip[data-placement^='top'] > .tippy-arrow:before {
    border-top: var(--arrow-size) solid var(--arrow-border-color);
    bottom: -1px;
}

/* tippy-arrow at the bottom */
.tippy-tooltip[data-placement^='bottom'] > .tippy-arrow {
    border-bottom-color: var(--arrow-color);
    top: calc(-1 * (var(--arrow-size) - 1px));
}

.tippy-tooltip[data-placement^='bottom'] > .tippy-arrow:after,
.tippy-tooltip[data-placement^='bottom'] > .tippy-arrow:before {
    left: calc(-1 * var(--arrow-size));
    border-left: var(--arrow-size) solid transparent;
    border-right: var(--arrow-size) solid transparent;
}

.tippy-tooltip[data-placement^='bottom'] > .tippy-arrow:after {
    border-bottom: var(--arrow-size) solid var(--arrow-color);
    bottom: calc(-1 * var(--arrow-size));
}

.tippy-tooltip[data-placement^='bottom'] > .tippy-arrow:before {
    border-bottom: var(--arrow-size) solid var(--arrow-border-color);
    bottom: calc(-1 * (var(--arrow-size) - 1px));
}

/* tippy-arrow on the left */
.tippy-tooltip[data-placement^='left'] > .tippy-arrow {
    border-left-color: var(--arrow-color);
    right: calc(-1 * (var(--arrow-size) - 1px));
}

.tippy-tooltip[data-placement^='left'] > .tippy-arrow:after,
.tippy-tooltip[data-placement^='left'] > .tippy-arrow:before {
    top: calc(-1 * var(--arrow-size));
    border-top: var(--arrow-size) solid transparent;
    border-bottom: var(--arrow-size) solid transparent;
}

.tippy-tooltip[data-placement^='left'] > .tippy-arrow:after {
    border-left: var(--arrow-size) solid var(--arrow-color);
    left: calc(-1 * var(--arrow-size));
}

.tippy-tooltip[data-placement^='left'] > .tippy-arrow:before {
    border-left: var(--arrow-size) solid var(--arrow-border-color);
    left: calc(-1 * (var(--arrow-size) - 1px));
}

/* tippy-arrow on the right */
.tippy-tooltip[data-placement^='right'] > .tippy-arrow {
    border-right-color: var(--arrow-color);
    left: calc(-1 * (var(--arrow-size) - 1px));
}

.tippy-tooltip[data-placement^='right'] > .tippy-arrow:after,
.tippy-tooltip[data-placement^='right'] > .tippy-arrow:before {
    top: calc(-1 * var(--arrow-size));
    border-top: var(--arrow-size) solid transparent;
    border-bottom: var(--arrow-size) solid transparent;
}

.tippy-tooltip[data-placement^='right'] > .tippy-arrow:after {
    border-right: var(--arrow-size) solid var(--arrow-color);
    right: calc(-1 * var(--arrow-size));
}

.tippy-tooltip[data-placement^='right'] > .tippy-arrow:before {
    border-right: var(--arrow-size) solid var(--arrow-border-color);
    right: calc(-1 * (var(--arrow-size) - 1px));
}
/** End of tippy.js styles */

.overlay:after {
    content: '';
    background: hsl(210, 15%, 34%);
    position: absolute !important;
    top: 0;
    left: 0;
    width: 100%;
    transition: opacity 0.25s ease-in-out;
    height: 100%;
    opacity: 0.5;
    z-index: 10;
    cursor: pointer;
}

.overlay:focus:after,
.overlay:hover:after {
    opacity: 0.6;
}

.bg-side-panel-wave {
    background: url('images/side-panel-icons/sidepanel-wave.svg') no-repeat, var(--base-200) !important;
    background-size: 100% !important;
}

.bg-counts-widget {
    background: url('images/counts-widget-blocks.svg');
    background-repeat: repeat-x;
    background-position: bottom right;
}

.theme-dark .bg-counts-widget {
    background: none;
}

/* multi-line truncation:
   (not available in Tailwind)
   see https://css-tricks.com/almanac/properties/l/line-clamp/
*/
.line-clamp {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    padding-bottom: 1px; /* necessary to fix bug where descenders are cut off */
}

.pdf-export .line-clamp {
    display: flex;
    -webkit-line-clamp: initial;
    -webkit-box-orient: initial;
    overflow: initial;
    padding-bottom: 0; /* necessary to fix bug where descenders are cut off */
}

.drag-grip {
    width: 18px;
    height: 40px;
    overflow: hidden;
    line-height: 4px;
    padding-top: 2px;
    padding-left: 2px;
    cursor: move;
    margin-right: 0.3em;
    font-size: 10px;
    font-family: sans-serif;
    letter-spacing: 1px;
    color: var(--base-800);
}
.drag-grip::after {
    content: '... ... ... ... ... ... ...';
}
