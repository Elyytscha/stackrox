// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stackrox/rox/central/enrichanddetect (interfaces: EnricherAndDetector)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	storage "github.com/stackrox/rox/generated/storage"
	reflect "reflect"
)

// MockEnricherAndDetector is a mock of EnricherAndDetector interface
type MockEnricherAndDetector struct {
	ctrl     *gomock.Controller
	recorder *MockEnricherAndDetectorMockRecorder
}

// MockEnricherAndDetectorMockRecorder is the mock recorder for MockEnricherAndDetector
type MockEnricherAndDetectorMockRecorder struct {
	mock *MockEnricherAndDetector
}

// NewMockEnricherAndDetector creates a new mock instance
func NewMockEnricherAndDetector(ctrl *gomock.Controller) *MockEnricherAndDetector {
	mock := &MockEnricherAndDetector{ctrl: ctrl}
	mock.recorder = &MockEnricherAndDetectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEnricherAndDetector) EXPECT() *MockEnricherAndDetectorMockRecorder {
	return m.recorder
}

// EnrichAndDetect mocks base method
func (m *MockEnricherAndDetector) EnrichAndDetect(arg0 *storage.Deployment) error {
	ret := m.ctrl.Call(m, "EnrichAndDetect", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// EnrichAndDetect indicates an expected call of EnrichAndDetect
func (mr *MockEnricherAndDetectorMockRecorder) EnrichAndDetect(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnrichAndDetect", reflect.TypeOf((*MockEnricherAndDetector)(nil).EnrichAndDetect), arg0)
}
