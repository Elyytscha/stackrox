// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stackrox/rox/central/compliance/manager (interfaces: StandardImplementationStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	manager "github.com/stackrox/rox/central/compliance/manager"
	reflect "reflect"
)

// MockStandardImplementationStore is a mock of StandardImplementationStore interface
type MockStandardImplementationStore struct {
	ctrl     *gomock.Controller
	recorder *MockStandardImplementationStoreMockRecorder
}

// MockStandardImplementationStoreMockRecorder is the mock recorder for MockStandardImplementationStore
type MockStandardImplementationStoreMockRecorder struct {
	mock *MockStandardImplementationStore
}

// NewMockStandardImplementationStore creates a new mock instance
func NewMockStandardImplementationStore(ctrl *gomock.Controller) *MockStandardImplementationStore {
	mock := &MockStandardImplementationStore{ctrl: ctrl}
	mock.recorder = &MockStandardImplementationStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStandardImplementationStore) EXPECT() *MockStandardImplementationStoreMockRecorder {
	return m.recorder
}

// ListStandardImplementations mocks base method
func (m *MockStandardImplementationStore) ListStandardImplementations() []manager.StandardImplementation {
	ret := m.ctrl.Call(m, "ListStandardImplementations")
	ret0, _ := ret[0].([]manager.StandardImplementation)
	return ret0
}

// ListStandardImplementations indicates an expected call of ListStandardImplementations
func (mr *MockStandardImplementationStoreMockRecorder) ListStandardImplementations() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListStandardImplementations", reflect.TypeOf((*MockStandardImplementationStore)(nil).ListStandardImplementations))
}

// LookupStandardImplementation mocks base method
func (m *MockStandardImplementationStore) LookupStandardImplementation(arg0 string) (manager.StandardImplementation, error) {
	ret := m.ctrl.Call(m, "LookupStandardImplementation", arg0)
	ret0, _ := ret[0].(manager.StandardImplementation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LookupStandardImplementation indicates an expected call of LookupStandardImplementation
func (mr *MockStandardImplementationStoreMockRecorder) LookupStandardImplementation(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookupStandardImplementation", reflect.TypeOf((*MockStandardImplementationStore)(nil).LookupStandardImplementation), arg0)
}
