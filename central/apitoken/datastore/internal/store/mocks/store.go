// Code generated by MockGen. DO NOT EDIT.
// Source: store.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1 "github.com/stackrox/rox/generated/api/v1"
	storage "github.com/stackrox/rox/generated/storage"
	reflect "reflect"
)

// MockStore is a mock of Store interface
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// GetTokenOrNil mocks base method
func (m *MockStore) GetTokenOrNil(id string) (*storage.TokenMetadata, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenOrNil", id)
	ret0, _ := ret[0].(*storage.TokenMetadata)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTokenOrNil indicates an expected call of GetTokenOrNil
func (mr *MockStoreMockRecorder) GetTokenOrNil(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenOrNil", reflect.TypeOf((*MockStore)(nil).GetTokenOrNil), id)
}

// GetTokens mocks base method
func (m *MockStore) GetTokens(arg0 *v1.GetAPITokensRequest) ([]*storage.TokenMetadata, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokens", arg0)
	ret0, _ := ret[0].([]*storage.TokenMetadata)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTokens indicates an expected call of GetTokens
func (mr *MockStoreMockRecorder) GetTokens(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokens", reflect.TypeOf((*MockStore)(nil).GetTokens), arg0)
}

// AddToken mocks base method
func (m *MockStore) AddToken(arg0 *storage.TokenMetadata) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToken", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToken indicates an expected call of AddToken
func (mr *MockStoreMockRecorder) AddToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToken", reflect.TypeOf((*MockStore)(nil).AddToken), arg0)
}

// RevokeToken mocks base method
func (m *MockStore) RevokeToken(id string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RevokeToken", id)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RevokeToken indicates an expected call of RevokeToken
func (mr *MockStoreMockRecorder) RevokeToken(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RevokeToken", reflect.TypeOf((*MockStore)(nil).RevokeToken), id)
}
