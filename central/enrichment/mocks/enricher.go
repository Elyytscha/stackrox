// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stackrox/rox/central/enrichment (interfaces: Enricher)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1 "github.com/stackrox/rox/generated/api/v1"
	storage "github.com/stackrox/rox/generated/storage"
	reflect "reflect"
)

// MockEnricher is a mock of Enricher interface
type MockEnricher struct {
	ctrl     *gomock.Controller
	recorder *MockEnricherMockRecorder
}

// MockEnricherMockRecorder is the mock recorder for MockEnricher
type MockEnricherMockRecorder struct {
	mock *MockEnricher
}

// NewMockEnricher creates a new mock instance
func NewMockEnricher(ctrl *gomock.Controller) *MockEnricher {
	mock := &MockEnricher{ctrl: ctrl}
	mock.recorder = &MockEnricherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEnricher) EXPECT() *MockEnricherMockRecorder {
	return m.recorder
}

// Enrich mocks base method
func (m *MockEnricher) Enrich(arg0 *v1.Deployment) (bool, error) {
	ret := m.ctrl.Call(m, "Enrich", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Enrich indicates an expected call of Enrich
func (mr *MockEnricherMockRecorder) Enrich(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Enrich", reflect.TypeOf((*MockEnricher)(nil).Enrich), arg0)
}

// RemoveMultiplier mocks base method
func (m *MockEnricher) RemoveMultiplier(arg0 string) {
	m.ctrl.Call(m, "RemoveMultiplier", arg0)
}

// RemoveMultiplier indicates an expected call of RemoveMultiplier
func (mr *MockEnricherMockRecorder) RemoveMultiplier(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveMultiplier", reflect.TypeOf((*MockEnricher)(nil).RemoveMultiplier), arg0)
}

// ReprocessDeploymentRiskAsync mocks base method
func (m *MockEnricher) ReprocessDeploymentRiskAsync(arg0 *v1.Deployment) {
	m.ctrl.Call(m, "ReprocessDeploymentRiskAsync", arg0)
}

// ReprocessDeploymentRiskAsync indicates an expected call of ReprocessDeploymentRiskAsync
func (mr *MockEnricherMockRecorder) ReprocessDeploymentRiskAsync(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReprocessDeploymentRiskAsync", reflect.TypeOf((*MockEnricher)(nil).ReprocessDeploymentRiskAsync), arg0)
}

// ReprocessRiskAsync mocks base method
func (m *MockEnricher) ReprocessRiskAsync() {
	m.ctrl.Call(m, "ReprocessRiskAsync")
}

// ReprocessRiskAsync indicates an expected call of ReprocessRiskAsync
func (mr *MockEnricherMockRecorder) ReprocessRiskAsync() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReprocessRiskAsync", reflect.TypeOf((*MockEnricher)(nil).ReprocessRiskAsync))
}

// UpdateMultiplier mocks base method
func (m *MockEnricher) UpdateMultiplier(arg0 *storage.Multiplier) {
	m.ctrl.Call(m, "UpdateMultiplier", arg0)
}

// UpdateMultiplier indicates an expected call of UpdateMultiplier
func (mr *MockEnricherMockRecorder) UpdateMultiplier(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMultiplier", reflect.TypeOf((*MockEnricher)(nil).UpdateMultiplier), arg0)
}
