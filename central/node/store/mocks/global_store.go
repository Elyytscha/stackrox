// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stackrox/rox/central/node/store (interfaces: GlobalStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	store "github.com/stackrox/rox/central/node/store"
	reflect "reflect"
)

// MockGlobalStore is a mock of GlobalStore interface
type MockGlobalStore struct {
	ctrl     *gomock.Controller
	recorder *MockGlobalStoreMockRecorder
}

// MockGlobalStoreMockRecorder is the mock recorder for MockGlobalStore
type MockGlobalStoreMockRecorder struct {
	mock *MockGlobalStore
}

// NewMockGlobalStore creates a new mock instance
func NewMockGlobalStore(ctrl *gomock.Controller) *MockGlobalStore {
	mock := &MockGlobalStore{ctrl: ctrl}
	mock.recorder = &MockGlobalStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGlobalStore) EXPECT() *MockGlobalStoreMockRecorder {
	return m.recorder
}

// CountAllNodes mocks base method
func (m *MockGlobalStore) CountAllNodes() (int, error) {
	ret := m.ctrl.Call(m, "CountAllNodes")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CountAllNodes indicates an expected call of CountAllNodes
func (mr *MockGlobalStoreMockRecorder) CountAllNodes() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CountAllNodes", reflect.TypeOf((*MockGlobalStore)(nil).CountAllNodes))
}

// GetClusterNodeStore mocks base method
func (m *MockGlobalStore) GetClusterNodeStore(arg0 string) (store.Store, error) {
	ret := m.ctrl.Call(m, "GetClusterNodeStore", arg0)
	ret0, _ := ret[0].(store.Store)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterNodeStore indicates an expected call of GetClusterNodeStore
func (mr *MockGlobalStoreMockRecorder) GetClusterNodeStore(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterNodeStore", reflect.TypeOf((*MockGlobalStore)(nil).GetClusterNodeStore), arg0)
}

// RemoveClusterNodeStores mocks base method
func (m *MockGlobalStore) RemoveClusterNodeStore(arg0 string) error {
	ret := m.ctrl.Call(m, "RemoveClusterNodeStores", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveClusterNodeStores indicates an expected call of RemoveClusterNodeStores
func (mr *MockGlobalStoreMockRecorder) RemoveClusterNodeStore(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveClusterNodeStores", reflect.TypeOf((*MockGlobalStore)(nil).RemoveClusterNodeStore), arg0)
}
