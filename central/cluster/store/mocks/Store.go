// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

import time "time"
import v1 "github.com/stackrox/rox/generated/api/v1"

// Store is an autogenerated mock type for the Store type
type Store struct {
	mock.Mock
}

// AddCluster provides a mock function with given fields: cluster
func (_m *Store) AddCluster(cluster *v1.Cluster) (string, error) {
	ret := _m.Called(cluster)

	var r0 string
	if rf, ok := ret.Get(0).(func(*v1.Cluster) string); ok {
		r0 = rf(cluster)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*v1.Cluster) error); ok {
		r1 = rf(cluster)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CountClusters provides a mock function with given fields:
func (_m *Store) CountClusters() (int, error) {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCluster provides a mock function with given fields: id
func (_m *Store) GetCluster(id string) (*v1.Cluster, bool, error) {
	ret := _m.Called(id)

	var r0 *v1.Cluster
	if rf, ok := ret.Get(0).(func(string) *v1.Cluster); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1.Cluster)
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Get(1).(bool)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(id)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetClusters provides a mock function with given fields:
func (_m *Store) GetClusters() ([]*v1.Cluster, error) {
	ret := _m.Called()

	var r0 []*v1.Cluster
	if rf, ok := ret.Get(0).(func() []*v1.Cluster); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*v1.Cluster)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoveCluster provides a mock function with given fields: id
func (_m *Store) RemoveCluster(id string) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateCluster provides a mock function with given fields: cluster
func (_m *Store) UpdateCluster(cluster *v1.Cluster) error {
	ret := _m.Called(cluster)

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1.Cluster) error); ok {
		r0 = rf(cluster)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateClusterContactTime provides a mock function with given fields: id, t
func (_m *Store) UpdateClusterContactTime(id string, t time.Time) error {
	ret := _m.Called(id, t)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, time.Time) error); ok {
		r0 = rf(id, t)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
