// +build !release

package singleton

import (
	"time"

	"github.com/stackrox/rox/pkg/license/validator"
	"github.com/stackrox/rox/pkg/timeutil"
	"github.com/stackrox/rox/pkg/utils"
)

func init() {
	utils.Must(
		validatorInstance.RegisterSigningKey(
			validator.EC256,
			// projects/stackrox-dev/locations/us-west2/keyRings/licensing-dev/cryptoKeys/dev-license/cryptoKeyVersions/4
			[]byte{
				0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,
				0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03,
				0x42, 0x00, 0x04, 0xd6, 0x11, 0xd2, 0xbe, 0xfb, 0x44, 0x42, 0xce, 0xe5,
				0xe7, 0x08, 0xec, 0x2d, 0xe8, 0x7c, 0x77, 0x5a, 0xd8, 0xe9, 0x58, 0xcf,
				0x44, 0x4d, 0x8e, 0xcf, 0xc5, 0x9c, 0x74, 0x94, 0x1f, 0x84, 0x4a, 0x6d,
				0x22, 0xdb, 0xe1, 0x2c, 0x66, 0xc1, 0x1f, 0x05, 0x76, 0x8f, 0xeb, 0x92,
				0x57, 0x96, 0x04, 0xa2, 0xd9, 0x27, 0x6e, 0xd7, 0x37, 0x41, 0xf1, 0xc6,
				0xad, 0xe5, 0x46, 0x22, 0x13, 0xab, 0x09,
			},
			validator.SigningKeyRestrictions{
				EarliestNotValidBefore:                  timeutil.MustParse(time.RFC3339, "2019-09-01T00:00:00Z"),
				LatestNotValidAfter:                     timeutil.MustParse(time.RFC3339, "2020-01-01T00:00:00Z"),
				MaxDuration:                             30 * 24 * time.Hour,
				AllowOffline:                            true,
				MaxNodeLimit:                            50,
				BuildFlavors:                            []string{"development"},
				AllowNoDeploymentEnvironmentRestriction: true,
			}),

		// OLD VERSION - NO LONGER USED FOR NEW LICENSES
		validatorInstance.RegisterSigningKey(
			validator.EC256,
			// projects/stackrox-dev/locations/us-west2/keyRings/licensing-dev/cryptoKeys/dev-license/cryptoKeyVersions/3
			[]byte{
				0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,
				0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03,
				0x42, 0x00, 0x04, 0x40, 0x95, 0x09, 0x21, 0x25, 0x6f, 0xa6, 0x5c, 0x7f,
				0x40, 0x29, 0xc5, 0xd4, 0x40, 0x5a, 0x26, 0xa2, 0x83, 0x93, 0x71, 0xab,
				0x7b, 0xa5, 0x53, 0xe6, 0x34, 0x59, 0x0f, 0xb4, 0xde, 0x84, 0xcf, 0x9c,
				0x9e, 0x8d, 0x5f, 0x41, 0x38, 0x19, 0x32, 0x06, 0x0e, 0x72, 0xd7, 0xe9,
				0x46, 0x09, 0xea, 0x11, 0xa8, 0xfe, 0xf0, 0xc2, 0xa7, 0x74, 0x15, 0xbb,
				0xb9, 0xe4, 0xee, 0x8f, 0x88, 0xac, 0x6a,
			},
			validator.SigningKeyRestrictions{
				EarliestNotValidBefore:                  timeutil.MustParse(time.RFC3339, "2019-06-01T00:00:00Z"),
				LatestNotValidAfter:                     timeutil.MustParse(time.RFC3339, "2019-10-01T00:00:00Z"),
				MaxDuration:                             30 * 24 * time.Hour,
				AllowOffline:                            true,
				MaxNodeLimit:                            50,
				BuildFlavors:                            []string{"development"},
				AllowNoDeploymentEnvironmentRestriction: true,
			}),
	)
}
