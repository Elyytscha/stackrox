package singleton

import (
	"time"

	"github.com/stackrox/rox/pkg/license/validator"
	"github.com/stackrox/rox/pkg/timeutil"
	"github.com/stackrox/rox/pkg/utils"
)

func init() {
	utils.Must(
		validatorInstance.RegisterSigningKey(
			validator.EC384,
			// projects/stackrox-licensing/locations/global/keyRings/production-key-ring/cryptoKeys/production-key/cryptoKeyVersions/1
			[]byte{
				0x30, 0x76, 0x30, 0x10, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,
				0x01, 0x06, 0x05, 0x2b, 0x81, 0x04, 0x00, 0x22, 0x03, 0x62, 0x00, 0x04,
				0xaa, 0x64, 0x79, 0x38, 0x48, 0xe9, 0x67, 0x27, 0x39, 0xc7, 0x62, 0x32,
				0x8d, 0x60, 0x68, 0x1f, 0x2c, 0x85, 0x47, 0x3e, 0x4b, 0x14, 0x0a, 0xf0,
				0x52, 0x71, 0x97, 0x07, 0xa7, 0x03, 0x8f, 0x4a, 0x63, 0xa9, 0x56, 0xb3,
				0xb6, 0xfe, 0x38, 0x5c, 0xf9, 0xb3, 0x3e, 0x07, 0x37, 0x2c, 0x29, 0x9f,
				0xd6, 0xcb, 0xdd, 0xff, 0xa8, 0xd2, 0x64, 0x27, 0x08, 0xc3, 0xac, 0x36,
				0x7b, 0x44, 0x32, 0xe9, 0x6e, 0x70, 0xd8, 0xd3, 0x64, 0xa1, 0x5c, 0x1d,
				0x57, 0xc9, 0x1a, 0x78, 0x51, 0x58, 0xa7, 0xfd, 0x6b, 0x70, 0x4a, 0x58,
				0x51, 0x34, 0x8a, 0x70, 0xbf, 0x18, 0x0a, 0xb7, 0xf3, 0x4b, 0x6e, 0xff,
			},
			validator.SigningKeyRestrictions{
				EarliestNotValidBefore: timeutil.MustParse(time.RFC3339, "2018-05-01T00:00:00Z"),
				LatestNotValidBefore:   timeutil.MustParse(time.RFC3339, "2020-04-30T00:00:00Z"),
				LatestNotValidAfter:    timeutil.MustParse(time.RFC3339, "2023-04-30T00:00:00Z"),
				// Max license duration is 3 years, add 10 days as leeway to cover leap years or general imprecision etc.
				MaxDuration:                             (3*365 + 10) * 24 * time.Hour,
				AllowOffline:                            true,
				AllowNoNodeLimit:                        true,
				AllowNoBuildFlavorRestriction:           true,
				AllowNoDeploymentEnvironmentRestriction: true,
			}),
	)
}
