package resolvers

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestValidGKEVersion(t *testing.T) {
	versions := []string{"v1.12.3-gke.5", "1.15.3-gke.11", "v1.15.3", "1.15.3-gke", "v1.15.3-gke-1", "v1.14-gke.1", "10.0.3.4"}
	expected := []bool{true, true, false, false, false, false, false}
	for i, version := range versions {
		ok, err := isGKEVersion(version)
		assert.Nil(t, err)
		assert.Equal(t, expected[i], ok)
	}
}

func TestMatchVersions(t *testing.T) {
	versionPairs := [][]string{
		{"1.15.5", "1.15.5"},
		{"v1.15.5", "1.15.5"},
		{"1.15.5", "v1.15.5"},
		{"1.14.5", "1.15.5"},
		{"1.15.5", "1.15.5-beta1"},
		{"1.15.5", "1.15.5+build"},
	}
	expectedExactVersionsMatchVals := []bool{true, true, true, false, false, true}
	expectedBaseVersionMatchVals := []bool{true, true, true, false, true, true}
	for i, versionPair := range versionPairs {
		ok, err := matchExactVersion(versionPair[0], versionPair[1])
		assert.Nil(t, err)
		assert.Equal(t, expectedExactVersionsMatchVals[i], ok)

		ok, err = matchBaseVersion(versionPair[0], versionPair[1])
		assert.Nil(t, err)
		assert.Equal(t, expectedBaseVersionMatchVals[i], ok)
	}
}
