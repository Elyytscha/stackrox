// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stackrox/rox/central/scrape (interfaces: Controller)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	central "github.com/stackrox/rox/generated/internalapi/central"
	compliance "github.com/stackrox/rox/generated/internalapi/compliance"
	concurrency "github.com/stackrox/rox/pkg/concurrency"
	set "github.com/stackrox/rox/pkg/set"
	reflect "reflect"
)

// MockController is a mock of Controller interface
type MockController struct {
	ctrl     *gomock.Controller
	recorder *MockControllerMockRecorder
}

// MockControllerMockRecorder is the mock recorder for MockController
type MockControllerMockRecorder struct {
	mock *MockController
}

// NewMockController creates a new mock instance
func NewMockController(ctrl *gomock.Controller) *MockController {
	mock := &MockController{ctrl: ctrl}
	mock.recorder = &MockControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockController) EXPECT() *MockControllerMockRecorder {
	return m.recorder
}

// ProcessScrapeUpdate mocks base method
func (m *MockController) ProcessScrapeUpdate(arg0 *central.ScrapeUpdate) error {
	ret := m.ctrl.Call(m, "ProcessScrapeUpdate", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProcessScrapeUpdate indicates an expected call of ProcessScrapeUpdate
func (mr *MockControllerMockRecorder) ProcessScrapeUpdate(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessScrapeUpdate", reflect.TypeOf((*MockController)(nil).ProcessScrapeUpdate), arg0)
}

// RunScrape mocks base method
func (m *MockController) RunScrape(arg0 set.StringSet, arg1 concurrency.Waitable) (map[string]*compliance.ComplianceReturn, error) {
	ret := m.ctrl.Call(m, "RunScrape", arg0, arg1)
	ret0, _ := ret[0].(map[string]*compliance.ComplianceReturn)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RunScrape indicates an expected call of RunScrape
func (mr *MockControllerMockRecorder) RunScrape(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunScrape", reflect.TypeOf((*MockController)(nil).RunScrape), arg0, arg1)
}
