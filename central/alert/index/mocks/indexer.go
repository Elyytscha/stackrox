// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stackrox/rox/central/alert/index (interfaces: Indexer)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1 "github.com/stackrox/rox/generated/api/v1"
	storage "github.com/stackrox/rox/generated/storage"
	search "github.com/stackrox/rox/pkg/search"
	reflect "reflect"
)

// MockIndexer is a mock of Indexer interface
type MockIndexer struct {
	ctrl     *gomock.Controller
	recorder *MockIndexerMockRecorder
}

// MockIndexerMockRecorder is the mock recorder for MockIndexer
type MockIndexerMockRecorder struct {
	mock *MockIndexer
}

// NewMockIndexer creates a new mock instance
func NewMockIndexer(ctrl *gomock.Controller) *MockIndexer {
	mock := &MockIndexer{ctrl: ctrl}
	mock.recorder = &MockIndexerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIndexer) EXPECT() *MockIndexerMockRecorder {
	return m.recorder
}

// AddListAlert mocks base method
func (m *MockIndexer) AddListAlert(arg0 *storage.ListAlert) error {
	ret := m.ctrl.Call(m, "AddListAlert", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddListAlert indicates an expected call of AddListAlert
func (mr *MockIndexerMockRecorder) AddListAlert(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddListAlert", reflect.TypeOf((*MockIndexer)(nil).AddListAlert), arg0)
}

// AddListAlerts mocks base method
func (m *MockIndexer) AddListAlerts(arg0 []*storage.ListAlert) error {
	ret := m.ctrl.Call(m, "AddListAlerts", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddListAlerts indicates an expected call of AddListAlerts
func (mr *MockIndexerMockRecorder) AddListAlerts(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddListAlerts", reflect.TypeOf((*MockIndexer)(nil).AddListAlerts), arg0)
}

// DeleteAlert mocks base method
func (m *MockIndexer) DeleteAlert(arg0 string) error {
	ret := m.ctrl.Call(m, "DeleteAlert", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAlert indicates an expected call of DeleteAlert
func (mr *MockIndexerMockRecorder) DeleteAlert(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAlert", reflect.TypeOf((*MockIndexer)(nil).DeleteAlert), arg0)
}

// Search mocks base method
func (m *MockIndexer) Search(arg0 *v1.Query) ([]search.Result, error) {
	ret := m.ctrl.Call(m, "Search", arg0)
	ret0, _ := ret[0].([]search.Result)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Search indicates an expected call of Search
func (mr *MockIndexerMockRecorder) Search(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Search", reflect.TypeOf((*MockIndexer)(nil).Search), arg0)
}
