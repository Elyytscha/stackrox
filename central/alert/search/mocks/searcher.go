// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stackrox/rox/central/alert/search (interfaces: Searcher)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1 "github.com/stackrox/rox/generated/api/v1"
	reflect "reflect"
)

// MockSearcher is a mock of Searcher interface
type MockSearcher struct {
	ctrl     *gomock.Controller
	recorder *MockSearcherMockRecorder
}

// MockSearcherMockRecorder is the mock recorder for MockSearcher
type MockSearcherMockRecorder struct {
	mock *MockSearcher
}

// NewMockSearcher creates a new mock instance
func NewMockSearcher(ctrl *gomock.Controller) *MockSearcher {
	mock := &MockSearcher{ctrl: ctrl}
	mock.recorder = &MockSearcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSearcher) EXPECT() *MockSearcherMockRecorder {
	return m.recorder
}

// SearchAlerts mocks base method
func (m *MockSearcher) SearchAlerts(arg0 *v1.Query) ([]*v1.SearchResult, error) {
	ret := m.ctrl.Call(m, "SearchAlerts", arg0)
	ret0, _ := ret[0].([]*v1.SearchResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchAlerts indicates an expected call of SearchAlerts
func (mr *MockSearcherMockRecorder) SearchAlerts(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchAlerts", reflect.TypeOf((*MockSearcher)(nil).SearchAlerts), arg0)
}

// SearchListAlerts mocks base method
func (m *MockSearcher) SearchListAlerts(arg0 *v1.Query) ([]*v1.ListAlert, error) {
	ret := m.ctrl.Call(m, "SearchListAlerts", arg0)
	ret0, _ := ret[0].([]*v1.ListAlert)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchListAlerts indicates an expected call of SearchListAlerts
func (mr *MockSearcherMockRecorder) SearchListAlerts(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchListAlerts", reflect.TypeOf((*MockSearcher)(nil).SearchListAlerts), arg0)
}

// SearchRawAlerts mocks base method
func (m *MockSearcher) SearchRawAlerts(arg0 *v1.Query) ([]*v1.Alert, error) {
	ret := m.ctrl.Call(m, "SearchRawAlerts", arg0)
	ret0, _ := ret[0].([]*v1.Alert)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchRawAlerts indicates an expected call of SearchRawAlerts
func (mr *MockSearcherMockRecorder) SearchRawAlerts(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchRawAlerts", reflect.TypeOf((*MockSearcher)(nil).SearchRawAlerts), arg0)
}
