// Code generated by boltbindings generator. DO NOT EDIT.

package store

import (
	bbolt "github.com/etcd-io/bbolt"
	proto1 "github.com/gogo/protobuf/proto"
	storage "github.com/stackrox/rox/generated/storage"
	bolthelper "github.com/stackrox/rox/pkg/bolthelper"
	proto "github.com/stackrox/rox/pkg/bolthelper/crud/proto"
)

var (
	bucketName = []byte("processWhitelistResults")
)

type store struct {
	crud proto.MessageCrud
}

func key(msg proto1.Message) []byte {
	return []byte(msg.(*storage.ProcessWhitelistResults).GetDeploymentId())
}

func alloc() proto1.Message {
	return new(storage.ProcessWhitelistResults)
}

func newStore(db *bbolt.DB) (*store, error) {
	if err := bolthelper.RegisterBucket(db, bucketName); err != nil {
		return nil, err
	}
	return &store{crud: proto.NewMessageCrud(db, bucketName, key, alloc)}, nil
}

func (s *store) DeleteWhitelistResults(id string) error {
	return s.crud.Delete(id)
}

func (s *store) GetWhitelistResults(id string) (*storage.ProcessWhitelistResults, error) {
	msg, err := s.crud.Read(id)
	if err != nil {
		return nil, err
	}
	if msg == nil {
		return nil, nil
	}
	storedKey := msg.(*storage.ProcessWhitelistResults)
	return storedKey, nil
}

func (s *store) UpsertWhitelistResults(whitelistresults *storage.ProcessWhitelistResults) error {
	return s.crud.Upsert(whitelistresults)
}
