// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stackrox/rox/central/processwhitelist/datastore (interfaces: DataStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1 "github.com/stackrox/rox/generated/api/v1"
	storage "github.com/stackrox/rox/generated/storage"
	reflect "reflect"
)

// MockDataStore is a mock of DataStore interface
type MockDataStore struct {
	ctrl     *gomock.Controller
	recorder *MockDataStoreMockRecorder
}

// MockDataStoreMockRecorder is the mock recorder for MockDataStore
type MockDataStoreMockRecorder struct {
	mock *MockDataStore
}

// NewMockDataStore creates a new mock instance
func NewMockDataStore(ctrl *gomock.Controller) *MockDataStore {
	mock := &MockDataStore{ctrl: ctrl}
	mock.recorder = &MockDataStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDataStore) EXPECT() *MockDataStoreMockRecorder {
	return m.recorder
}

// AddProcessWhitelist mocks base method
func (m *MockDataStore) AddProcessWhitelist(arg0 *storage.ProcessWhitelist) (string, error) {
	ret := m.ctrl.Call(m, "AddProcessWhitelist", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddProcessWhitelist indicates an expected call of AddProcessWhitelist
func (mr *MockDataStoreMockRecorder) AddProcessWhitelist(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddProcessWhitelist", reflect.TypeOf((*MockDataStore)(nil).AddProcessWhitelist), arg0)
}

// GetProcessWhitelist mocks base method
func (m *MockDataStore) GetProcessWhitelist(arg0 string) (*storage.ProcessWhitelist, error) {
	ret := m.ctrl.Call(m, "GetProcessWhitelist", arg0)
	ret0, _ := ret[0].(*storage.ProcessWhitelist)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProcessWhitelist indicates an expected call of GetProcessWhitelist
func (mr *MockDataStoreMockRecorder) GetProcessWhitelist(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProcessWhitelist", reflect.TypeOf((*MockDataStore)(nil).GetProcessWhitelist), arg0)
}

// GetProcessWhitelistByNames mocks base method
func (m *MockDataStore) GetProcessWhitelistByNames(arg0, arg1 string) (*storage.ProcessWhitelist, error) {
	ret := m.ctrl.Call(m, "GetProcessWhitelistByNames", arg0, arg1)
	ret0, _ := ret[0].(*storage.ProcessWhitelist)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProcessWhitelistByNames indicates an expected call of GetProcessWhitelistByNames
func (mr *MockDataStoreMockRecorder) GetProcessWhitelistByNames(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProcessWhitelistByNames", reflect.TypeOf((*MockDataStore)(nil).GetProcessWhitelistByNames), arg0, arg1)
}

// GetProcessWhitelists mocks base method
func (m *MockDataStore) GetProcessWhitelists() ([]*storage.ProcessWhitelist, error) {
	ret := m.ctrl.Call(m, "GetProcessWhitelists")
	ret0, _ := ret[0].([]*storage.ProcessWhitelist)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProcessWhitelists indicates an expected call of GetProcessWhitelists
func (mr *MockDataStoreMockRecorder) GetProcessWhitelists() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProcessWhitelists", reflect.TypeOf((*MockDataStore)(nil).GetProcessWhitelists))
}

// RemoveProcessWhitelist mocks base method
func (m *MockDataStore) RemoveProcessWhitelist(arg0 string) error {
	ret := m.ctrl.Call(m, "RemoveProcessWhitelist", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveProcessWhitelist indicates an expected call of RemoveProcessWhitelist
func (mr *MockDataStoreMockRecorder) RemoveProcessWhitelist(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveProcessWhitelist", reflect.TypeOf((*MockDataStore)(nil).RemoveProcessWhitelist), arg0)
}

// SearchRawProcessWhitelists mocks base method
func (m *MockDataStore) SearchRawProcessWhitelists(arg0 *v1.Query) ([]*storage.ProcessWhitelist, error) {
	ret := m.ctrl.Call(m, "SearchRawProcessWhitelists", arg0)
	ret0, _ := ret[0].([]*storage.ProcessWhitelist)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchRawProcessWhitelists indicates an expected call of SearchRawProcessWhitelists
func (mr *MockDataStoreMockRecorder) SearchRawProcessWhitelists(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchRawProcessWhitelists", reflect.TypeOf((*MockDataStore)(nil).SearchRawProcessWhitelists), arg0)
}
