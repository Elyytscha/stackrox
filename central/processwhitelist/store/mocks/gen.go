// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stackrox/rox/central/processwhitelist/store (interfaces: Store)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	storage "github.com/stackrox/rox/generated/storage"
	reflect "reflect"
)

// MockStore is a mock of Store interface
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// AddWhitelist mocks base method
func (m *MockStore) AddWhitelist(arg0 *storage.ProcessWhitelist) error {
	ret := m.ctrl.Call(m, "AddWhitelist", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddWhitelist indicates an expected call of AddWhitelist
func (mr *MockStoreMockRecorder) AddWhitelist(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddWhitelist", reflect.TypeOf((*MockStore)(nil).AddWhitelist), arg0)
}

// DeleteWhitelist mocks base method
func (m *MockStore) DeleteWhitelist(arg0 string) error {
	ret := m.ctrl.Call(m, "DeleteWhitelist", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteWhitelist indicates an expected call of DeleteWhitelist
func (mr *MockStoreMockRecorder) DeleteWhitelist(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteWhitelist", reflect.TypeOf((*MockStore)(nil).DeleteWhitelist), arg0)
}

// GetWhitelist mocks base method
func (m *MockStore) GetWhitelist(arg0 string) (*storage.ProcessWhitelist, error) {
	ret := m.ctrl.Call(m, "GetWhitelist", arg0)
	ret0, _ := ret[0].(*storage.ProcessWhitelist)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWhitelist indicates an expected call of GetWhitelist
func (mr *MockStoreMockRecorder) GetWhitelist(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWhitelist", reflect.TypeOf((*MockStore)(nil).GetWhitelist), arg0)
}

// ListWhitelists mocks base method
func (m *MockStore) ListWhitelists() ([]*storage.ProcessWhitelist, error) {
	ret := m.ctrl.Call(m, "ListWhitelists")
	ret0, _ := ret[0].([]*storage.ProcessWhitelist)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListWhitelists indicates an expected call of ListWhitelists
func (mr *MockStoreMockRecorder) ListWhitelists() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListWhitelists", reflect.TypeOf((*MockStore)(nil).ListWhitelists))
}

// UpdateWhitelist mocks base method
func (m *MockStore) UpdateWhitelist(arg0 *storage.ProcessWhitelist) error {
	ret := m.ctrl.Call(m, "UpdateWhitelist", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateWhitelist indicates an expected call of UpdateWhitelist
func (mr *MockStoreMockRecorder) UpdateWhitelist(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateWhitelist", reflect.TypeOf((*MockStore)(nil).UpdateWhitelist), arg0)
}
