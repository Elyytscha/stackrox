// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stackrox/rox/central/image/search (interfaces: Searcher)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1 "github.com/stackrox/rox/generated/api/v1"
	reflect "reflect"
)

// MockSearcher is a mock of Searcher interface
type MockSearcher struct {
	ctrl     *gomock.Controller
	recorder *MockSearcherMockRecorder
}

// MockSearcherMockRecorder is the mock recorder for MockSearcher
type MockSearcherMockRecorder struct {
	mock *MockSearcher
}

// NewMockSearcher creates a new mock instance
func NewMockSearcher(ctrl *gomock.Controller) *MockSearcher {
	mock := &MockSearcher{ctrl: ctrl}
	mock.recorder = &MockSearcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSearcher) EXPECT() *MockSearcherMockRecorder {
	return m.recorder
}

// SearchImages mocks base method
func (m *MockSearcher) SearchImages(arg0 *v1.Query) ([]*v1.SearchResult, error) {
	ret := m.ctrl.Call(m, "SearchImages", arg0)
	ret0, _ := ret[0].([]*v1.SearchResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchImages indicates an expected call of SearchImages
func (mr *MockSearcherMockRecorder) SearchImages(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchImages", reflect.TypeOf((*MockSearcher)(nil).SearchImages), arg0)
}

// SearchListImages mocks base method
func (m *MockSearcher) SearchListImages(arg0 *v1.Query) ([]*v1.ListImage, error) {
	ret := m.ctrl.Call(m, "SearchListImages", arg0)
	ret0, _ := ret[0].([]*v1.ListImage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchListImages indicates an expected call of SearchListImages
func (mr *MockSearcherMockRecorder) SearchListImages(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchListImages", reflect.TypeOf((*MockSearcher)(nil).SearchListImages), arg0)
}

// SearchRawImages mocks base method
func (m *MockSearcher) SearchRawImages(arg0 *v1.Query) ([]*v1.Image, error) {
	ret := m.ctrl.Call(m, "SearchRawImages", arg0)
	ret0, _ := ret[0].([]*v1.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchRawImages indicates an expected call of SearchRawImages
func (mr *MockSearcherMockRecorder) SearchRawImages(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchRawImages", reflect.TypeOf((*MockSearcher)(nil).SearchRawImages), arg0)
}
