package message

import (
	"github.com/stackrox/rox/generated/internalapi/central"
	"github.com/stackrox/rox/generated/storage"
)

// CompatibilityDetectionMessage should be used by old handlers
// it's here for retrocompatibility reasons.
type CompatibilityDetectionMessage struct {
	// Object The deployment object that needs to be processed by the detector
	Object *storage.Deployment
	// Action the event action (CREATE_RESOURCE, REMOVE_RESOURCE, UPDATE_RESOURCE, and SYNC_RESOURCE)
	Action central.ResourceAction
}

// ResourceEvent message used by the event pipeline's components
type ResourceEvent struct {
	// ForwardMessages messages generated by the handlers that need to be forwarded to central
	ForwardMessages []*central.SensorEvent
	// CompatibilityDetectionDeployment should be used by old handlers
	// and it's here for retrocompatibility reasons.
	// This property should be removed in the future and only the
	// DetectionObject should be sent
	CompatibilityDetectionDeployment []CompatibilityDetectionMessage
	// ReprocessDeployments is also used for compatibility reasons with Network Policy handlers
	// in the future this will not be needed as the dependencies are taken care by the resolvers
	ReprocessDeployments []string
}

// WrapOutputMessage wraps the SensorEvents, CompatibilityDetectionMessages, and the ReprocessDeployments into a ResourceEvent message
func WrapOutputMessage(sensorMessages []*central.SensorEvent, detectionDeployment []CompatibilityDetectionMessage, reprocessDeploymentsIds []string) *ResourceEvent {
	return &ResourceEvent{
		ForwardMessages:                  sensorMessages,
		CompatibilityDetectionDeployment: detectionDeployment,
		ReprocessDeployments:             reprocessDeploymentsIds,
	}
}

// MergeOutputMessages merges two ResourceEvents
func MergeOutputMessages(dest, src *ResourceEvent) *ResourceEvent {
	if dest == nil {
		dest = &ResourceEvent{}
	}

	if src != nil {
		dest.ReprocessDeployments = append(dest.ReprocessDeployments, src.ReprocessDeployments...)
		dest.ForwardMessages = append(dest.ForwardMessages, src.ForwardMessages...)
		dest.CompatibilityDetectionDeployment = append(dest.CompatibilityDetectionDeployment, src.CompatibilityDetectionDeployment...)
	}
	return dest
}
