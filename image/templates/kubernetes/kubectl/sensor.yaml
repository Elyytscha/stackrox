apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sensor
  namespace: stackrox
  labels:
    app: sensor
  annotations:
    owner: stackrox
    email: support@stackrox.com
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: sensor
  template:
    metadata:
      namespace: stackrox
      labels:
        app: sensor
    spec:
      securityContext:
        runAsUser: 4000
        fsGroup: 4000
      {{if eq .ClusterType "KUBERNETES_CLUSTER"}}
      imagePullSecrets:
        - name: stackrox
      {{- end}}
      serviceAccount: sensor
      containers:
      - image: {{.Image}}
        name: sensor
        ports:
          - containerPort: 8443
            name: api
        command:
          - kubernetes-sensor
        resources:
          requests:
            memory: "250Mi"
            cpu: "200m"
          limits:
            memory: "1000Mi"
            cpu: "500m"
        securityContext:
          runAsNonRoot: true
          readOnlyRootFilesystem: true
        env:
        - name: {{.PublicEndpointEnv}}
          value: {{.PublicEndpoint}}
        - name: {{.ClusterIDEnv}}
          value: {{.ClusterID}}
        - name: {{.AdvertisedEndpointEnv}}
          value: sensor.stackrox:443
          {{if eq .ClusterType "OPENSHIFT_CLUSTER"}}
        - name: {{.OpenshiftAPIEnv}}
          value: "true"
          {{- end}}
        volumeMounts:
        - name: varlog
          mountPath: /var/log/stackrox/
        - name: certs
          mountPath: /run/secrets/stackrox.io/certs/
          readOnly: true
      {{if .MonitoringEndpoint}}
      - name: telegraf
        image: {{.Image}}
        command:
          - /telegraf
        env:
        - name: SERVICE
          value: sensor
        - name: CLUSTER_NAME
          value: {{.ClusterName}}
        - name: PROMETHEUS_ENDPOINT
          value: https://localhost:8443
        - name: MONITORING_ENDPOINT
          value: {{.MonitoringEndpoint}}
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "100Mi"
            cpu: "100m"
        securityContext:
          runAsNonRoot: true
          readOnlyRootFilesystem: true
        volumeMounts:
          - name: varlog
            mountPath: /var/log/stackrox/
          - name: monitoring-client-volume
            mountPath: /run/secrets/stackrox.io/monitoring/certs
            readOnly: true
          - name: telegraf-config-volume
            mountPath: /etc/telegraf/
            readOnly: true
      {{- end}}
      volumes:
      - name: certs
        secret:
          secretName: sensor-tls
          items:
          - key: sensor-cert.pem
            path: cert.pem
          - key: sensor-key.pem
            path: key.pem
          - key: ca.pem
            path: ca.pem
      - name: varlog
        emptyDir: {}
      {{if .MonitoringEndpoint}}
      - name: monitoring-client-volume
        secret:
          secretName: monitoring-client
      - name: telegraf-config-volume
        configMap:
          name: telegraf
      {{- end}}
---
apiVersion: v1
kind: Service
metadata:
  name: sensor
  namespace: stackrox
spec:
  ports:
  - name: https
    port: 443
    targetPort: api
  selector:
    app: sensor
  type: ClusterIP
{{if ne .CollectionMethod "NO_COLLECTION" -}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: collector
  namespace: stackrox
imagePullSecrets:
- name: stackrox
- name: collector-stackrox
---
apiVersion: apps/v1beta2
kind: DaemonSet
metadata:
  labels:
    service: collector
    app: collector
  name: collector
  namespace: stackrox
spec:
  selector:
    matchLabels:
      service: collector
  template:
    metadata:
      labels:
        service: collector
        app: collector
      namespace: stackrox
    spec:
      serviceAccount: collector
      containers:
      - name: collector
        image: {{.CollectorImage}}
        imagePullPolicy: Always
        env:
        - name: COLLECTOR_CONFIG
          value: '{"useEbpf":{{eq .CollectionMethod "EBPF"}},"tlsConfig":{"caCertPath":"/var/run/secrets/stackrox.io/certs/ca.pem","clientCertPath":"/var/run/secrets/stackrox.io/certs/cert.pem","clientKeyPath":"/var/run/secrets/stackrox.io/certs/key.pem"},"syscalls":["accept","connect","execve","fork","clone","close","shutdown","socket"]}'
        - name: GRPC_SERVER
          value: sensor.stackrox:443
        - name: MODULE_DOWNLOAD_BASE_URL
          value: {{.CollectorModuleDownloadBaseURL}}
        resources:
          limits:
            cpu: 750m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 320Mi
        securityContext:
          capabilities:
            drop:
            - NET_RAW
          privileged: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /host/var/run/docker.sock
          name: var-run-docker-sock
        - mountPath: /host/proc
          name: proc-ro
          readOnly: true
        - mountPath: /module
          name: tmpfs-module
        {{if eq .CollectionMethod "EBPF"}}
        - mountPath: /host/etc
          name: etc-ro
          readOnly: true
        - mountPath: /host/sys/kernel/debug/tracing/events
          name: sys-kernel-debug-tracing-events-ro
          readOnly: true
        - mountPath: /host/sys/devices/system/cpu
          name: sys-devices-system-cpu-ro
          readOnly: true
        {{- else}}
        - mountPath: /host/dev
          name: dev-ro
          readOnly: true
        - mountPath: /host/sys/module
          name: sys-module-ro
          readOnly: true
        {{- end}}
        - mountPath: /run/secrets/stackrox.io/certs/
          name: certs
          readOnly: true
      {{if .MonitoringEndpoint}}
      - name: telegraf
        image: {{.Image}}
        command:
          - /telegraf
        env:
        - name: SERVICE
          value: collector
        - name: CLUSTER_NAME
          value: {{.ClusterName}}
        - name: PROMETHEUS_ENDPOINT
          value: http://localhost:9090
        - name: MONITORING_ENDPOINT
          value: {{.MonitoringEndpoint}}
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "100Mi"
            cpu: "100m"
        securityContext:
          capabilities:
            drop: ["NET_RAW"]
          readOnlyRootFilesystem: true
        volumeMounts:
          - name: monitoring-client-volume
            mountPath: /run/secrets/stackrox.io/monitoring/certs
            readOnly: true
          - name: telegraf-config-volume
            mountPath: /etc/telegraf/
            readOnly: true
      {{- end}}
      volumes:
      - hostPath:
          path: /var/run/docker.sock
        name: var-run-docker-sock
      - hostPath:
          path: /proc
        name: proc-ro
      - emptyDir:
          medium: Memory
        name: tmpfs-module
      {{if eq .CollectionMethod "EBPF"}}
      - hostPath: 
          path: /etc
        name: etc-ro
      - hostPath: 
          path: /sys/kernel/debug/tracing/events
        name: sys-kernel-debug-tracing-events-ro
      - hostPath: 
          path: /sys/devices/system/cpu
        name: sys-devices-system-cpu-ro
      {{- else}}
      - hostPath:
          path: /dev
        name: dev-ro
      - hostPath:
          path: /sys/module
        name: sys-module-ro
      {{- end}}
      - name: certs
        secret:
          secretName: collector-tls
          items:
          - key: collector-cert.pem
            path: cert.pem
          - key: collector-key.pem
            path: key.pem
          - key: ca.pem
            path: ca.pem
      {{if .MonitoringEndpoint}}
      - name: monitoring-client-volume
        secret:
          secretName: monitoring-client
      - name: telegraf-config-volume
        configMap:
          name: telegraf
      {{- end}}
{{- end}}
