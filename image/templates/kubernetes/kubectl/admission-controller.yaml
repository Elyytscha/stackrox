{{ if .AdmissionControlService }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admission-control
  namespace: stackrox
  labels:
    app.kubernetes.io/name: stackrox
    auto-upgrade.stackrox.io/component: "sensor"
imagePullSecrets:
  - name: stackrox
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: watch-config
  namespace: stackrox
  labels:
    app.kubernetes.io/name: stackrox
    auto-upgrade.stackrox.io/component: "sensor"
rules:
  - apiGroups: ['']
    resources: ['configmaps']
    verbs: ['get', 'list', 'watch']
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: admission-control-watch-config
  namespace: stackrox
  labels:
    app.kubernetes.io/name: stackrox
    auto-upgrade.stackrox.io/component: "sensor"
subjects:
  - kind: ServiceAccount
    name: admission-control
    namespace: stackrox
roleRef:
  kind: Role
  name: watch-config
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admission-control
  namespace: stackrox
  labels:
    app.kubernetes.io/name: stackrox
    app: admission-control
    auto-upgrade.stackrox.io/component: "sensor"
  annotations:
    owner: stackrox
    email: support@stackrox.com
spec:
  replicas: 3
  minReadySeconds: 0
  selector:
    matchLabels:
      app: admission-control
  template:
    metadata:
      namespace: stackrox
      labels:
        app: admission-control
    spec:
      # Attempt to schedule these on master nodes
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: In
                    values:
                      - "true"
      securityContext:
        runAsUser: 4000
        fsGroup: 4000
      serviceAccount: admission-control
      containers:
        - image: {{.Image}}
          name: admission-control
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /ready
              port: 8443
          ports:
            - containerPort: 8443
              name: webhook
          command:
            - admission-control
          resources:
            requests:
              memory: "100Mi"
              cpu: "50m"
            limits:
              memory: "500Mi"
              cpu: "500m"
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          env:
          {{ range $var, $value := .EnvVars -}}
          - name: {{ $var }}
            value: {{ jsonquote $value }}
          {{ end }}
          - name: ROX_SENSOR_ENDPOINT
            value: sensor.stackrox:443
          volumeMounts:
            - name: config
              mountPath: /run/config/stackrox.io/admission-control/config/
              readOnly: true
            - name: config-store
              mountPath: /var/lib/stackrox/admission-control/
            - name: certs
              mountPath: /run/secrets/stackrox.io/certs/
              readOnly: true
      volumes:
        - name: certs
          secret:
            secretName: admission-control-tls
            items:
              - key: admission-control-cert.pem
                path: cert.pem
              - key: admission-control-key.pem
                path: key.pem
              - key: ca.pem
                path: ca.pem
        - name: config
          configMap:
            name: {{.AdmissionControlConfigMapName}}
            optional: true
        - name: config-store
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: admission-control
  namespace: stackrox
  labels:
    app.kubernetes.io/name: stackrox
    auto-upgrade.stackrox.io/component: "sensor"
spec:
  ports:
    - name: https
      port: 443
      targetPort: webhook
      protocol: TCP
  selector:
    app: admission-control
  type: ClusterIP
---
{{- end }}
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: stackrox
  labels:
    app.kubernetes.io/name: stackrox
    auto-upgrade.stackrox.io/component: "sensor"
webhooks:
  - name: policyeval.stackrox.io
    rules:
      - apiGroups:
          - '*'
        apiVersions:
          - '*'
        operations:
          - CREATE
        resources:
          - pods
          - deployments
          - replicasets
          - replicationcontrollers
          - statefulsets
          - daemonsets
    namespaceSelector:
      matchExpressions:
        - key: namespace.metadata.stackrox.io/name
          operator: NotIn
          values:
            - stackrox
            - kube-system
            - kube-public
    failurePolicy: Ignore
    clientConfig:
      caBundle: {{.CABundle}}
      service:
        namespace: stackrox
{{ if .AdmissionControlService }}
        name: admission-control
        path: /validate
{{ else }}
        name: sensor-webhook
        path: /admissioncontroller
{{- end }}
