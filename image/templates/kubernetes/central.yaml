apiVersion: v1
kind: ServiceAccount
metadata:
  name: central
  namespace: {{.K8sConfig.Namespace}}
imagePullSecrets:
- name: stackrox
---
apiVersion: v1
kind: Service
metadata:
  name: central
  namespace: {{.K8sConfig.Namespace}}
spec:
  ports:
  - name: https
    port: 443
    targetPort: 443
  selector:
    app: central
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: central
  namespace: {{.K8sConfig.Namespace}}
  labels:
    app: central
  annotations:
    owner: stackrox
    email: support@stackrox.com
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: central
  template:
    metadata:
      namespace: {{.K8sConfig.Namespace}}
      labels:
        app: central
    spec:
      {{if .HostPath.WithNodeSelector -}}
      nodeSelector:
        {{.HostPath.NodeSelectorKey}}: {{.HostPath.NodeSelectorValue}}
      {{end -}}
      serviceAccount: central
      containers:
      - name: central
        image: {{.K8sConfig.MainImage}}
        command:
          - /stackrox/entrypoint.sh
          - central
        ports:
          - name: api
            containerPort: 443
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "8Gi"
            cpu: "2000m"
        securityContext:
          capabilities:
            drop: ["NET_RAW"]
          readOnlyRootFilesystem: true
        {{ if .Features -}}
        env:
        {{ range .Features -}}
        - name: "{{ .EnvVar }}"
          value: "true"
        {{ end -}}
        {{ end -}}
        volumeMounts:
        - name: varlog
          mountPath: /var/log/stackrox/
        - name: central-certs-volume
          mountPath: /run/secrets/stackrox.io/certs/
          readOnly: true
        - name: central-jwt-volume
          mountPath: /run/secrets/stackrox.io/jwt/
          readOnly: true
        - name: additional-ca-volume
          mountPath: /usr/local/share/ca-certificates/
          readOnly: true
        {{if not .K8sConfig.MonitoringType.None}}
        - name: monitoring-client-volume
          mountPath: /run/secrets/stackrox.io/monitoring/
          readOnly: true
        {{- end}}
        {{if .HostPath -}}
        - name: {{.HostPath.Name}}
          mountPath: /var/lib/stackrox
        {{else if .External -}}
        - name: {{.External.Name}}
          mountPath: /var/lib/stackrox
        {{- end}}
      {{if not .K8sConfig.MonitoringType.None}}
      - name: telegraf
        image: {{.K8sConfig.MainImage}}
        command:
          - /telegraf.sh
        env:
          - name: SERVICE
            value: central
          - name: CLUSTER_NAME
            value: main
          - name: PROMETHEUS_ENDPOINT
            value: https://localhost:443
          - name: MONITORING_ENDPOINT
            value: {{.K8sConfig.MonitoringEndpoint}}
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "100Mi"
            cpu: "100m"
        securityContext:
          capabilities:
            drop: ["NET_RAW"]
        volumeMounts:
        - name: varlog
          mountPath: /var/log/stackrox/
          readOnly: true
        - name: monitoring-client-volume
          mountPath: /run/secrets/stackrox.io/monitoring/
          readOnly: true
        - name: telegraf-config-volume
          mountPath: /etc/telegraf/
          readOnly: true
      {{- end}}
      volumes:
      - name: varlog
        emptyDir: {}
      - name: central-certs-volume
        secret:
          secretName: central-tls
      - name: central-jwt-volume
        secret:
          secretName: central-jwt
      - name: additional-ca-volume
        secret:
          secretName: additional-ca
          optional: true
      {{if not .K8sConfig.MonitoringType.None}}
      - name: monitoring-client-volume
        secret:
          secretName: monitoring
          items:
            - key: monitoring-password
              path: password
            - key: monitoring-ca.pem
              path: ca.pem
      - name: telegraf-config-volume
        configMap:
          name: telegraf
      {{- end}}
      {{if .HostPath -}}
      - name: {{.HostPath.Name}}
        hostPath:
          path: {{.HostPath.HostPath}}
      {{else if .External -}}
      - name: {{.External.Name}}
        persistentVolumeClaim:
          claimName: {{.External.Name}}
      {{- end}}
{{if .External -}}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{.External.Name}}
  namespace: {{.K8sConfig.Namespace}}
spec:
  {{if .External.StorageClass -}}
  storageClassName: {{.External.StorageClass}}
  {{- end}}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
{{- end}}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ext-to-central
  namespace: {{.K8sConfig.Namespace}}
spec:
  ingress:
  - ports:
    - port: 443
      protocol: TCP
  podSelector:
    matchLabels:
      app: central
  policyTypes:
  - Ingress
