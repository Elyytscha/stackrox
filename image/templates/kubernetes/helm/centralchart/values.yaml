
version: {{.K8sConfig.MainImageTag}}

clusterType: {{.ClusterType.String}}

namespace: stackrox

image: {{.K8sConfig.MainImage}}

{{if not .K8sConfig.Monitoring.Type.None}}
monitoring:
  endpoint: {{.K8sConfig.Monitoring.Endpoint}}
{{- end}}

persistence:
{{if .HostPath}}
  name: stackrox-db
  type: hostpath
  value:
    hostPath:
      path: {{.HostPath.HostPath}}
{{- else if .External}}
  name: {{.External.Name}}
  type: pv
  storageClass: {{.External.StorageClass}}
  value:
    persistentVolumeClaim:
      claimName: {{.External.Name}}
  size: {{.External.Size}}
{{- else}}
  name: empty-db
  type: none
  value:
    emptyDir: {}
{{- end}}

{{if .HostPath.WithNodeSelector -}}
nodeSelector:
  {{.HostPath.NodeSelectorKey}}: {{.HostPath.NodeSelectorValue}}
{{end -}}

resources:
  requests:
    memory: "4Gi"
    cpu: "1500m"
  limits:
    memory: "8Gi"
    cpu: "2000m"

secrets:
  tls:
    data:
      ca.pem: {{index .SecretsBase64Map "ca.pem"}}
      ca-key.pem: {{index .SecretsBase64Map "ca-key.pem"}}
      jwt-key.der: {{index .SecretsBase64Map "jwt-key.der"}}
      cert.pem: {{index .SecretsBase64Map "cert.pem"}}
      key.pem: {{index .SecretsBase64Map "key.pem"}}

  {{if ne (index .SecretsBase64Map "htpasswd") ""}}
  htpasswd:
    data:
      htpasswd: {{index .SecretsBase64Map "htpasswd"}}
  {{end -}}
  {{if ne (index .SecretsBase64Map "central-license") ""}}
  centrallicense:
    data:
      license.lic: {{index .SecretsBase64Map "central-license"}}
  {{end -}}

  {{ if ne (index .SecretsBase64Map "default-tls.crt") "" }}
  defaulttlscert:
    data:
      tls.crt: {{ index .SecretsBase64Map "default-tls.crt" }}
      tls.key: {{ index .SecretsBase64Map "default-tls.key" }}
  {{end -}}

  {{if not .K8sConfig.Monitoring.Type.None}}
  monitoring:
    data:
      monitoring-client-cert.pem: {{index .SecretsBase64Map "monitoring-client-cert.pem"}}
      monitoring-client-key.pem: {{index .SecretsBase64Map "monitoring-client-key.pem"}}
      ca.pem: {{index .SecretsBase64Map "ca.pem"}}
  {{- end}}

exposure:
  port: 443
  {{if eq .K8sConfig.LoadBalancerType.String "LOAD_BALANCER"}}
  type: LoadBalancer
  {{else if eq .K8sConfig.LoadBalancerType.String "NODE_PORT"}}
  type: NodePort
  {{else if eq .K8sConfig.LoadBalancerType.String "ROUTE"}}
  type: Route
  {{else}}
  type: None
  {{- end}}

env:
  {{range $key, $value := .Environment -}}
  - name: {{ $key }}
    value: "{{ $value }}"
  {{ else -}}
  []
  {{- end }}
