apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sensor
  namespace: {{.Namespace}}
  labels:
    app: sensor
  annotations:
    owner: stackrox
    email: support@stackrox.com
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: sensor
  template:
    metadata:
      namespace: {{.Namespace}}
      labels:
        app: sensor
    spec:
    {{if .ImagePullSecret }}
      imagePullSecrets:
        - name: {{.ImagePullSecret}}
    {{- end}}
      serviceAccount: sensor
      containers:
      - image: {{.Image}}
        name: sensor
        command:
          - kubernetes-sensor
        resources:
          requests:
            memory: "200Mi"
            cpu: "200m"
          limits:
            memory: "500Mi"
            cpu: "500m"
        securityContext:
          capabilities:
            drop: ["NET_RAW"]
          readOnlyRootFilesystem: true
        env:
        - name: {{.PublicEndpointEnv}}
          value: {{.PublicEndpoint}}
        - name: {{.ClusterIDEnv}}
          value: {{.ClusterID}}
        - name: {{.ImageEnv}}
          value: {{.Image}}
        - name: {{.AdvertisedEndpointEnv}}
          value: sensor.{{.Namespace}}:443
{{if .ImagePullSecret }}
        - name: {{.ImagePullSecretEnv}}
          value: {{.ImagePullSecret}}
{{- end}}
        - name: {{.OpenshiftAPIEnv}}
          value: {{.OpenshiftAPI}}
        - name: ROX_PREVENT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ROX_PREVENT_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        volumeMounts:
        - name: certs
          mountPath: /run/secrets/stackrox.io/certs/
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: sensor-tls
          items:
          - key: sensor-cert.pem
            path: cert.pem
          - key: sensor-key.pem
            path: key.pem
          - key: central-ca.pem
            path: ca.pem
---
apiVersion: v1
kind: Service
metadata:
  name: sensor
  namespace: {{.Namespace}}
spec:
  ports:
  - name: https
    port: 443
    targetPort: 443
  selector:
    app: sensor
  type: ClusterIP
{{if .RuntimeSupport -}}
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    service: collector
  name: collector
  namespace: {{.Namespace}}
spec:
  selector:
    matchLabels:
      service: collector
  template:
    metadata:
      labels:
        service: collector
      namespace: {{.Namespace}}
    spec:
      containers:
      - env:
        - name: COLLECTOR_CONFIG
          value: '{"tlsConfig":{"caCertPath":"/var/run/secrets/stackrox.io/certs/ca.pem","clientCertPath":"/var/run/secrets/stackrox.io/certs/cert.pem","clientKeyPath":"/var/run/secrets/stackrox.io/certs/key.pem"},"generic_syscalls":["execve","connect","accept"],"syscalls":["accept","connect","execve"],"process_syscalls":["execve"],"output":"stdout","processSignalFormat":"process_summary_text","signalOutput":"grpc","signalFormat":"signal_summary"}'
        - name: GRPC_SERVER
          value: sensor.stackrox:443
        image: {{.CollectorImage}}
        name: collector
        resources:
          limits:
            cpu: 750m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 320Mi
        securityContext:
          capabilities:
            drop:
            - NET_RAW
          privileged: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /host/var/run/docker.sock
          name: var-run-docker-sock
        - mountPath: /module
          name: tmpfs-module
        - mountPath: /host/dev
          name: dev-ro
          readOnly: true
        - mountPath: /host/proc
          name: proc-ro
          readOnly: true
        - mountPath: /host/sys/module
          name: sys-module-ro
          readOnly: true
        - name: certs
          mountPath: /run/secrets/stackrox.io/certs/
          readOnly: true
      imagePullSecrets:
      - name: {{.ImagePullSecret}}
      volumes:
      - hostPath:
          path: /var/run/docker.sock
        name: var-run-docker-sock
      - emptyDir:
          medium: Memory
        name: tmpfs-module
      - hostPath:
          path: /dev
        name: dev-ro
      - hostPath:
          path: /proc
        name: proc-ro
      - hostPath:
          path: /sys/module
        name: sys-module-ro
      - name: certs
        secret:
          secretName: collector-tls
          items:
          - key: collector-cert.pem
            path: cert.pem
          - key: collector-key.pem
            path: key.pem
          - key: central-ca.pem
            path: ca.pem
{{- end}}
