apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rhacs-operator-{{ .Release.Name }}
    control-plane: controller-manager
  name: rhacs-operator-controller-manager-{{ .Release.Name }}
  namespace: "{{ .Values.operator.targetNamespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rhacs-operator-{{ .Release.Name }}
      control-plane: controller-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rhacs-operator-{{ .Release.Name }}
        control-plane: controller-manager
    spec:
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          env:
            - name: ROX_OPERATOR_OUTER_MODE
              value: "{{.Values.operator.outerMode}}"
            - name: RELATED_IMAGE_MAIN
            - name: RELATED_IMAGE_SCANNER
            - name: RELATED_IMAGE_SCANNER_SLIM
            - name: RELATED_IMAGE_SCANNER_DB
            - name: RELATED_IMAGE_SCANNER_DB_SLIM
            - name: RELATED_IMAGE_COLLECTOR_SLIM
            - name: RELATED_IMAGE_COLLECTOR_FULL
            - name: RELATED_IMAGE_ROXCTL
            - name: RELATED_IMAGE_CENTRAL_DB
            - name: MEMORY_LIMIT_BYTES
              valueFrom:
                resourceFieldRef:
                  containerName: manager
                  resource: limits.memory
                  divisor: '0'
          image: quay.io/stackrox-io/stackrox-operator:4.1.0-545-g969c09989e
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
          # # FIXME: REMOVE BEFORE PROD
          # volumeMounts:
          # - mountPath: /tmp/k8s-webhook-server/serving-certs
          #   name: cert
          #   readOnly: true  
          # # FIXME: REMOVE BEFORE PROD
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
      serviceAccount: rhacs-operator-controller-manager-{{ .Release.Name }}
      serviceAccountName: rhacs-operator-controller-manager-{{ .Release.Name }}
      terminationGracePeriodSeconds: 10
      # # FIXME: REMOVE BEFORE PROD
      # volumes:
      # - name: cert
      #   secret:
      #     defaultMode: 420
      #     secretName: webhook-server-cert
      # # FIXME: REMOVE BEFORE PROD
---
# # FIXME: REMOVE BEFORE PROD
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: rhacs-operator-{{ .Release.Name }}-serving-cert
#   namespace: "{{ .Values.operator.targetNamespace }}"
# spec:
#   dnsNames:
#   - rhacs-operator-{{ .Release.Name }}-webhook-service.rhacs-operator-{{ .Release.Name }}.svc
#   - rhacs-operator-{{ .Release.Name }}-webhook-service.rhacs-operator-{{ .Release.Name }}.svc.cluster.local
#   issuerRef:
#     kind: Issuer
#     name: rhacs-operator-{{ .Release.Name }}-selfsigned-issuer
#   secretName: webhook-server-cert
# ---
# apiVersion: cert-manager.io/v1
# kind: Issuer
# metadata:
#   name: rhacs-operator-{{ .Release.Name }}-selfsigned-issuer
#   namespace: "{{ .Values.operator.targetNamespace }}"
# spec:
#   selfSigned: {}
# ---
# apiVersion: admissionregistration.k8s.io/v1
# kind: ValidatingWebhookConfiguration
# metadata:
#   annotations:
#     cert-manager.io/inject-ca-from: stackrox-operator-system/rhacs-operator-{{ .Release.Name }}-serving-cert
#   creationTimestamp: null
#   name: rhacs-operator-{{ .Release.Name }}-validating-webhook-configuration
# webhooks:
# - admissionReviewVersions:
#   - v1
#   clientConfig:
#     service:
#       name: rhacs-operator-{{ .Release.Name }}-webhook-service
#       namespace: "{{ .Values.operator.targetNamespace }}"-{{ .Release.Name }}
#       path: /validate-platform-stackrox-io-v1alpha1-central
#   failurePolicy: Fail
#   name: vcentral.kb.io
#   rules:
#   - apiGroups:
#     - platform.stackrox.io
#     apiVersions:
#     - v1alpha1
#     operations:
#     - CREATE
#     - UPDATE
#     resources:
#     - centrals
#   sideEffects: None
# # FIXME: REMOVE BEFORE PROD
