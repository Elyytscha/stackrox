{{if eq .Values.exposure.type "Route"}}
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: central
  namespace: {{.Values.namespace}}
  labels:
    app.kubernetes.io/name: stackrox
spec:
  port:
    targetPort: https
  tls:
    termination: passthrough
  to:
    kind: Service
    name: central
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: central-mtls
  namespace: {{.Values.namespace}}
  labels:
    app.kubernetes.io/name: stackrox
spec:
  host: central.{{.Values.namespace}}
  port:
    targetPort: https
  tls:
    termination: passthrough
  to:
    kind: Service
    name: central
{{else if ne .Values.exposure.type "None"}}
apiVersion: v1
kind: Service
metadata:
{{if eq .Values.exposure.type "NodePort"}}
  annotations:
    cloud.google.com/app-protocols: '{"api": "HTTPS"}'
    service.alpha.kubernetes.io/app-protocols: '{"api": "HTTPS"}'
{{- end}}
  name: central-loadbalancer
  namespace: {{.Values.namespace}}
  labels:
    app.kubernetes.io/name: stackrox
spec:
  ports:
  - name: api
    port: {{.Values.exposure.port}}
    targetPort: api
  selector:
    app: central
  type: {{.Values.exposure.type}}
{{- end}}
